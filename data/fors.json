{
  "/": [
    "!",
    "\"@charset\"",
    "\"all\"-named elements",
    "\"bluetooth\"",
    "\"camera\"",
    "\"coep\" report type",
    "\"is origin potentially trustworthy?\"",
    "\"microphone\"",
    "\"no-referrer\"",
    "\"no-referrer-when-downgrade\"",
    "\"origin\"",
    "\"origin-when-cross-origin\"",
    "\"same-origin\"",
    "\"strict-origin\"",
    "\"strict-origin-when-cross-origin\"",
    "\"unsafe-url\"",
    "\"web-share\"",
    "\"xr\"",
    "\"xr-session-supported\"",
    "\"xr-standard\" gamepad mapping",
    "#",
    "%array.prototype%",
    "%error.prototype%",
    "%evalerror.prototype%",
    "%function.prototype%",
    "%json.parse%",
    "%object.prototype%",
    "%object.prototype.valueof%",
    "%rangeerror.prototype%",
    "%referenceerror.prototype%",
    "%syntaxerror.prototype%",
    "%typeerror.prototype%",
    "%urierror.prototype%",
    "&",
    "&&",
    "'all' media group",
    "'allow'",
    "'audio' media group",
    "'bitmap' media group",
    "'block'",
    "'continuous' media group",
    "'false'",
    "'grid' media group",
    "'interactive media group",
    "'name'",
    "'none'",
    "'paged' media group",
    "'rendering-intent'",
    "'report-sample'",
    "'self'",
    "'speech' media group",
    "'src'",
    "'static' media group",
    "'strict-dynamic'",
    "'tactile' media group",
    "'true'",
    "'unsafe-allow-redirects'",
    "'unsafe-eval'",
    "'unsafe-hashes'",
    "'unsafe-inline'",
    "'visual' media group",
    "'wasm-unsafe-eval'",
    "*",
    "+",
    ",",
    "--*",
    "-webkit-align-content",
    "-webkit-align-items",
    "-webkit-align-self",
    "-webkit-animation",
    "-webkit-animation-delay",
    "-webkit-animation-direction",
    "-webkit-animation-duration",
    "-webkit-animation-fill-mode",
    "-webkit-animation-iteration-count",
    "-webkit-animation-name",
    "-webkit-animation-play-state",
    "-webkit-animation-timing-function",
    "-webkit-appearance",
    "-webkit-backface-visibility",
    "-webkit-background-clip",
    "-webkit-background-origin",
    "-webkit-background-size",
    "-webkit-border-bottom-left-radius",
    "-webkit-border-bottom-right-radius",
    "-webkit-border-radius",
    "-webkit-border-top-left-radius",
    "-webkit-border-top-right-radius",
    "-webkit-box-align",
    "-webkit-box-flex",
    "-webkit-box-ordinal-group",
    "-webkit-box-orient",
    "-webkit-box-pack",
    "-webkit-box-shadow",
    "-webkit-box-sizing",
    "-webkit-filter",
    "-webkit-flex",
    "-webkit-flex-basis",
    "-webkit-flex-direction",
    "-webkit-flex-flow",
    "-webkit-flex-grow",
    "-webkit-flex-shrink",
    "-webkit-flex-wrap",
    "-webkit-image-set()",
    "-webkit-justify-content",
    "-webkit-line-clamp",
    "-webkit-linear-gradient()",
    "-webkit-mask",
    "-webkit-mask-box-image",
    "-webkit-mask-box-image-outset",
    "-webkit-mask-box-image-repeat",
    "-webkit-mask-box-image-slice",
    "-webkit-mask-box-image-source",
    "-webkit-mask-box-image-width",
    "-webkit-mask-clip",
    "-webkit-mask-composite",
    "-webkit-mask-image",
    "-webkit-mask-origin",
    "-webkit-mask-position",
    "-webkit-mask-repeat",
    "-webkit-mask-size",
    "-webkit-order",
    "-webkit-perspective",
    "-webkit-perspective-origin",
    "-webkit-radial-gradient()",
    "-webkit-repeating-linear-gradient()",
    "-webkit-repeating-radial-gradient()",
    "-webkit-text-fill-color",
    "-webkit-text-size-adjust",
    "-webkit-text-stroke",
    "-webkit-text-stroke-color",
    "-webkit-text-stroke-width",
    "-webkit-transform",
    "-webkit-transform-origin",
    "-webkit-transform-style",
    "-webkit-transition",
    "-webkit-transition-delay",
    "-webkit-transition-duration",
    "-webkit-transition-property",
    "-webkit-transition-timing-function",
    "-webkit-user-select",
    "/deep/",
    "100...900 weight values",
    "1st <length>",
    "200 response",
    "200 status code",
    "2d",
    "2d context creation algorithm",
    "2d matrix",
    "2nd <length>",
    "3d matrix",
    "3d rendering context",
    "3d transform functions",
    "3d transformed element",
    "3dof",
    "3rd <length [0,âˆž]>",
    "4th <length>",
    "4x4 abstract matrix",
    "4xx",
    "4xx status code",
    "5xx",
    "5xx status code",
    "6dof",
    ":-webkit-autofill",
    "::after",
    "::attr()",
    "::backdrop",
    "::before",
    "::content",
    "::file-selector-button",
    "::first-letter",
    "::first-line",
    "::grammar-error",
    "::highlight(<custom-highlight-name>)",
    "::marker",
    "::nth-fragment()",
    "::part()",
    "::placeholder",
    "::selection",
    "::shadow",
    "::slotted()",
    "::spelling-error",
    "::target-text",
    ":active",
    ":after",
    ":any-link",
    ":autofill",
    ":before",
    ":blank",
    ":buffering",
    ":checked",
    ":current",
    ":current()",
    ":default",
    ":defined",
    ":dir()",
    ":dir(ltr)",
    ":dir(rtl)",
    ":disabled",
    ":empty",
    ":enabled",
    ":first",
    ":first-child",
    ":first-letter",
    ":first-line",
    ":first-of-page",
    ":first-of-type",
    ":focus",
    ":focus-visible",
    ":focus-within",
    ":fullscreen",
    ":future",
    ":has()",
    ":host",
    ":host()",
    ":host-context()",
    ":hover",
    ":in-range",
    ":indeterminate",
    ":invalid",
    ":is()",
    ":lang",
    ":lang()",
    ":last-child",
    ":last-of-page",
    ":last-of-type",
    ":left",
    ":link",
    ":local-link",
    ":matches()",
    ":modal",
    ":muted",
    ":not()",
    ":nth-child()",
    ":nth-col()",
    ":nth-last-child()",
    ":nth-last-col()",
    ":nth-last-of-type()",
    ":nth-of-page(n)",
    ":nth-of-type()",
    ":only-child",
    ":only-of-type",
    ":optional",
    ":out-of-range",
    ":past",
    ":paused",
    ":picture-in-picture",
    ":placeholder-shown",
    ":playing",
    ":read-only",
    ":read-write",
    ":required",
    ":right",
    ":root",
    ":scope",
    ":scope element",
    ":seeking",
    ":snapped",
    ":snapped-block",
    ":snapped-inline",
    ":snapped-x",
    ":snapped-y",
    ":stalled",
    ":start-of-page",
    ":target",
    ":target-within",
    ":user-invalid",
    ":user-valid",
    ":valid",
    ":visited",
    ":volume-locked",
    ":where()",
    ":xr-overlay",
    "<(-token>",
    "<)-token>",
    "<?xml-stylesheet?>",
    "<[-token>",
    "<]-token>",
    "<absolute-color-base>",
    "<absolute-size>",
    "<alpha-value>",
    "<alphavalue>",
    "<an+b>",
    "<angle-percentage>",
    "<angle>",
    "<angular-color-hint>",
    "<angular-color-stop-list>",
    "<angular-color-stop>",
    "<animateable-feature>",
    "<antecedent>",
    "<any-value>",
    "<at-keyword-token>",
    "<atomic-condition>",
    "<attachment>",
    "<attr-fallback>",
    "<attr-matcher>",
    "<attr-modifier>",
    "<attr-name>",
    "<attr-type>",
    "<attribute-selector>",
    "<auto-repeat>",
    "<auto-track-list>",
    "<bad-string-token>",
    "<bad-url-token>",
    "<baseline-position>",
    "<basic-shape-rect>",
    "<basic-shape>",
    "<bg-clip>",
    "<bg-image>",
    "<bg-layer>",
    "<bg-position>",
    "<bg-size>",
    "<blend-mode>",
    "<boolean-constant>",
    "<border-style>",
    "<border-width>",
    "<bottom>",
    "<box>",
    "<calc-constant>",
    "<calc-number-product>",
    "<calc-number-sum>",
    "<calc-number-value>",
    "<calc-product>",
    "<calc-sum>",
    "<calc-value>",
    "<cdc-token>",
    "<cdo-token>",
    "<cf-image>",
    "<class-selector>",
    "<clip-source>",
    "<cmyk-component>",
    "<col-width>",
    "<colon-token>",
    "<color-font-tech>",
    "<color-interpolation-method>",
    "<color-space>",
    "<color-stop-angle>",
    "<color-stop-length>",
    "<color-stop-list>",
    "<color-stop>",
    "<color>",
    "<colorspace-params>",
    "<combinator>",
    "<comma-token>",
    "<common-lig-values>",
    "<comparison-operand>",
    "<comparison-operator>",
    "<compat-auto>",
    "<complex-selector-list>",
    "<complex-selector>",
    "<composite-mode>",
    "<compositing-operator>",
    "<compound-selector-list>",
    "<compound-selector>",
    "<condition-in-parens>",
    "<condition>",
    "<consequent>",
    "<container-condition>",
    "<container-name>",
    "<content-distribution>",
    "<content-position>",
    "<contextual-alt-values>",
    "<coord-box>",
    "<counter-name>",
    "<counter-style-name>",
    "<counter-style>",
    "<counter>",
    "<cubic-bezier-easing-function>",
    "<custom-arg>",
    "<custom-highlight-name>",
    "<custom-ident>",
    "<custom-params>",
    "<custom-property-name>",
    "<custom-selector>",
    "<dasharray>",
    "<dashed-ident>",
    "<dashndashdigit-ident>",
    "<declaration-list>",
    "<declaration-value>",
    "<delim-token>",
    "<deprecated-color>",
    "<device-performance>",
    "<dimension-token>",
    "<dimension-unit>",
    "<dimension>",
    "<discretionary-lig-values>",
    "<display-box>",
    "<display-inside>",
    "<display-internal>",
    "<display-legacy>",
    "<display-listitem>",
    "<display-outside>",
    "<easing-function>",
    "<east-asian-variant-values>",
    "<east-asian-width-values>",
    "<element-offset-edge>",
    "<element-offset>",
    "<eof-token>",
    "<explicit-track-list>",
    "<extension-name>",
    "<extent-keyword>",
    "<extent>",
    "<family-name>",
    "<feature-tag-value>",
    "<feature-value-name>",
    "<fill-rule>",
    "<filter-function>",
    "<filter-value-list>",
    "<final-bg-layer>",
    "<fixed-breadth>",
    "<fixed-repeat>",
    "<fixed-size>",
    "<flex>",
    "<font-face-name>",
    "<font-feature-tech>",
    "<font-format",
    "<font-format>",
    "<font-stretch-css3>",
    "<font-tech>",
    "<font-variant-css21>",
    "<font-variant-css2>",
    "<font-weight-absolute>",
    "<forgiving-relative-selector-list>",
    "<forgiving-selector-list>",
    "<frequency-percentage>",
    "<frequency>",
    "<function-token>",
    "<general-enclosed>",
    "<generic-family>",
    "<generic-voice>",
    "<geometry-box>",
    "<gradient>",
    "<hash-token>",
    "<hex-color>",
    "<historical-lig-values>",
    "<hue-interpolation-method>",
    "<hue>",
    "<id-selector>",
    "<id>",
    "<ident-token>",
    "<ident>",
    "<identifier>",
    "<image-set-option>",
    "<image-src>",
    "<image-tags>",
    "<image>",
    "<import-condition>",
    "<inflexible-breadth>",
    "<integer>",
    "<isolation-mode>",
    "<keyframe-block>",
    "<keyframe-selector>",
    "<keyframes-name>",
    "<layer-name>",
    "<layout-box>",
    "<leader-type>",
    "<left>",
    "<length-percentage>",
    "<length>",
    "<line-name-list>",
    "<line-names>",
    "<line-style>",
    "<line-width>",
    "<linear-color-hint>",
    "<linear-color-stop>",
    "<margin-width>",
    "<marker-ref>",
    "<mask-layer>",
    "<mask-reference>",
    "<mask-source>",
    "<masking-mode>",
    "<media-and>",
    "<media-condition-without-or>",
    "<media-condition>",
    "<media-feature>",
    "<media-in-parens>",
    "<media-not>",
    "<media-or>",
    "<media-query-list>",
    "<media-query>",
    "<media-type>",
    "<mf-boolean>",
    "<mf-comparison>",
    "<mf-eq>",
    "<mf-gt>",
    "<mf-lt>",
    "<mf-name>",
    "<mf-plain>",
    "<mf-range>",
    "<mf-value>",
    "<minmax>",
    "<mq-boolean>",
    "<n-dimension>",
    "<na-name>",
    "<na-prefix>",
    "<name-repeat>",
    "<named-color>",
    "<namespace-attr>",
    "<namespace-prefix>",
    "<ndash-dimension>",
    "<ndashdigit-dimension>",
    "<ndashdigit-ident>",
    "<ns-prefix>",
    "<number-optional-number>",
    "<number-percentage>",
    "<number-token>",
    "<number>",
    "<numeric-figure-values>",
    "<numeric-fraction-values>",
    "<numeric-spacing-values>",
    "<outline-line-style>",
    "<overflow-position>",
    "<padding-width>",
    "<page-selector-list>",
    "<page-selector>",
    "<paint-box>",
    "<paint>",
    "<percentage-token>",
    "<percentage>",
    "<points>",
    "<polar-color-space>",
    "<position>",
    "<predefined-rgb-params>",
    "<predefined-rgb>",
    "<pseudo-class-selector>",
    "<pseudo-element-selector>",
    "<pseudo-page>",
    "<query-in-parens>",
    "<quirky-color>",
    "<quirky-length>",
    "<quote>",
    "<ratio>",
    "<rectangular-color-space>",
    "<relative-selector-list>",
    "<relative-selector>",
    "<relative-size>",
    "<repeat-style>",
    "<resolution>",
    "<reversed-counter-name>",
    "<right>",
    "<rounding-strategy>",
    "<row-height>",
    "<rule-list>",
    "<scope-end>",
    "<scope-start>",
    "<scroll-timeline-offset>",
    "<selector-list>",
    "<selector-scope>",
    "<self-position>",
    "<semicolon-token>",
    "<shadow>",
    "<shape-arg>",
    "<shape-box>",
    "<shape-command>",
    "<shape-radius>",
    "<shape>",
    "<side-or-corner>",
    "<signed-integer>",
    "<signless-integer>",
    "<simple-selector-list>",
    "<simple-selector>",
    "<single-animation-composition>",
    "<single-animation-direction>",
    "<single-animation-fill-mode>",
    "<single-animation-iteration-count>",
    "<single-animation-play-state>",
    "<single-animation-timeline>",
    "<single-animation>",
    "<single-transition-property>",
    "<single-transition>",
    "<size-feature>",
    "<size>",
    "<source-size-list>",
    "<source-size-value>",
    "<source-size>",
    "<specific-voice>",
    "<speech-rate>",
    "<step-easing-function>",
    "<step-position>",
    "<string-token>",
    "<string>",
    "<style-block>",
    "<style-condition>",
    "<style-feature>",
    "<style-in-parens>",
    "<style-query>",
    "<stylesheet>",
    "<subclass-selector>",
    "<supports-condition>",
    "<supports-decl>",
    "<supports-feature>",
    "<supports-font-format-fn>",
    "<supports-font-tech-fn>",
    "<supports-in-parens>",
    "<supports-selector-fn>",
    "<svg-paint>",
    "<symbol>",
    "<symbols-type>",
    "<system-color>",
    "<target-name>",
    "<target>",
    "<time-percentage>",
    "<time>",
    "<timeline-name>",
    "<toggle-value>",
    "<top>",
    "<track-breadth>",
    "<track-list>",
    "<track-repeat>",
    "<track-size>",
    "<transform-function>",
    "<transform-list>",
    "<type-or-unit>",
    "<type-selector>",
    "<urange>",
    "<uri>",
    "<url-modifier>",
    "<url-token>",
    "<url>",
    "<viewport-length>",
    "<visual-box>",
    "<whitespace-token>",
    "<wq-name>",
    "<xyz-params>",
    "<xyz-space>",
    "<xyz>",
    "<zero>",
    "<{-token>",
    "<}-token>",
    ">",
    "?",
    "@-webkit-keyframes",
    "@@hasinstance",
    "@@isconcatspreadable",
    "@@toprimitive",
    "@@tostringtag",
    "@bottom-center",
    "@bottom-left",
    "@bottom-left-corner",
    "@bottom-right",
    "@bottom-right-corner",
    "@charset",
    "@color-profile",
    "@container",
    "@counter-style",
    "@custom-media",
    "@custom-selector",
    "@else",
    "@font-face",
    "@font-feature-values",
    "@font-palette-values",
    "@import",
    "@keyframes",
    "@layer",
    "@left-bottom",
    "@left-middle",
    "@left-top",
    "@media",
    "@nest",
    "@page",
    "@property",
    "@region",
    "@right-bottom",
    "@right-middle",
    "@right-top",
    "@scope",
    "@scroll-timeline",
    "@supports",
    "@top-center",
    "@top-left",
    "@top-left-corner",
    "@top-right",
    "@top-right-corner",
    "@viewport",
    "@when",
    "AbortController",
    "AbortError",
    "AbortSignal",
    "AbstractRange",
    "AbstractWorker",
    "AcquireReadableStreamBYOBReader",
    "AcquireReadableStreamDefaultReader",
    "AcquireWritableStreamDefaultWriter",
    "AddEventListenerOptions",
    "AesCbcParams",
    "AesCtrParams",
    "AesDerivedKeyParams",
    "AesGcmParams",
    "AesKeyAlgorithm",
    "AesKeyGenParams",
    "Algorithm",
    "AlgorithmIdentifier",
    "AllowResizable",
    "AllowShared",
    "AllowedBluetoothDevice",
    "AllowedUSBDevice",
    "AnalyserNode",
    "AnalyserOptions",
    "Animatable",
    "Animation",
    "AnimationEffect",
    "AnimationEvent",
    "AnimationEventInit",
    "AnimationFrameProvider",
    "AnimationNodeList",
    "AnimationPlayState",
    "AnimationPlaybackEvent",
    "AnimationPlaybackEventInit",
    "AnimationReplaceState",
    "AnimationTimeline",
    "AnimationWorkletGlobalScope",
    "AnimatorInstanceConstructor",
    "ArrayBuffer",
    "ArrayBufferView",
    "AssignedNodesOptions",
    "AttestationConveyancePreference",
    "Attr",
    "AudioBuffer",
    "AudioBufferOptions",
    "AudioBufferSourceNode",
    "AudioBufferSourceOptions",
    "AudioContext",
    "AudioContextLatencyCategory",
    "AudioContextOptions",
    "AudioContextState",
    "AudioDestinationNode",
    "AudioListener",
    "AudioNode",
    "AudioNodeOptions",
    "AudioParam",
    "AudioParamDescriptor",
    "AudioParamMap",
    "AudioProcessingEvent",
    "AudioProcessingEventInit",
    "AudioRenderCapacity",
    "AudioRenderCapacityEvent",
    "AudioRenderCapacityEventInit",
    "AudioRenderCapacityOptions",
    "AudioScheduledSourceNode",
    "AudioTimestamp",
    "AudioTrack",
    "AudioTrackList",
    "AudioWorklet",
    "AudioWorkletGlobalScope",
    "AudioWorkletNode",
    "AudioWorkletNodeOptions",
    "AudioWorkletProcessCallback",
    "AudioWorkletProcessCallback()",
    "AudioWorkletProcessor",
    "AudioWorkletProcessorConstructor",
    "AuthenticationExtensionsClientInputs",
    "AuthenticationExtensionsClientInputsJSON",
    "AuthenticationExtensionsClientOutputs",
    "AuthenticationExtensionsClientOutputsJSON",
    "AuthenticationExtensionsLargeBlobInputs",
    "AuthenticationExtensionsLargeBlobOutputs",
    "AuthenticationResponseJSON",
    "AuthenticatorAssertionResponse",
    "AuthenticatorAssertionResponseJSON",
    "AuthenticatorAttachment",
    "AuthenticatorAttestationResponse",
    "AuthenticatorAttestationResponseJSON",
    "AuthenticatorResponse",
    "AuthenticatorSelectionCriteria",
    "AuthenticatorTransport",
    "AutomationRate",
    "BarProp",
    "Base64URLString",
    "BaseAudioContext",
    "BaseComputedKeyframe",
    "BaseKeyframe",
    "BasePropertyIndexedKeyframe",
    "Baseline",
    "BeforeUnloadEvent",
    "BigInt64Array",
    "BigInteger",
    "BigUint64Array",
    "BinaryData",
    "BinaryType",
    "BiquadFilterNode",
    "BiquadFilterOptions",
    "BiquadFilterType",
    "Blob",
    "BlobCallback",
    "BlobPart",
    "BlobPropertyBag",
    "BlockFragmentationType",
    "Bluetooth",
    "BluetoothAdvertisingEvent",
    "BluetoothAdvertisingEventInit",
    "BluetoothCharacteristicProperties",
    "BluetoothCharacteristicUUID",
    "BluetoothDataFilterInit",
    "BluetoothDescriptorUUID",
    "BluetoothDevice",
    "BluetoothDeviceEventHandlers",
    "BluetoothLEScanFilterInit",
    "BluetoothManufacturerDataFilterInit",
    "BluetoothManufacturerDataMap",
    "BluetoothPermissionDescriptor",
    "BluetoothPermissionResult",
    "BluetoothPermissionStorage",
    "BluetoothRemoteGATTCharacteristic",
    "BluetoothRemoteGATTDescriptor",
    "BluetoothRemoteGATTServer",
    "BluetoothRemoteGATTService",
    "BluetoothServiceDataFilterInit",
    "BluetoothServiceDataMap",
    "BluetoothServiceUUID",
    "BluetoothUUID",
    "Body",
    "BodyInit",
    "BoxQuadOptions",
    "BreakToken",
    "BreakTokenOptions",
    "BreakType",
    "BroadcastChannel",
    "BufferSource",
    "ByteLengthQueuingStrategy",
    "ByteString",
    "CDATASection",
    "CEReactions",
    "COSEAlgorithmIdentifier",
    "CSPViolationReportBody",
    "CSS",
    "CSSAnimation",
    "CSSBoxType",
    "CSSColor",
    "CSSColorAngle",
    "CSSColorNumber",
    "CSSColorPercent",
    "CSSColorRGBComp",
    "CSSColorValue",
    "CSSConditionRule",
    "CSSContainerRule",
    "CSSCounterStyleRule",
    "CSSFontFaceLoadEvent",
    "CSSFontFaceLoadEventInit",
    "CSSFontFaceRule",
    "CSSFontFeatureValuesMap",
    "CSSFontFeatureValuesRule",
    "CSSFontPaletteValuesRule",
    "CSSGroupingRule",
    "CSSHSL",
    "CSSHWB",
    "CSSImageValue",
    "CSSImportRule",
    "CSSKeyframeRule",
    "CSSKeyframesRule",
    "CSSKeywordValue",
    "CSSKeywordish",
    "CSSLCH",
    "CSSLab",
    "CSSLayerBlockRule",
    "CSSLayerStatementRule",
    "CSSMarginRule",
    "CSSMathClamp",
    "CSSMathInvert",
    "CSSMathMax",
    "CSSMathMin",
    "CSSMathNegate",
    "CSSMathOperator",
    "CSSMathProduct",
    "CSSMathSum",
    "CSSMathValue",
    "CSSMatrixComponent",
    "CSSMatrixComponentOptions",
    "CSSMediaRule",
    "CSSNamespaceRule",
    "CSSNestingRule",
    "CSSNumberish",
    "CSSNumericArray",
    "CSSNumericBaseType",
    "CSSNumericType",
    "CSSNumericValue",
    "CSSOKLCH",
    "CSSOKLab",
    "CSSOMString",
    "CSSPageRule",
    "CSSPerspective",
    "CSSPerspectiveValue",
    "CSSPositionValue",
    "CSSPropertyRule",
    "CSSPseudoElement",
    "CSSRGB",
    "CSSRotate",
    "CSSRule",
    "CSSRuleList",
    "CSSScale",
    "CSSScrollTimelineRule",
    "CSSSkew",
    "CSSSkewX",
    "CSSSkewY",
    "CSSStyleDeclaration",
    "CSSStyleRule",
    "CSSStyleSheet",
    "CSSStyleSheetInit",
    "CSSStyleValue",
    "CSSSupportsRule",
    "CSSTransformComponent",
    "CSSTransformValue",
    "CSSTransition",
    "CSSTranslate",
    "CSSUnitValue",
    "CSSUnparsedSegment",
    "CSSUnparsedValue",
    "CSSVariableReferenceValue",
    "CSSViewportRule",
    "Cache",
    "CacheQueryOptions",
    "CacheStorage",
    "CameraDevicePermissionDescriptor",
    "CanPlayTypeResult",
    "CanTransferArrayBuffer",
    "CanvasCompositing",
    "CanvasDirection",
    "CanvasDrawImage",
    "CanvasDrawPath",
    "CanvasFillRule",
    "CanvasFillStrokeStyles",
    "CanvasFilter",
    "CanvasFilterInput",
    "CanvasFilters",
    "CanvasFontKerning",
    "CanvasFontStretch",
    "CanvasFontVariantCaps",
    "CanvasGradient",
    "CanvasImageData",
    "CanvasImageSmoothing",
    "CanvasImageSource",
    "CanvasLineCap",
    "CanvasLineJoin",
    "CanvasPath",
    "CanvasPathDrawingStyles",
    "CanvasPattern",
    "CanvasRect",
    "CanvasRenderingContext2D",
    "CanvasRenderingContext2DSettings",
    "CanvasShadowStyles",
    "CanvasState",
    "CanvasText",
    "CanvasTextAlign",
    "CanvasTextBaseline",
    "CanvasTextDrawingStyles",
    "CanvasTextRendering",
    "CanvasTransform",
    "CanvasUserInterface",
    "Capabilities",
    "CaretPosition",
    "ChannelCountMode",
    "ChannelInterpretation",
    "ChannelMergerNode",
    "ChannelMergerOptions",
    "ChannelSplitterNode",
    "ChannelSplitterOptions",
    "CharacterData",
    "CharacteristicEventHandlers",
    "CheckVisibilityOptions",
    "ChildBreakToken",
    "ChildDisplayType",
    "ChildNode",
    "Clamp",
    "Client",
    "ClientQueryOptions",
    "ClientType",
    "Clients",
    "CloneAsUint8Array",
    "CloseEvent",
    "CloseEventInit",
    "CollectedClientData",
    "ColorSpaceConversion",
    "Comment",
    "CompileError",
    "CompositeOperation",
    "CompositeOperationOrAuto",
    "CompositionEvent",
    "CompositionEventInit",
    "ComputedEffectTiming",
    "ConstantSourceNode",
    "ConstantSourceOptions",
    "ConstrainBoolean",
    "ConstrainBooleanParameters",
    "ConstrainDOMString",
    "ConstrainDOMStringParameters",
    "ConstrainDouble",
    "ConstrainDoubleRange",
    "ConstrainULong",
    "ConstrainULongRange",
    "ConstrainablePattern",
    "ConstraintError",
    "ConstraintSet",
    "Constraints",
    "ContainerBasedOffset",
    "ConvertCoordinateOptions",
    "ConvertToInt",
    "ConvolverNode",
    "ConvolverOptions",
    "CountQueuingStrategy",
    "Create a Credential",
    "Create a FederatedCredential from FederatedCredentialInit",
    "Create a PasswordCredential from PasswordCredentialData",
    "Create a PasswordCredential from an HTMLFormElement",
    "CreateReadableByteStream",
    "CreateReadableStream",
    "CreateWritableStream",
    "Credential",
    "CredentialCreationOptions",
    "CredentialData",
    "CredentialMediationRequirement",
    "CredentialPropertiesOutput",
    "CredentialRequestOptions",
    "CredentialUserData",
    "CredentialsContainer",
    "CrossOriginIsolated",
    "CrossRealmTransformSendError",
    "Crypto",
    "CryptoKey",
    "CryptoKeyPair",
    "CustomElementConstructor",
    "CustomElementRegistry",
    "CustomEvent",
    "CustomEventInit",
    "DOM anchor",
    "DOM manipulation task source",
    "DOMConfiguration",
    "DOMError",
    "DOMErrorHandler",
    "DOMException",
    "DOMHighResTimeStamp",
    "DOMImplementation",
    "DOMImplementationList",
    "DOMImplementationSource",
    "DOMLocator",
    "DOMMatrix",
    "DOMMatrix2DInit",
    "DOMMatrixInit",
    "DOMMatrixReadOnly",
    "DOMObject",
    "DOMParser",
    "DOMParserSupportedType",
    "DOMPoint",
    "DOMPointInit",
    "DOMPointReadOnly",
    "DOMQuad",
    "DOMQuadInit",
    "DOMRect",
    "DOMRectInit",
    "DOMRectList",
    "DOMRectReadOnly",
    "DOMString",
    "DOMStringList",
    "DOMStringMap",
    "DOMTokenList",
    "DOMUserData",
    "DataCloneError",
    "DataError",
    "DataTransfer",
    "DataTransferItem",
    "DataTransferItemList",
    "DataView",
    "DeadFragmentInformation",
    "DecodeErrorCallback",
    "DecodeErrorCallback()",
    "DecodeSuccessCallback",
    "DecodeSuccessCallback()",
    "DedicatedWorkerGlobalScope",
    "Default",
    "DelayNode",
    "DelayOptions",
    "DequeueValue",
    "DevicePermissionDescriptor",
    "DistanceModelType",
    "Document",
    "DocumentAndElementEventHandlers",
    "DocumentFragment",
    "DocumentOrShadowRoot",
    "DocumentReadyState",
    "DocumentTimeline",
    "DocumentTimelineOptions",
    "DocumentType",
    "DocumentVisibilityState",
    "DoubleRange",
    "DragEvent",
    "DragEventInit",
    "DynamicsCompressorNode",
    "DynamicsCompressorOptions",
    "EcKeyAlgorithm",
    "EcKeyGenParams",
    "EcKeyImportParams",
    "EcdhKeyDeriveParams",
    "EcdsaParams",
    "Edge",
    "EffectCallback",
    "EffectTiming",
    "Element",
    "ElementBasedOffset",
    "ElementCSSInlineStyle",
    "ElementContentEditable",
    "ElementCreationOptions",
    "ElementDefinitionOptions",
    "ElementInternals",
    "ElementTimeControl",
    "EncodingError",
    "EndingType",
    "EnforceRange",
    "EnqueueValueWithSize",
    "Entity",
    "EntityReference",
    "EpochTimeStamp",
    "ErrorEvent",
    "ErrorEventInit",
    "EvalError",
    "Event",
    "Event and derived interfaces constructor behavior",
    "EventHandler",
    "EventHandlerNonNull",
    "EventInit",
    "EventListener",
    "EventListenerOptions",
    "EventModifierInit",
    "EventSource",
    "EventSourceInit",
    "EventTarget",
    "Exposed",
    "ExtendableEvent",
    "ExtendableEventInit",
    "ExtendableMessageEvent",
    "ExtendableMessageEventInit",
    "External",
    "ExtractHighWaterMark",
    "ExtractSizeAlgorithm",
    "FakeWorkletGlobalScope",
    "FederatedCredential",
    "FederatedCredentialInit",
    "FederatedCredentialRequestOptions",
    "FetchEvent",
    "FetchEventInit",
    "File",
    "FileList",
    "FilePropertyBag",
    "FileReader",
    "FileReaderSync",
    "FileSystemCreateWritableOptions",
    "FileSystemDirectoryHandle",
    "FileSystemFileHandle",
    "FileSystemGetDirectoryOptions",
    "FileSystemGetFileOptions",
    "FileSystemHandle",
    "FileSystemHandleKind",
    "FileSystemRemoveOptions",
    "FileSystemWritableFileStream",
    "FileSystemWriteChunkType",
    "FillMode",
    "Float32Array",
    "Float64Array",
    "FlowControlType",
    "FocusEvent",
    "FocusEventInit",
    "FocusOptions",
    "FocusableAreaSearchMode",
    "FocusableAreasOption",
    "Font",
    "FontFace",
    "FontFaceDescriptors",
    "FontFaceFeatures",
    "FontFaceLoadStatus",
    "FontFacePalette",
    "FontFacePalettes",
    "FontFaceSet",
    "FontFaceSetLoadEvent",
    "FontFaceSetLoadEventInit",
    "FontFaceSetLoadStatus",
    "FontFaceSource",
    "FontFaceVariationAxis",
    "FontFaceVariations",
    "FontMetrics",
    "FormData",
    "FormDataEntryValue",
    "FormDataEvent",
    "FormDataEventInit",
    "Formatter",
    "FragmentFilter",
    "FragmentResult",
    "FragmentResultOptions",
    "FrameRequestCallback",
    "FrameType",
    "FrozenArray",
    "FrozenArray<T>",
    "FullscreenNavigationUI",
    "FullscreenOptions",
    "Function",
    "FunctionStringCallback",
    "GainNode",
    "GainOptions",
    "GenerateTestReportParameters",
    "GenericTransformStream",
    "GeometryNode",
    "GeometryUtils",
    "GetAnimationsOptions",
    "GetNotificationOptions",
    "GetRootNodeOptions",
    "GetSVGDocument",
    "Global",
    "GlobalDescriptor",
    "GlobalEventHandlers",
    "GroupEffect",
    "HTMLAllCollection",
    "HTMLAnchorElement",
    "HTMLAreaElement",
    "HTMLAudioElement",
    "HTMLBRElement",
    "HTMLBaseElement",
    "HTMLBodyElement",
    "HTMLButtonElement",
    "HTMLCanvasElement",
    "HTMLCollection",
    "HTMLConstructor",
    "HTMLDListElement",
    "HTMLDataElement",
    "HTMLDataListElement",
    "HTMLDetailsElement",
    "HTMLDialogElement",
    "HTMLDirectoryElement",
    "HTMLDivElement",
    "HTMLElement",
    "HTMLEmbedElement",
    "HTMLFieldSetElement",
    "HTMLFontElement",
    "HTMLFormControlsCollection",
    "HTMLFormElement",
    "HTMLFrameElement",
    "HTMLFrameSetElement",
    "HTMLHRElement",
    "HTMLHeadElement",
    "HTMLHeadingElement",
    "HTMLHtmlElement",
    "HTMLHyperlinkElementUtils",
    "HTMLIFrameElement",
    "HTMLImageElement",
    "HTMLInputElement",
    "HTMLLIElement",
    "HTMLLabelElement",
    "HTMLLegendElement",
    "HTMLLinkElement",
    "HTMLMapElement",
    "HTMLMarqueeElement",
    "HTMLMediaElement",
    "HTMLMenuElement",
    "HTMLMetaElement",
    "HTMLMeterElement",
    "HTMLModElement",
    "HTMLOListElement",
    "HTMLObjectElement",
    "HTMLOptGroupElement",
    "HTMLOptionElement",
    "HTMLOptionsCollection",
    "HTMLOrSVGElement",
    "HTMLOrSVGImageElement",
    "HTMLOrSVGScriptElement",
    "HTMLOutputElement",
    "HTMLParagraphElement",
    "HTMLParamElement",
    "HTMLPictureElement",
    "HTMLPreElement",
    "HTMLProgressElement",
    "HTMLQuoteElement",
    "HTMLScriptElement",
    "HTMLSelectElement",
    "HTMLSlotElement",
    "HTMLSourceElement",
    "HTMLSpanElement",
    "HTMLStyleElement",
    "HTMLTableCaptionElement",
    "HTMLTableCellElement",
    "HTMLTableColElement",
    "HTMLTableElement",
    "HTMLTableRowElement",
    "HTMLTableSectionElement",
    "HTMLTemplateElement",
    "HTMLTextAreaElement",
    "HTMLTimeElement",
    "HTMLTitleElement",
    "HTMLTrackElement",
    "HTMLUListElement",
    "HTMLUnknownElement",
    "HTMLVideoElement",
    "HashAlgorithmIdentifier",
    "HashChangeEvent",
    "HashChangeEventInit",
    "Headers",
    "HeadersInit",
    "HierarchyRequestError",
    "Highlight",
    "HighlightRegistry",
    "HighlightType",
    "History",
    "HkdfParams",
    "HmacImportParams",
    "HmacKeyAlgorithm",
    "HmacKeyGenParams",
    "IDBCursor",
    "IDBCursorDirection",
    "IDBCursorWithValue",
    "IDBDatabase",
    "IDBDatabaseInfo",
    "IDBFactory",
    "IDBIndex",
    "IDBIndexParameters",
    "IDBKeyRange",
    "IDBObjectStore",
    "IDBObjectStoreParameters",
    "IDBOpenDBRequest",
    "IDBRequest",
    "IDBRequestReadyState",
    "IDBTransaction",
    "IDBTransactionDurability",
    "IDBTransactionMode",
    "IDBTransactionOptions",
    "IDBVersionChangeEvent",
    "IDBVersionChangeEventInit",
    "IIRFilterNode",
    "IIRFilterOptions",
    "ImageBitmap",
    "ImageBitmapOptions",
    "ImageBitmapRenderingContext",
    "ImageBitmapRenderingContextSettings",
    "ImageBitmapSource",
    "ImageData",
    "ImageDataSettings",
    "ImageEncodeOptions",
    "ImageOrientation",
    "ImageResource",
    "ImageSmoothingQuality",
    "ImportExportKind",
    "InUseAttributeError",
    "IndexSizeError",
    "InitializeReadableStream",
    "InitializeTransformStream",
    "InitializeWritableStream",
    "InputDeviceInfo",
    "InputEvent",
    "InputEventInit",
    "Instance",
    "Int16Array",
    "Int32Array",
    "Int8Array",
    "IntegerPart",
    "IntersectionObserver",
    "IntersectionObserverCallback",
    "IntersectionObserverEntry",
    "IntersectionObserverEntryInit",
    "IntersectionObserverInit",
    "IntersectionObserverRegistration",
    "IntrinsicSizes",
    "IntrinsicSizesRequest",
    "IntrinsicSizesResultOptions",
    "InvalidAccessError",
    "InvalidCharacterError",
    "InvalidModificationError",
    "InvalidNodeTypeError",
    "InvalidStateError",
    "IsNonNegativeNumber",
    "IsReadableStreamLocked",
    "IsWritableStreamLocked",
    "IterationCompositeOperation",
    "JsonLdContext",
    "JsonLdError",
    "JsonLdErrorCode",
    "JsonLdInput",
    "JsonLdOptions",
    "JsonLdProcessor",
    "JsonLdRecord",
    "JsonWebKey",
    "KeyAlgorithm",
    "KeyFormat",
    "KeyType",
    "KeyUsage",
    "Keyboard",
    "KeyboardEvent",
    "KeyboardEventInit",
    "KeyboardLayoutMap",
    "KeyframeAnimationOptions",
    "KeyframeEffect",
    "KeyframeEffectOptions",
    "LargeBlobSupport",
    "LayoutChild",
    "LayoutConstraints",
    "LayoutConstraintsOptions",
    "LayoutEdgeSizes",
    "LayoutEdges",
    "LayoutFragment",
    "LayoutFragmentRequest",
    "LayoutFragmentRequestOrIntrinsicSizesRequest",
    "LayoutOptions",
    "LayoutSizingMode",
    "LayoutWorkletGlobalScope",
    "LegacyFactoryFunction",
    "LegacyLenientSetter",
    "LegacyLenientThis",
    "LegacyNamespace",
    "LegacyNoInterfaceObject",
    "LegacyNullToEmptyString",
    "LegacyOverrideBuiltIns",
    "LegacyPlatformObjectGetOwnProperty",
    "LegacyTreatNonObjectAsNull",
    "LegacyUnenumerableNamedProperties",
    "LegacyUnforgeable",
    "LegacyWindowAlias",
    "LinkError",
    "LinkStyle",
    "LoadDocumentCallback",
    "LoadDocumentOptions",
    "Location",
    "Logger",
    "MediaDeviceInfo",
    "MediaDeviceKind",
    "MediaDevices",
    "MediaElementAudioSourceNode",
    "MediaElementAudioSourceOptions",
    "MediaError",
    "MediaList",
    "MediaProvider",
    "MediaQueryList",
    "MediaQueryListEvent",
    "MediaQueryListEventInit",
    "MediaStream",
    "MediaStreamAudioDestinationNode",
    "MediaStreamAudioSourceNode",
    "MediaStreamAudioSourceOptions",
    "MediaStreamConstraints",
    "MediaStreamTrack",
    "MediaStreamTrackAudioSourceNode",
    "MediaStreamTrackAudioSourceOptions",
    "MediaStreamTrackEvent",
    "MediaStreamTrackEventInit",
    "MediaStreamTrackState",
    "MediaTrackCapabilities",
    "MediaTrackConstraintSet",
    "MediaTrackConstraints",
    "MediaTrackSettings",
    "MediaTrackSupportedConstraints",
    "Memory",
    "MemoryDescriptor",
    "MessageChannel",
    "MessageEvent",
    "MessageEventInit",
    "MessageEventSource",
    "MessagePort",
    "MimeType",
    "MimeTypeArray",
    "MockSensor",
    "MockSensorConfiguration",
    "MockSensorReadingValues",
    "MockSensorType",
    "Module",
    "ModuleExportDescriptor",
    "ModuleImportDescriptor",
    "MouseEvent",
    "MouseEventInit",
    "MultiCacheQueryOptions",
    "MutationCallback",
    "MutationEvent",
    "MutationNameEvent",
    "MutationObserver",
    "MutationObserverInit",
    "MutationRecord",
    "NameList",
    "Named elements",
    "Named objects",
    "NamedCurve",
    "NamedFlow",
    "NamedFlowMap",
    "NamedNodeMap",
    "NamespaceError",
    "NavigationEvent",
    "NavigationEventInit",
    "NavigationPreloadManager",
    "NavigationPreloadState",
    "NavigationTimingType",
    "Navigator",
    "NavigatorConcurrentHardware",
    "NavigatorContentUtils",
    "NavigatorCookies",
    "NavigatorID",
    "NavigatorLanguage",
    "NavigatorOnLine",
    "NavigatorPlugins",
    "NavigatorStorage",
    "NavigatorUserMediaErrorCallback",
    "NavigatorUserMediaSuccessCallback",
    "NetworkError",
    "NewObject",
    "NoModificationAllowedError",
    "Node",
    "NodeFilter",
    "NodeIterator",
    "NodeList",
    "NonDocumentTypeChildNode",
    "NonElementParentNode",
    "NotAllowedError",
    "NotFoundError",
    "NotReadableError",
    "NotSupportedError",
    "Notation",
    "Notification",
    "NotificationAction",
    "NotificationDirection",
    "NotificationEvent",
    "NotificationEventInit",
    "NotificationOptions",
    "NotificationPermission",
    "NotificationPermissionCallback",
    "ObservableArray",
    "ObservableArray<T>",
    "OfflineAudioCompletionEvent",
    "OfflineAudioCompletionEventInit",
    "OfflineAudioContext",
    "OfflineAudioContextOptions",
    "OffscreenCanvas",
    "OffscreenCanvasRenderingContext2D",
    "OffscreenRenderingContext",
    "OffscreenRenderingContextId",
    "OnBeforeUnloadEventHandler",
    "OnBeforeUnloadEventHandlerNonNull",
    "OnErrorEventHandler",
    "OnErrorEventHandlerNonNull",
    "OperationError",
    "OptionalEffectTiming",
    "OrientationLockType",
    "OrientationType",
    "OscillatorNode",
    "OscillatorOptions",
    "OscillatorType",
    "Otherwise",
    "OverSampleType",
    "OverconstrainedError",
    "PackAndPostMessage",
    "PackAndPostMessageHandlingError",
    "PageTransitionEvent",
    "PageTransitionEventInit",
    "PaintRenderingContext2D",
    "PaintRenderingContext2DSettings",
    "PaintSize",
    "PaintWorkletGlobalScope",
    "PannerNode",
    "PannerOptions",
    "PanningModelType",
    "ParentNode",
    "ParityType",
    "PasswordCredential",
    "PasswordCredentialData",
    "PasswordCredentialInit",
    "Path2D",
    "PaymentComplete",
    "PaymentCurrencyAmount",
    "PaymentDetailsBase",
    "PaymentDetailsInit",
    "PaymentDetailsModifier",
    "PaymentDetailsUpdate",
    "PaymentItem",
    "PaymentMethodChangeEvent",
    "PaymentMethodChangeEventInit",
    "PaymentMethodData",
    "PaymentRequest",
    "PaymentRequestUpdateEvent",
    "PaymentRequestUpdateEventInit",
    "PaymentResponse",
    "PaymentValidationErrors",
    "Pbkdf2Params",
    "PeekQueueValue",
    "Performance",
    "PerformanceNavigation",
    "PerformanceNavigationTiming",
    "PerformanceResourceTiming",
    "PerformanceTiming",
    "PeriodicWave",
    "PeriodicWaveConstraints",
    "PeriodicWaveOptions",
    "PermissionDescriptor",
    "PermissionSetParameters",
    "PermissionState",
    "PermissionStatus",
    "Permissions",
    "PermissionsPolicy",
    "PermissionsPolicyViolationReportBody",
    "PlaybackDirection",
    "Plugin",
    "PluginArray",
    "PointerEvent",
    "PointerEventInit",
    "PopStateEvent",
    "PopStateEventInit",
    "PredefinedColorSpace",
    "PremultiplyAlpha",
    "Prevent Silent Access",
    "Printer",
    "ProcessingInstruction",
    "ProgressEvent",
    "ProgressEventInit",
    "Promise",
    "Promise<T>",
    "PromiseRejectionEvent",
    "PromiseRejectionEventInit",
    "PropertyDefinition",
    "PublicKeyCredential",
    "PublicKeyCredentialCreationOptions",
    "PublicKeyCredentialCreationOptionsJSON",
    "PublicKeyCredentialDescriptor",
    "PublicKeyCredentialDescriptorJSON",
    "PublicKeyCredentialEntity",
    "PublicKeyCredentialJSON",
    "PublicKeyCredentialParameters",
    "PublicKeyCredentialRequestOptions",
    "PublicKeyCredentialRequestOptionsJSON",
    "PublicKeyCredentialRpEntity",
    "PublicKeyCredentialType",
    "PublicKeyCredentialUserEntity",
    "PublicKeyCredentialUserEntityJSON",
    "PutForwards",
    "QueuingStrategy",
    "QueuingStrategyInit",
    "QueuingStrategySize",
    "QuotaExceededError",
    "RTCAnswerOptions",
    "RTCAudioSourceStats",
    "RTCBundlePolicy",
    "RTCCertificate",
    "RTCCertificateExpiration",
    "RTCCertificateStats",
    "RTCCodecStats",
    "RTCConfiguration",
    "RTCDTMFSender",
    "RTCDTMFToneChangeEvent",
    "RTCDTMFToneChangeEventInit",
    "RTCDataChannel",
    "RTCDataChannelEvent",
    "RTCDataChannelEventInit",
    "RTCDataChannelInit",
    "RTCDataChannelState",
    "RTCDataChannelStats",
    "RTCDtlsFingerprint",
    "RTCDtlsRole",
    "RTCDtlsTransport",
    "RTCDtlsTransportState",
    "RTCError",
    "RTCErrorDetailType",
    "RTCErrorEvent",
    "RTCErrorEventInit",
    "RTCErrorInit",
    "RTCIceCandidate",
    "RTCIceCandidateInit",
    "RTCIceCandidatePair",
    "RTCIceCandidatePairStats",
    "RTCIceCandidateStats",
    "RTCIceCandidateType",
    "RTCIceComponent",
    "RTCIceConnectionState",
    "RTCIceCredentialType",
    "RTCIceGathererState",
    "RTCIceGatheringState",
    "RTCIceParameters",
    "RTCIceProtocol",
    "RTCIceRole",
    "RTCIceServer",
    "RTCIceTcpCandidateType",
    "RTCIceTransport",
    "RTCIceTransportPolicy",
    "RTCIceTransportState",
    "RTCInboundRtpStreamStats",
    "RTCLocalSessionDescriptionInit",
    "RTCMediaSourceStats",
    "RTCMediaStreamStats",
    "RTCMediaStreamTrackStats",
    "RTCOfferAnswerOptions",
    "RTCOfferOptions",
    "RTCOutboundRtpStreamStats",
    "RTCPeerConnection",
    "RTCPeerConnectionErrorCallback",
    "RTCPeerConnectionIceErrorEvent",
    "RTCPeerConnectionIceErrorEventInit",
    "RTCPeerConnectionIceEvent",
    "RTCPeerConnectionIceEventInit",
    "RTCPeerConnectionState",
    "RTCPeerConnectionStats",
    "RTCQualityLimitationReason",
    "RTCReceivedRtpStreamStats",
    "RTCRemoteInboundRtpStreamStats",
    "RTCRemoteOutboundRtpStreamStats",
    "RTCRtcpMuxPolicy",
    "RTCRtcpParameters",
    "RTCRtpCapabilities",
    "RTCRtpCodecCapability",
    "RTCRtpCodecParameters",
    "RTCRtpCodingParameters",
    "RTCRtpContributingSource",
    "RTCRtpDecodingParameters",
    "RTCRtpEncodingParameters",
    "RTCRtpHeaderExtensionCapability",
    "RTCRtpHeaderExtensionParameters",
    "RTCRtpParameters",
    "RTCRtpReceiveParameters",
    "RTCRtpReceiver",
    "RTCRtpSendParameters",
    "RTCRtpSender",
    "RTCRtpStreamStats",
    "RTCRtpSynchronizationSource",
    "RTCRtpTransceiver",
    "RTCRtpTransceiverDirection",
    "RTCRtpTransceiverInit",
    "RTCSctpTransport",
    "RTCSctpTransportState",
    "RTCSdpType",
    "RTCSentRtpStreamStats",
    "RTCSessionDescription",
    "RTCSessionDescriptionCallback",
    "RTCSessionDescriptionInit",
    "RTCSignalingState",
    "RTCStats",
    "RTCStatsIceCandidatePairState",
    "RTCStatsReport",
    "RTCStatsType",
    "RTCTrackEvent",
    "RTCTrackEventInit",
    "RTCTransportStats",
    "RTCVideoSourceStats",
    "RadioNodeList",
    "Range",
    "RangeError",
    "RangeException",
    "RdfDataset",
    "RdfGraph",
    "RdfLiteral",
    "RdfTriple",
    "ReadOnlyError",
    "ReadableByteStreamController",
    "ReadableByteStreamControllerCallPullIfNeeded",
    "ReadableByteStreamControllerClearAlgorithms",
    "ReadableByteStreamControllerClearPendingPullIntos",
    "ReadableByteStreamControllerClose",
    "ReadableByteStreamControllerCommitPullIntoDescriptor",
    "ReadableByteStreamControllerConvertPullIntoDescriptor",
    "ReadableByteStreamControllerEnqueue",
    "ReadableByteStreamControllerEnqueueChunkToQueue",
    "ReadableByteStreamControllerEnqueueClonedChunkToQueue",
    "ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue",
    "ReadableByteStreamControllerError",
    "ReadableByteStreamControllerFillHeadPullIntoDescriptor",
    "ReadableByteStreamControllerFillPullIntoDescriptorFromQueue",
    "ReadableByteStreamControllerFillReadRequestFromQueue",
    "ReadableByteStreamControllerGetBYOBRequest",
    "ReadableByteStreamControllerGetDesiredSize",
    "ReadableByteStreamControllerHandleQueueDrain",
    "ReadableByteStreamControllerInvalidateBYOBRequest",
    "ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue",
    "ReadableByteStreamControllerProcessReadRequestsUsingQueue",
    "ReadableByteStreamControllerPullInto",
    "ReadableByteStreamControllerRespond",
    "ReadableByteStreamControllerRespondInClosedState",
    "ReadableByteStreamControllerRespondInReadableState",
    "ReadableByteStreamControllerRespondInternal",
    "ReadableByteStreamControllerRespondWithNewView",
    "ReadableByteStreamControllerShiftPendingPullInto",
    "ReadableByteStreamControllerShouldCallPull",
    "ReadableByteStreamTee",
    "ReadableStream",
    "ReadableStreamAddReadIntoRequest",
    "ReadableStreamAddReadRequest",
    "ReadableStreamBYOBReader",
    "ReadableStreamBYOBReaderErrorReadIntoRequests",
    "ReadableStreamBYOBReaderRead",
    "ReadableStreamBYOBReaderRelease",
    "ReadableStreamBYOBRequest",
    "ReadableStreamCancel",
    "ReadableStreamClose",
    "ReadableStreamController",
    "ReadableStreamDefaultController",
    "ReadableStreamDefaultControllerCallPullIfNeeded",
    "ReadableStreamDefaultControllerCanCloseOrEnqueue",
    "ReadableStreamDefaultControllerClearAlgorithms",
    "ReadableStreamDefaultControllerClose",
    "ReadableStreamDefaultControllerEnqueue",
    "ReadableStreamDefaultControllerError",
    "ReadableStreamDefaultControllerGetDesiredSize",
    "ReadableStreamDefaultControllerHasBackpressure",
    "ReadableStreamDefaultControllerShouldCallPull",
    "ReadableStreamDefaultReader",
    "ReadableStreamDefaultReaderErrorReadRequests",
    "ReadableStreamDefaultReaderRead",
    "ReadableStreamDefaultReaderRelease",
    "ReadableStreamDefaultTee",
    "ReadableStreamError",
    "ReadableStreamFulfillReadIntoRequest",
    "ReadableStreamFulfillReadRequest",
    "ReadableStreamGenericReader",
    "ReadableStreamGetNumReadIntoRequests",
    "ReadableStreamGetNumReadRequests",
    "ReadableStreamGetReaderOptions",
    "ReadableStreamHasBYOBReader",
    "ReadableStreamHasDefaultReader",
    "ReadableStreamIteratorOptions",
    "ReadableStreamPipeTo",
    "ReadableStreamReadResult",
    "ReadableStreamReader",
    "ReadableStreamReaderGenericCancel",
    "ReadableStreamReaderGenericInitialize",
    "ReadableStreamReaderGenericRelease",
    "ReadableStreamReaderMode",
    "ReadableStreamTee",
    "ReadableStreamType",
    "ReadableWritablePair",
    "ReferenceError",
    "ReferrerPolicy",
    "Region",
    "RegistrationOptions",
    "RegistrationResponseJSON",
    "RemoteDocument",
    "RenderingContext",
    "Replaceable",
    "Report",
    "ReportBody",
    "ReportList",
    "ReportingObserver",
    "ReportingObserverCallback",
    "ReportingObserverOptions",
    "Request",
    "Request a Credential",
    "RequestCache",
    "RequestCredentials",
    "RequestDestination",
    "RequestDeviceOptions",
    "RequestDuplex",
    "RequestInfo",
    "RequestInit",
    "RequestMode",
    "RequestRedirect",
    "ResetQueue",
    "ResidentKeyRequirement",
    "ResizeObservation",
    "ResizeObserver",
    "ResizeObserverBoxOptions",
    "ResizeObserverCallback",
    "ResizeObserverEntry",
    "ResizeObserverOptions",
    "ResizeObserverSize",
    "ResizeQuality",
    "Response",
    "ResponseInit",
    "ResponseType",
    "RsaHashedImportParams",
    "RsaHashedKeyAlgorithm",
    "RsaHashedKeyGenParams",
    "RsaKeyAlgorithm",
    "RsaKeyGenParams",
    "RsaOaepParams",
    "RsaOtherPrimesInfo",
    "RsaPssParams",
    "RuntimeError",
    "SVGAElement",
    "SVGAltGlyphDefElement",
    "SVGAltGlyphElement",
    "SVGAltGlyphItemElement",
    "SVGAngle",
    "SVGAnimateColorElement",
    "SVGAnimateElement",
    "SVGAnimateMotionElement",
    "SVGAnimateTransformElement",
    "SVGAnimatedAngle",
    "SVGAnimatedBoolean",
    "SVGAnimatedEnumeration",
    "SVGAnimatedInteger",
    "SVGAnimatedLength",
    "SVGAnimatedLengthList",
    "SVGAnimatedNumber",
    "SVGAnimatedNumberList",
    "SVGAnimatedPathData",
    "SVGAnimatedPoints",
    "SVGAnimatedPreserveAspectRatio",
    "SVGAnimatedRect",
    "SVGAnimatedString",
    "SVGAnimatedTransformList",
    "SVGAnimationElement",
    "SVGCSSRule",
    "SVGCircleElement",
    "SVGClipPathElement",
    "SVGColor",
    "SVGColorProfileElement",
    "SVGColorProfileRule",
    "SVGComponentTransferFunctionElement",
    "SVGCursorElement",
    "SVGDefsElement",
    "SVGDescElement",
    "SVGDocument",
    "SVGElement",
    "SVGElementInstance",
    "SVGElementInstanceList",
    "SVGEllipseElement",
    "SVGExternalResourcesRequired",
    "SVGFEBlendElement",
    "SVGFEColorMatrixElement",
    "SVGFEComponentTransferElement",
    "SVGFECompositeElement",
    "SVGFEConvolveMatrixElement",
    "SVGFEDiffuseLightingElement",
    "SVGFEDisplacementMapElement",
    "SVGFEDistantLightElement",
    "SVGFEDropShadowElement",
    "SVGFEFloodElement",
    "SVGFEFuncAElement",
    "SVGFEFuncBElement",
    "SVGFEFuncGElement",
    "SVGFEFuncRElement",
    "SVGFEGaussianBlurElement",
    "SVGFEImageElement",
    "SVGFEMergeElement",
    "SVGFEMergeNodeElement",
    "SVGFEMorphologyElement",
    "SVGFEOffsetElement",
    "SVGFEPointLightElement",
    "SVGFESpecularLightingElement",
    "SVGFESpotLightElement",
    "SVGFETileElement",
    "SVGFETurbulenceElement",
    "SVGFilterElement",
    "SVGFilterPrimitiveStandardAttributes",
    "SVGFitToViewBox",
    "SVGFontElement",
    "SVGFontFaceElement",
    "SVGFontFaceFormatElement",
    "SVGFontFaceNameElement",
    "SVGFontFaceSrcElement",
    "SVGFontFaceUriElement",
    "SVGForeignObjectElement",
    "SVGGElement",
    "SVGGeometryElement",
    "SVGGlyphElement",
    "SVGGlyphRefElement",
    "SVGGradientElement",
    "SVGGraphicsElement",
    "SVGHKernElement",
    "SVGICCColor",
    "SVGImageElement",
    "SVGLangSpace",
    "SVGLength",
    "SVGLengthList",
    "SVGLineElement",
    "SVGLinearGradientElement",
    "SVGLocatable",
    "SVGMPathElement",
    "SVGMarkerElement",
    "SVGMaskElement",
    "SVGMatrix",
    "SVGMetadataElement",
    "SVGMissingGlyphElement",
    "SVGNumber",
    "SVGNumberList",
    "SVGPaint",
    "SVGPathElement",
    "SVGPathSeg",
    "SVGPathSegArcAbs",
    "SVGPathSegArcRel",
    "SVGPathSegClosePath",
    "SVGPathSegCurvetoCubicAbs",
    "SVGPathSegCurvetoCubicRel",
    "SVGPathSegCurvetoCubicSmoothAbs",
    "SVGPathSegCurvetoCubicSmoothRel",
    "SVGPathSegCurvetoQuadraticAbs",
    "SVGPathSegCurvetoQuadraticRel",
    "SVGPathSegCurvetoQuadraticSmoothAbs",
    "SVGPathSegCurvetoQuadraticSmoothRel",
    "SVGPathSegLinetoAbs",
    "SVGPathSegLinetoHorizontalAbs",
    "SVGPathSegLinetoHorizontalRel",
    "SVGPathSegLinetoRel",
    "SVGPathSegLinetoVerticalAbs",
    "SVGPathSegLinetoVerticalRel",
    "SVGPathSegList",
    "SVGPathSegMovetoAbs",
    "SVGPathSegMovetoRel",
    "SVGPatternElement",
    "SVGPoint",
    "SVGPointList",
    "SVGPolygonElement",
    "SVGPolylineElement",
    "SVGPreserveAspectRatio",
    "SVGRadialGradientElement",
    "SVGRect",
    "SVGRectElement",
    "SVGRenderingIntent",
    "SVGSVGElement",
    "SVGScriptElement",
    "SVGSetElement",
    "SVGStopElement",
    "SVGStringList",
    "SVGStylable",
    "SVGStyleElement",
    "SVGSwitchElement",
    "SVGSymbolElement",
    "SVGTRefElement",
    "SVGTSpanElement",
    "SVGTests",
    "SVGTextContentElement",
    "SVGTextElement",
    "SVGTextPathElement",
    "SVGTextPositioningElement",
    "SVGTitleElement",
    "SVGTransform",
    "SVGTransformList",
    "SVGTransformable",
    "SVGURIReference",
    "SVGUnitTypes",
    "SVGUnknownElement",
    "SVGUseElement",
    "SVGUseElementShadowRoot",
    "SVGVKernElement",
    "SVGViewElement",
    "SVGViewSpec",
    "SVGZoomAndPan",
    "SVGZoomEvent",
    "SameObject",
    "Screen",
    "ScreenOrientation",
    "ScriptProcessorNode",
    "ScrollBehavior",
    "ScrollDirection",
    "ScrollIntoViewOptions",
    "ScrollLogicalPosition",
    "ScrollOptions",
    "ScrollRestoration",
    "ScrollTimeline",
    "ScrollTimelineAutoKeyword",
    "ScrollTimelineOffset",
    "ScrollTimelineOptions",
    "ScrollToOptions",
    "SecureContext",
    "SecurityError",
    "SecurityPolicyViolationEvent",
    "SecurityPolicyViolationEventDisposition",
    "SecurityPolicyViolationEventInit",
    "SelectionMode",
    "Sensor",
    "SensorErrorEvent",
    "SensorErrorEventInit",
    "SensorOptions",
    "SequenceEffect",
    "Serial",
    "SerialInputSignals",
    "SerialOptions",
    "SerialOutputSignals",
    "SerialPort",
    "SerialPortFilter",
    "SerialPortInfo",
    "SerialPortRequestOptions",
    "Serializable",
    "ServiceEventHandlers",
    "ServiceWorker",
    "ServiceWorkerContainer",
    "ServiceWorkerGlobalScope",
    "ServiceWorkerRegistration",
    "ServiceWorkerState",
    "ServiceWorkerUpdateViaCache",
    "SetUpCrossRealmTransformReadable",
    "SetUpCrossRealmTransformWritable",
    "SetUpReadableByteStreamController",
    "SetUpReadableByteStreamControllerFromUnderlyingSource",
    "SetUpReadableStreamBYOBReader",
    "SetUpReadableStreamDefaultController",
    "SetUpReadableStreamDefaultControllerFromUnderlyingSource",
    "SetUpReadableStreamDefaultReader",
    "SetUpTransformStreamDefaultController",
    "SetUpTransformStreamDefaultControllerFromTransformer",
    "SetUpWritableStreamDefaultController",
    "SetUpWritableStreamDefaultControllerFromUnderlyingSink",
    "SetUpWritableStreamDefaultWriter",
    "Settings",
    "ShadowAnimation",
    "ShadowRoot",
    "ShadowRootInit",
    "ShadowRootMode",
    "ShareData",
    "SharedWorker",
    "SharedWorkerGlobalScope",
    "SlotAssignmentMode",
    "Slottable",
    "SpatialNavigationDirection",
    "SpatialNavigationSearchOptions",
    "StatefulAnimator",
    "StatelessAnimator",
    "StaticRange",
    "StaticRangeInit",
    "StereoPannerNode",
    "StereoPannerOptions",
    "Storage",
    "StorageEstimate",
    "StorageEvent",
    "StorageEventInit",
    "StorageManager",
    "Store a Credential",
    "StreamPipeOptions",
    "StructuredClone",
    "StructuredDeserialize",
    "StructuredDeserializeWithTransfer",
    "StructuredSerialize",
    "StructuredSerializeForStorage",
    "StructuredSerializeInternal",
    "StructuredSerializeOptions",
    "StructuredSerializeWithTransfer",
    "StylePropertyMap",
    "StylePropertyMapReadOnly",
    "StyleSheet",
    "StyleSheetList",
    "SubmitEvent",
    "SubmitEventInit",
    "SubtleCrypto",
    "SyncEvent",
    "SyncEventInit",
    "SyncManager",
    "SyntaxError",
    "Table",
    "TableDescriptor",
    "TableKind",
    "TestUtils",
    "Text",
    "TextDecodeOptions",
    "TextDecoder",
    "TextDecoderCommon",
    "TextDecoderOptions",
    "TextDecoderStream",
    "TextEncoder",
    "TextEncoderCommon",
    "TextEncoderEncodeIntoResult",
    "TextEncoderStream",
    "TextMetrics",
    "TextTrack",
    "TextTrackCue",
    "TextTrackCueList",
    "TextTrackKind",
    "TextTrackList",
    "TextTrackMode",
    "TimeEvent",
    "TimeRanges",
    "TimelinePhase",
    "TimeoutError",
    "TimerHandler",
    "TokenBinding",
    "TokenBindingStatus",
    "TrackEvent",
    "TrackEventInit",
    "TransactionInactiveError",
    "TransferArrayBuffer",
    "Transferable",
    "TransformStream",
    "TransformStreamDefaultController",
    "TransformStreamDefaultControllerClearAlgorithms",
    "TransformStreamDefaultControllerEnqueue",
    "TransformStreamDefaultControllerError",
    "TransformStreamDefaultControllerPerformTransform",
    "TransformStreamDefaultControllerTerminate",
    "TransformStreamDefaultSinkAbortAlgorithm",
    "TransformStreamDefaultSinkCloseAlgorithm",
    "TransformStreamDefaultSinkWriteAlgorithm",
    "TransformStreamDefaultSourcePullAlgorithm",
    "TransformStreamError",
    "TransformStreamErrorWritableAndUnblockWrite",
    "TransformStreamSetBackpressure",
    "Transformer",
    "TransformerFlushCallback",
    "TransformerStartCallback",
    "TransformerTransformCallback",
    "TransitionEvent",
    "TransitionEventInit",
    "TreeWalker",
    "TypeError",
    "TypeInfo",
    "TypeMismatchError",
    "UIEvent",
    "UIEventInit",
    "ULongRange",
    "URIError",
    "URL",
    "URLMismatchError",
    "URLSearchParams",
    "USB",
    "USBAlternateInterface",
    "USBConfiguration",
    "USBConnectionEvent",
    "USBConnectionEventInit",
    "USBControlTransferParameters",
    "USBDevice",
    "USBDeviceFilter",
    "USBDeviceRequestOptions",
    "USBDirection",
    "USBEndpoint",
    "USBEndpointType",
    "USBInTransferResult",
    "USBInterface",
    "USBIsochronousInTransferPacket",
    "USBIsochronousInTransferResult",
    "USBIsochronousOutTransferPacket",
    "USBIsochronousOutTransferResult",
    "USBOutTransferResult",
    "USBPermissionDescriptor",
    "USBPermissionResult",
    "USBPermissionStorage",
    "USBRecipient",
    "USBRequestType",
    "USBTransferStatus",
    "USVString",
    "UUID",
    "Uint16Array",
    "Uint32Array",
    "Uint8Array",
    "Uint8ClampedArray",
    "UnderlyingSink",
    "UnderlyingSinkAbortCallback",
    "UnderlyingSinkCloseCallback",
    "UnderlyingSinkStartCallback",
    "UnderlyingSinkWriteCallback",
    "UnderlyingSource",
    "UnderlyingSourceCancelCallback",
    "UnderlyingSourcePullCallback",
    "UnderlyingSourceStartCallback",
    "UnknownError",
    "Unscopable",
    "UserDataHandler",
    "UserVerificationRequirement",
    "UvmEntries",
    "UvmEntry",
    "ValidityState",
    "ValidityStateFlags",
    "ValueEvent",
    "ValueEventInit",
    "ValueType",
    "VersionError",
    "VideoFacingModeEnum",
    "VideoResizeModeEnum",
    "VideoTrack",
    "VideoTrackList",
    "VisibilityState",
    "VoidFunction",
    "WatchAdvertisementsOptions",
    "WaveShaperNode",
    "WaveShaperOptions",
    "WebAssembly",
    "WebAssemblyInstantiatedSource",
    "WebKitCSSMatrix",
    "WebSocket",
    "WheelEvent",
    "WheelEventInit",
    "Window",
    "WindowClient",
    "WindowEventHandlers",
    "WindowLocalStorage",
    "WindowOrWorkerGlobalScope",
    "WindowPostMessageOptions",
    "WindowProxy",
    "WindowSessionStorage",
    "Worker",
    "WorkerGlobalScope",
    "WorkerLocation",
    "WorkerNavigator",
    "WorkerOptions",
    "WorkerType",
    "Worklet",
    "WorkletAnimation",
    "WorkletAnimationEffect",
    "WorkletGlobalScope",
    "WorkletGroupEffect",
    "WorkletOptions",
    "WritableStream",
    "WritableStreamAbort",
    "WritableStreamAddWriteRequest",
    "WritableStreamClose",
    "WritableStreamCloseQueuedOrInFlight",
    "WritableStreamDealWithRejection",
    "WritableStreamDefaultController",
    "WritableStreamDefaultControllerAdvanceQueueIfNeeded",
    "WritableStreamDefaultControllerClearAlgorithms",
    "WritableStreamDefaultControllerClose",
    "WritableStreamDefaultControllerError",
    "WritableStreamDefaultControllerErrorIfNeeded",
    "WritableStreamDefaultControllerGetBackpressure",
    "WritableStreamDefaultControllerGetChunkSize",
    "WritableStreamDefaultControllerGetDesiredSize",
    "WritableStreamDefaultControllerProcessClose",
    "WritableStreamDefaultControllerProcessWrite",
    "WritableStreamDefaultControllerWrite",
    "WritableStreamDefaultWriter",
    "WritableStreamDefaultWriterAbort",
    "WritableStreamDefaultWriterClose",
    "WritableStreamDefaultWriterCloseWithErrorPropagation",
    "WritableStreamDefaultWriterEnsureClosedPromiseRejected",
    "WritableStreamDefaultWriterEnsureReadyPromiseRejected",
    "WritableStreamDefaultWriterGetDesiredSize",
    "WritableStreamDefaultWriterRelease",
    "WritableStreamDefaultWriterWrite",
    "WritableStreamFinishErroring",
    "WritableStreamFinishInFlightClose",
    "WritableStreamFinishInFlightCloseWithError",
    "WritableStreamFinishInFlightWrite",
    "WritableStreamFinishInFlightWriteWithError",
    "WritableStreamHasOperationMarkedInFlight",
    "WritableStreamMarkCloseRequestInFlight",
    "WritableStreamMarkFirstWriteRequestInFlight",
    "WritableStreamRejectCloseAndClosedPromiseIfNeeded",
    "WritableStreamStartErroring",
    "WritableStreamUpdateBackpressure",
    "WriteCommandType",
    "WriteParams",
    "WrongDocumentError",
    "XMLDocument",
    "XMLHttpRequest",
    "XMLHttpRequestBodyInit",
    "XMLHttpRequestEventTarget",
    "XMLHttpRequestResponseType",
    "XMLHttpRequestUpload",
    "XPathEvaluator",
    "XPathEvaluatorBase",
    "XPathExpression",
    "XPathNSResolver",
    "XPathResult",
    "XRBoundedReferenceSpace",
    "XRCompositionLayer",
    "XRCubeLayer",
    "XRCubeLayerInit",
    "XRCylinderLayer",
    "XRCylinderLayerInit",
    "XRDOMOverlayInit",
    "XRDOMOverlayState",
    "XRDOMOverlayType",
    "XREnvironmentBlendMode",
    "XREquirectLayer",
    "XREquirectLayerInit",
    "XREye",
    "XRFrame",
    "XRFrameRequestCallback",
    "XRHand",
    "XRHandJoint",
    "XRHandedness",
    "XRHitTestOptionsInit",
    "XRHitTestResult",
    "XRHitTestSource",
    "XRHitTestTrackableType",
    "XRInputSource",
    "XRInputSourceArray",
    "XRInputSourceEvent",
    "XRInputSourceEventInit",
    "XRInputSourcesChangeEvent",
    "XRInputSourcesChangeEventInit",
    "XRInteractionMode",
    "XRJointPose",
    "XRJointSpace",
    "XRLayer",
    "XRLayerEvent",
    "XRLayerEventInit",
    "XRLayerInit",
    "XRLayerLayout",
    "XRMediaBinding",
    "XRMediaCylinderLayerInit",
    "XRMediaEquirectLayerInit",
    "XRMediaLayerInit",
    "XRMediaQuadLayerInit",
    "XRPermissionDescriptor",
    "XRPermissionStatus",
    "XRPose",
    "XRProjectionLayer",
    "XRProjectionLayerInit",
    "XRQuadLayer",
    "XRQuadLayerInit",
    "XRRay",
    "XRRayDirectionInit",
    "XRReferenceSpace",
    "XRReferenceSpaceEvent",
    "XRReferenceSpaceEventInit",
    "XRReferenceSpaceType",
    "XRRenderState",
    "XRRenderStateInit",
    "XRRigidTransform",
    "XRSession",
    "XRSessionEvent",
    "XRSessionEventInit",
    "XRSessionInit",
    "XRSessionMode",
    "XRSessionSupportedPermissionDescriptor",
    "XRSpace",
    "XRSubImage",
    "XRSystem",
    "XRTargetRayMode",
    "XRTextureType",
    "XRTransientInputHitTestOptionsInit",
    "XRTransientInputHitTestResult",
    "XRTransientInputHitTestSource",
    "XRView",
    "XRViewerPose",
    "XRViewport",
    "XRVisibilityState",
    "XRWebGLBinding",
    "XRWebGLLayer",
    "XRWebGLLayerInit",
    "XRWebGLRenderingContext",
    "XRWebGLSubImage",
    "XSLTProcessor",
    "[[associatedmediastreamids]]",
    "[[associatedremotemediastreams]]",
    "[[bufferedamount]]",
    "[[certificate]]",
    "[[configuration]]",
    "[[crossoriginpropertydescriptormap]]",
    "[[currentdirection]]",
    "[[currentlocaldescription]]",
    "[[currentremotedescription]]",
    "[[datachannelid]]",
    "[[datachannellabel]]",
    "[[datachannelprotocol]]",
    "[[defaultproperties]]",
    "[[direction]]",
    "[[display height]]",
    "[[display width]]",
    "[[documentorigin]]",
    "[[dtlstransportstate]]",
    "[[dtmf]]",
    "[[duration]]",
    "[[earlycandidates]]",
    "[[fireddirection]]",
    "[[icegathererstate]]",
    "[[icerole]]",
    "[[icetransportstate]]",
    "[[intertonegap]]",
    "[[isclosed]]",
    "[[ishtmldda]]",
    "[[jsepmid]]",
    "[[keyingmaterialhandle]]",
    "[[lastcreatedanswer]]",
    "[[lastcreatedoffer]]",
    "[[lastreturnedparameters]]",
    "[[laststablestateassociatedremotemediastreams]]",
    "[[laststablestatereceivecodecs]]",
    "[[laststablestatereceivertransport]]",
    "[[laststablestatesendertransport]]",
    "[[localicecredentialstoreplace]]",
    "[[maxchannels]]",
    "[[maxmessagesize]]",
    "[[maxpacketlifetime]]",
    "[[maxretransmits]]",
    "[[mid]]",
    "[[negotiated]]",
    "[[negotiationneeded]]",
    "[[operations]]",
    "[[ordered]]",
    "[[origin]]",
    "[[pendinglocaldescription]]",
    "[[pendingremotedescription]]",
    "[[preferredcodecs]]",
    "[[readystate]]",
    "[[realm]] field of a platform object",
    "[[receivecodecs]]",
    "[[receiver]]",
    "[[receivertrack]]",
    "[[receivertransport]]",
    "[[receptive]]",
    "[[remotecertificates]]",
    "[[sctptransport]]",
    "[[sctptransportstate]]",
    "[[selectedcandidatepair]]",
    "[[sendcodecs]]",
    "[[sendencodings]]",
    "[[sender]]",
    "[[sendertrack]]",
    "[[sendertransport]]",
    "[[stopped]]",
    "[[stopping]]",
    "[[tonebuffer]]",
    "[[updatenegotiationneededflagonemptychain]]",
    "[[window]]",
    "[legacyfactoryfunction]",
    "[legacylenientthis]",
    "[legacynulltoemptystring]",
    "[legacyoverridebuiltins]",
    "[legacytreatnonobjectasnull]",
    "[legacyunenumerablenamedproperties]",
    "[legacyunforgeable]",
    "_charset_",
    "a",
    "a edge",
    "a known definite encoding",
    "a label",
    "a language",
    "a list of zero or more cues",
    "a mode",
    "a new exported function",
    "a new promise",
    "a pause-on-exit flag",
    "a plausible language",
    "a priori authenticated url",
    "a promise rejected with",
    "a promise resolved with",
    "a readiness state",
    "a serialization of the bitmap as a file",
    "a start time",
    "a type that the user agent knows it cannot render",
    "a-rate",
    "aaguid",
    "ab",
    "ab note",
    "abbr",
    "abnf",
    "abort",
    "abort a parser",
    "abort a running script",
    "abort a transaction",
    "abort a writable stream",
    "abort all active watchadvertisements",
    "abort an upgrade transaction",
    "abort fetch",
    "abort the image request",
    "abort the update",
    "abort transfers currently scheduled on an interface",
    "abort watchadvertisements",
    "abort when",
    "aborted network error",
    "aborterror",
    "about-to-be-notified rejected promises list",
    "about:",
    "about:blank",
    "about:html-kind",
    "about:legacy-compat",
    "about:srcdoc",
    "abrupt-closing-of-empty-comment",
    "abrupt-doctype-public-identifier",
    "abrupt-doctype-system-identifier",
    "abs()",
    "absence-of-digits-in-numeric-character-reference",
    "absolute length",
    "absolute length unit",
    "absolute position",
    "absolute positioning containing block",
    "absolute positioning layout",
    "absolute positioning layout model",
    "absolute url",
    "absolute-url string",
    "absolute-url-with-fragment string",
    "absolutely position",
    "absolutely positioned box",
    "absolutely positioned element",
    "absolutely-positioned",
    "absolutize a relative selector",
    "absolutize a relative selector list",
    "abstract closure",
    "abstract dimensions",
    "abstract equality comparison",
    "ac",
    "ac appeal",
    "ac representative",
    "ac review",
    "accent color",
    "accent-color",
    "accept",
    "accept-language",
    "access key",
    "access-control-allow-credentials",
    "access-control-allow-headers",
    "access-control-allow-methods",
    "access-control-allow-origin",
    "access-control-expose-headers",
    "access-control-max-age",
    "access-control-request-headers",
    "access-control-request-method",
    "accessibility considerations",
    "accessible name",
    "accessor is openee",
    "accessor is opener",
    "accessor-accessed relationship",
    "accumulate",
    "accumulated 3d transformation matrix",
    "accumulation for one-based values",
    "accumulation procedure",
    "acknowledged",
    "acos()",
    "acquaintance",
    "acquire the content",
    "acquire the contents of an audiobuffer",
    "acquiring system resources",
    "acronym",
    "action",
    "activate",
    "activate a sensor object",
    "activate an event handler",
    "activated sensor objects",
    "activation behavior",
    "activation notification",
    "activation trigger",
    "activation triggering input event",
    "active",
    "active buttons state",
    "active context",
    "active document",
    "active duration",
    "active flag",
    "active flag was set when the script started",
    "active frame element",
    "active function object",
    "active graph",
    "active immersive session",
    "active interval",
    "active match",
    "active needed worker",
    "active notification context set",
    "active orientation lock",
    "active parser",
    "active parser was aborted",
    "active phase",
    "active pointer",
    "active property",
    "active range",
    "active reader",
    "active render state",
    "active replace state",
    "active script",
    "active shadow tree",
    "active source",
    "active speculative html parser",
    "active time",
    "active worker",
    "active writer",
    "active-after boundary time",
    "activeborder",
    "activecaption",
    "actively processing",
    "actual value",
    "actual values",
    "actual viewport",
    "actually disabled",
    "ad structure",
    "adafish",
    "add",
    "add a css style sheet",
    "add a range header",
    "add a track",
    "add a vcard line",
    "add an event listener",
    "add an icalendar line",
    "add credential",
    "add device to storage",
    "add or put",
    "add the track",
    "add two types",
    "add value",
    "add virtual authenticator",
    "addEventListener()",
    "added modules list",
    "addition procedure",
    "additional-name",
    "additionaldata",
    "additive",
    "additive color space",
    "additive environment blending",
    "additive light",
    "additive tuple",
    "address",
    "address type strings",
    "addressable character",
    "addtrack",
    "adequate implementation experience",
    "adjoining",
    "adjoining margins",
    "adjust foreign attributes",
    "adjust mathml attributes",
    "adjust svg attributes",
    "adjusted current node",
    "adopt",
    "adopted draft",
    "adopting steps",
    "adoption agency algorithm",
    "adr",
    "advanced constraints",
    "advanced to the next child of the table",
    "advertising data",
    "advertising event",
    "advertising events",
    "advisory board",
    "advisory committee",
    "advisory committee appeal",
    "advisory committee representative",
    "advisory committee review",
    "advisory information",
    "aescbcparams",
    "aesctrparams",
    "aesderivedkeyparams",
    "aesgcmparams",
    "aeskeyalgorithm",
    "aeskeygenparams",
    "affected by a base url change",
    "after attribute name state",
    "after attribute value (quoted) state",
    "after doctype name state",
    "after doctype public identifier state",
    "after doctype public keyword state",
    "after doctype system identifier state",
    "after doctype system keyword state",
    "after phase",
    "after-change style",
    "agent",
    "agent cluster",
    "agent cluster key",
    "agent cluster map",
    "alert steps",
    "algorithm",
    "algorithm for assigning header cells",
    "algorithm for ending a row group",
    "algorithm for extracting a character encoding from a meta element",
    "algorithm for growing downward-growing cells",
    "algorithm for processing row groups",
    "algorithm for processing rows",
    "algorithm normalization",
    "algorithm queue",
    "algorithm to convert a date object to a string",
    "algorithm to convert a number to a string",
    "algorithm to convert a string to a date object",
    "algorithm to convert a string to a number",
    "algorithm_cached",
    "algorithmidentifier",
    "aliceblue",
    "align descendants",
    "align-content",
    "align-items",
    "align-self",
    "align-tracks",
    "aligned subtree",
    "alignment baseline",
    "alignment container",
    "alignment context",
    "alignment point",
    "alignment subject",
    "alignment-baseline",
    "all",
    "all-petite-caps",
    "all-small-caps",
    "allocate color textures",
    "allocate color textures for projection layers",
    "allocate depth textures",
    "allocate depth textures for projection layers",
    "allocate the color textures for the secondary views",
    "allocate the depth textures for the secondary views",
    "allow new features",
    "allow-list",
    "allow-list-value",
    "allowed in the body",
    "allowed required constraints for device selection",
    "allowed to download",
    "allowed to navigate",
    "allowed to play",
    "allowed to resize and move",
    "allowed to start",
    "allowed to use",
    "allowed value step",
    "allowlist",
    "allowlists",
    "allows adding render-blocking elements",
    "alpha",
    "alpha channel",
    "alpha component",
    "alpha-blend environment blending",
    "alphabetic baseline",
    "already constructed marker",
    "already started",
    "alt ac rep",
    "alternate ac representative",
    "alternate advisory committee representative",
    "alternate flag",
    "alternative",
    "altglyph",
    "altglyphdef",
    "ambiguous ampersand",
    "ambiguous ampersand state",
    "an end time",
    "an exception was thrown",
    "an html document is to be loaded",
    "an identifier",
    "an iframe srcdoc document",
    "an in-band metadata track dispatch type",
    "an unstyled document view",
    "an+b",
    "analysernode",
    "analyseroptions",
    "ancestor",
    "ancestor browsing context",
    "ancestor details revealing algorithm",
    "ancestor hidden-until-found revealing algorithm",
    "ancestor origins list",
    "ancestor-source",
    "ancestor-source-list",
    "anchor",
    "anchor node selection algorithm",
    "anchor point",
    "anchor unit",
    "android key attestation certificate extension data",
    "animatable",
    "animate",
    "animate function",
    "animatecolor",
    "animatemotion",
    "animatetransform",
    "animation",
    "animation animator name",
    "animation class",
    "animation composite order",
    "animation direction",
    "animation effect",
    "animation effect playback rate",
    "animation effect start time",
    "animation events",
    "animation frame",
    "animation frame callback identifier",
    "animation frame task",
    "animation origin",
    "animation playback events",
    "animation property name to idl attribute name",
    "animation requested flag",
    "animation time to origin-relative time",
    "animation time to timeline time",
    "animation type",
    "animation worklet",
    "animation-composition",
    "animation-delay",
    "animation-direction",
    "animation-duration",
    "animation-fill-mode",
    "animation-iteration-count",
    "animation-name",
    "animation-play-state",
    "animation-tainted",
    "animation-timeline",
    "animation-timing-function",
    "animationevent()",
    "animator",
    "animator current time",
    "animator definition",
    "animator definitions",
    "animator effect",
    "animator instance",
    "animator instance set",
    "animator name",
    "animator name to animator definition map",
    "animator serialized options",
    "animator timeline",
    "anniversary",
    "annotated types",
    "annotation",
    "annotation box",
    "annotation level",
    "announce an rtcdatachannel as open",
    "announce the connection",
    "announce the rtcdatachannel as open",
    "anonca",
    "anonymization ca",
    "anonymous",
    "anonymous block of a slot",
    "anonymous button content box",
    "anonymous fieldset content box",
    "anonymous inline boxes",
    "antiquewhite",
    "any",
    "apc",
    "api value",
    "appeal",
    "appearance",
    "appearance of a cross-fade()",
    "append",
    "append a request `origin` header",
    "append an attribute",
    "append the Fetch metadata headers for a request",
    "append to an event path",
    "appendChild()",
    "appid",
    "appleproduct",
    "applet",
    "applicable specification",
    "application context",
    "application manifest",
    "application manifest media type",
    "application's name",
    "application/atom+xml",
    "application/json",
    "application/manifest+json",
    "application/microdata+json",
    "application/octet-stream",
    "application/rss+xml",
    "application/x-www-form-urlencoded",
    "application/x-www-form-urlencoded percent-encode set",
    "application/x-www-form-urlencoded serializer",
    "application/xhtml+xml",
    "application/xml",
    "applied",
    "applies to",
    "apply",
    "apply an orientation lock",
    "apply any pending playback rate",
    "apply link options from parsed header attributes",
    "apply the nominal frame rate",
    "apply the pending render state",
    "apply the percent hint",
    "apply to",
    "applying",
    "applying a blackman window",
    "applying a fourier transform",
    "appropriate end tag token",
    "appropriate network error",
    "appropriate place for inserting a node",
    "appropriate template contents owner document",
    "appworkspace",
    "aqua",
    "aquamarine",
    "archive mime type",
    "archive type pattern matching algorithm",
    "arcs linejoin",
    "are a valid escape",
    "area",
    "aria attributes",
    "aria-*",
    "aria-checked",
    "aria-describedby",
    "aria-disabled",
    "aria-label",
    "ariamixin",
    "ariamixin getter steps",
    "ariamixin setter steps",
    "armenian",
    "array",
    "array index property name",
    "array key",
    "arraybuffer",
    "arraybufferview",
    "arraycreate",
    "art direction",
    "article",
    "as a download",
    "as conformance class",
    "ascending",
    "ascent metric",
    "ascii alpha",
    "ascii alphanumeric",
    "ascii byte",
    "ascii case-insensitive",
    "ascii code point",
    "ascii decode",
    "ascii digit",
    "ascii encode",
    "ascii hex digit",
    "ascii lower alpha",
    "ascii lower hex digit",
    "ascii lowercase",
    "ascii serialization of an origin",
    "ascii string",
    "ascii tab or newline",
    "ascii tabs or newlines",
    "ascii upper alpha",
    "ascii upper hex digit",
    "ascii uppercase",
    "ascii whitespace",
    "ascii-capable",
    "aside",
    "asin()",
    "ask the user to choose a Credential",
    "asks for a reset",
    "aspect value",
    "aspect-ratio",
    "aspectratio",
    "assert",
    "assertion",
    "assertion signature",
    "assign a slot",
    "assign slottables",
    "assign slottables for a tree",
    "assignable table width",
    "assigned access key",
    "assigned media provider object",
    "assigned nodes",
    "assigned slot",
    "associate animator instance of worklet animation",
    "associated",
    "associated animation of an animation effect",
    "associated baseaudiocontext",
    "associated bone",
    "associated css style sheet",
    "associated document",
    "associated effect",
    "associated effect end",
    "associated element",
    "associated focus navigation owner",
    "associated inert template document",
    "associated interface",
    "associated navigator",
    "associated node",
    "associated offscreencanvas object",
    "associated option object",
    "associated realm",
    "associated sensors",
    "associated store",
    "associated with a timeline",
    "associated with an animation",
    "async",
    "asynchronous iterator initialization steps",
    "asynchronous iterator prototype object",
    "asynchronous iterator return",
    "asynchronous read method",
    "asynchronously compile a webassembly module",
    "asynchronously execute a request",
    "asynchronously instantiate a webassembly module",
    "asynchronously iterable declaration",
    "at progress timeline boundary",
    "at risk",
    "at-keyword",
    "at-risk",
    "at-rule",
    "at-rules",
    "atan()",
    "atan2()",
    "atomic http redirect handling",
    "atomic initial letter",
    "atomic initial letter box",
    "atomic inline",
    "atomic inline box",
    "atomic inline-level boxes",
    "atomically",
    "atomics",
    "att bearer",
    "attach",
    "attachShadow()",
    "attached",
    "attached internals",
    "attca",
    "attestation",
    "attestation ca",
    "attestation certificate",
    "attestation conveyance",
    "attestation key pair",
    "attestation object",
    "attestation private key",
    "attestation public key",
    "attestation signature",
    "attestation statement",
    "attestation statement format",
    "attestation statement format identifier",
    "attestation trust path",
    "attestation type",
    "attested credential data",
    "attestedcredentialdata",
    "attr",
    "attr()",
    "attribute",
    "attribute caching",
    "attribute change steps",
    "attribute getter",
    "attribute handle",
    "attribute list",
    "attribute name state",
    "attribute names",
    "attribute node selector",
    "attribute selector",
    "attribute setter",
    "attribute type",
    "attribute value (double-quoted) state",
    "attribute value (single-quoted) state",
    "attribute value (unquoted) state",
    "attribute values",
    "attribute's serialized name",
    "attributename",
    "attributes",
    "attributes and default actions",
    "attributes for form submission",
    "attributetype",
    "audio",
    "audio buffer underrun",
    "audio or video mime type",
    "audio or video type pattern matching algorithm",
    "audio sample",
    "audiobuffer",
    "audiobufferoptions",
    "audiobuffersourcenode",
    "audiobuffersourceoptions",
    "audiocontext",
    "audiocontextoptions",
    "audiodestinationnode",
    "audiolistener",
    "audionode",
    "audionodeoptions",
    "audioparam",
    "audioparamdescriptor",
    "audioprocessingevent",
    "audioprocessingeventinit",
    "audiorenderCapacity",
    "audiorenderCapacityevent",
    "audiorenderCapacityoptions",
    "audioscheduledsourcenode",
    "audiotimestamp",
    "audioworklet",
    "audioworkletglobalscope",
    "audioworkletnode",
    "audioworkletnodeoptions",
    "audioworkletprocessor",
    "augmented grid",
    "aural \"box\" model",
    "aural box model",
    "authdataextensions",
    "authentication",
    "authentication assertion",
    "authentication ceremony",
    "authentication entry",
    "authentication extension",
    "authentication factor capability",
    "authenticator",
    "authenticator attachment modality",
    "authenticator configuration",
    "authenticator data",
    "authenticator data claimed to have been used for the attestation",
    "authenticator data for the attestation",
    "authenticator extension",
    "authenticator extension capabilities",
    "authenticator extension input",
    "authenticator extension output",
    "authenticator extension processing",
    "authenticator model",
    "authenticator operations",
    "authenticator session",
    "authenticator type",
    "authenticatorcancel",
    "authenticatorgetassertion",
    "authenticatorid",
    "authenticatormakecredential",
    "author",
    "author origin",
    "author presentational hint origin",
    "author request headers",
    "author style sheet",
    "author-origin",
    "authoring tool",
    "authorization gesture",
    "auto",
    "auto!!font-kerning",
    "auto-column",
    "auto-hidden",
    "auto-hide",
    "auto-placement",
    "auto-placement cursor",
    "autocapitalization hints",
    "autocapitalize-inheriting elements",
    "autofill anchor mantle",
    "autofill detail tokens",
    "autofill expectation mantle",
    "autofill field",
    "autofill field name",
    "autofill hint set",
    "autofill scope",
    "autofills form controls",
    "autofocus candidates",
    "autofocus delegate",
    "autofocus processed flag",
    "autogaincontrol",
    "automatic",
    "automatic block size",
    "automatic column position",
    "automatic column span",
    "automatic grid position",
    "automatic grid span",
    "automatic inline size",
    "automatic minimum size",
    "automatic numbering",
    "automatic placement",
    "automatic position",
    "automatic row position",
    "automatic row span",
    "automatic semicolon insertion",
    "automatic size",
    "automatic span",
    "automation event time",
    "automation events",
    "automation method",
    "autonomous custom element",
    "autoplay",
    "auxclick",
    "auxiliary action",
    "auxiliary browsing context",
    "auxiliary input source",
    "available",
    "available block space",
    "available font faces",
    "available grid space",
    "available height",
    "available inline space",
    "available space",
    "available to element internals",
    "available width",
    "avoid break values",
    "await a stable state",
    "axis value",
    "axis-lock",
    "azimuth",
    "azure",
    "b",
    "backdrop",
    "backdrop root",
    "backdrop root image",
    "backdrop-filter",
    "backed up",
    "backface-visibility",
    "background",
    "background painting area",
    "background positioning area",
    "background-attachment",
    "background-blend-mode",
    "background-clip",
    "background-color",
    "background-image",
    "background-origin",
    "background-position",
    "background-position-block",
    "background-position-inline",
    "background-position-x",
    "background-position-y",
    "background-repeat",
    "background-size",
    "backing observable array exotic object",
    "backpressure",
    "backslash escapes",
    "backup",
    "backup element queue",
    "backup eligibility",
    "backup eligible",
    "backup incumbent settings object stack",
    "backup state",
    "bad import script response",
    "bad port",
    "barred the element from constraint validation",
    "base",
    "base box",
    "base direction",
    "base iri",
    "base level",
    "base size",
    "base text level",
    "base url",
    "base url change steps",
    "base-uri",
    "base64 encoding",
    "base64-value",
    "base64url encoding",
    "baseaudiocontext",
    "basefont",
    "baseline",
    "baseline alignment",
    "baseline alignment preference",
    "baseline content-alignment",
    "baseline of a cell",
    "baseline of a table-root",
    "baseline of the row",
    "baseline self-alignment",
    "baseline set",
    "baseline table",
    "baseline-relative shift values",
    "baseline-relative values",
    "baseline-sharing group",
    "baseline-shift",
    "baseline-source",
    "baseline-table",
    "basic",
    "basic attestation",
    "basic filtered response",
    "basic shape",
    "basic url parser",
    "batch attestation",
    "batch cache operations",
    "bd_addr",
    "bday",
    "bdi",
    "bdo",
    "be directionally scrolled",
    "bearing angle",
    "become browsing-context connected",
    "become browsing-context disconnected",
    "become disconnected",
    "becomes connected",
    "before attribute name state",
    "before attribute value state",
    "before doctype name state",
    "before doctype public identifier state",
    "before doctype system identifier state",
    "before flag",
    "before phase",
    "before-active boundary time",
    "before-change style",
    "beforeinput",
    "beforexrselect",
    "begin",
    "begin offline rendering",
    "beginning edges",
    "behave as auto",
    "behaves as auto",
    "behaving as auto",
    "beige",
    "being activated",
    "being actively pointed at",
    "being rendered",
    "being used as relevant canvas fallback content",
    "best representation of the number n as a floating-point number",
    "between doctype public and system identifiers state",
    "between zero and b",
    "bfc",
    "bgsound",
    "bi-orientational",
    "bi-orientational transform",
    "biaxial",
    "bidi formatting characters",
    "bidi isolation",
    "bidi paragraph",
    "bidi-isolate",
    "bidi-isolated",
    "bidirectionality",
    "bidirectionality (bidi)",
    "big",
    "big5",
    "big5 decoder",
    "big5 encoder",
    "big5 lead",
    "bigint",
    "biginteger",
    "binary data byte",
    "binary object store",
    "binding edge",
    "biometric authenticator",
    "biometric recognition",
    "biquadfilternode",
    "biquadfilteroptions",
    "bisque",
    "bitmap",
    "bitmap data",
    "bitmap mode",
    "bitmaprenderer",
    "black",
    "blanchedalmond",
    "blank",
    "blank node",
    "blank node identifier",
    "blank!!pseudo-element",
    "bleed area",
    "blend technique",
    "blink",
    "blob",
    "blob url",
    "blob url entry",
    "blob url store",
    "blob:",
    "block",
    "block at-rule",
    "block axis",
    "block bad port",
    "block box",
    "block boxes",
    "block container",
    "block container box",
    "block container,",
    "block dimension",
    "block end",
    "block flow direction",
    "block formatting context",
    "block formatting context root",
    "block layout",
    "block overflow ellipsis",
    "block rendering",
    "block scripts",
    "block size",
    "block start",
    "block-axis",
    "block-ellipsis",
    "block-end",
    "block-flow direction",
    "block-level",
    "block-level box",
    "block-level boxes",
    "block-level content",
    "block-level elements",
    "block-size",
    "block-start",
    "block-step",
    "block-step-align",
    "block-step-insert",
    "block-step-round",
    "block-step-size",
    "blockable mixed content",
    "blocked by a modal dialog",
    "blocked media element",
    "blocked-on-parser",
    "blockification",
    "blockify",
    "blocking attribute",
    "blocking tokens set",
    "blocklisted",
    "blocklisted for reads",
    "blocklisted for writes",
    "blockquote",
    "blue",
    "bluetooth device",
    "bluetooth device name",
    "blueviolet",
    "blur",
    "blur radius",
    "body",
    "body element",
    "body with type",
    "body-ok",
    "bogus comment state",
    "bogus doctype state",
    "bold",
    "bolder",
    "bom sniff",
    "bond",
    "bookmark-label",
    "bookmark-level",
    "bookmark-state",
    "bookmarks",
    "boolean",
    "boolean attributes",
    "boolean context",
    "bopomofo",
    "bopomofo tone marks",
    "border",
    "border (of a box)",
    "border area",
    "border box",
    "border edge",
    "border image area",
    "border properties",
    "border radius",
    "border-block",
    "border-block-color",
    "border-block-end",
    "border-block-end-color",
    "border-block-end-style",
    "border-block-end-width",
    "border-block-start",
    "border-block-start-color",
    "border-block-start-style",
    "border-block-start-width",
    "border-block-style",
    "border-block-width",
    "border-bottom",
    "border-bottom-color",
    "border-bottom-left-radius",
    "border-bottom-right-radius",
    "border-bottom-style",
    "border-bottom-width",
    "border-boundary",
    "border-box",
    "border-clip",
    "border-clip-bottom",
    "border-clip-left",
    "border-clip-right",
    "border-clip-top",
    "border-collapse",
    "border-color",
    "border-end-end-radius",
    "border-end-start-radius",
    "border-image",
    "border-image-outset",
    "border-image-repeat",
    "border-image-slice",
    "border-image-source",
    "border-image-width",
    "border-inline",
    "border-inline-color",
    "border-inline-end",
    "border-inline-end-color",
    "border-inline-end-style",
    "border-inline-end-width",
    "border-inline-start",
    "border-inline-start-color",
    "border-inline-start-style",
    "border-inline-start-width",
    "border-inline-style",
    "border-inline-width",
    "border-left",
    "border-left-color",
    "border-left-style",
    "border-left-width",
    "border-limit",
    "border-radius",
    "border-right",
    "border-right-color",
    "border-right-style",
    "border-right-width",
    "border-spacing",
    "border-start-end-radius",
    "border-start-start-radius",
    "border-style",
    "border-top",
    "border-top-color",
    "border-top-left-radius",
    "border-top-right-radius",
    "border-top-style",
    "border-top-width",
    "border-width",
    "bottle map",
    "bottom",
    "bound credential",
    "boundary box",
    "boundary default action",
    "boundary point",
    "bounded reference spaces are supported",
    "bounding box",
    "box alignment properties",
    "box edge",
    "box fragment",
    "box-corner",
    "box-decoration-break",
    "box-shadow",
    "box-sizing",
    "box-snap",
    "br",
    "br/edr bonding procedure",
    "branches of a readable stream tee",
    "break",
    "break-after",
    "break-before",
    "break-inside",
    "broadcast",
    "broadcast active observations",
    "broadcaster",
    "broadcasting to other browsing contexts",
    "broken",
    "brown",
    "browser fingerprinting",
    "browsing context",
    "browsing context container",
    "browsing context group",
    "browsing context group set",
    "browsing context name",
    "browsing context scope origin",
    "browsing context set",
    "browsing session",
    "browsing-context connected",
    "bubble phase",
    "bubbling phase",
    "bucket map",
    "buffer source types",
    "bufferedamountlow",
    "buffersource",
    "bulk transfers",
    "bundle",
    "bundle-only",
    "bundle-policy",
    "burlywood",
    "button",
    "button layout",
    "button state (type=button)",
    "buttonface",
    "buttonhighlight",
    "buttons",
    "buttonshadow",
    "buttontext",
    "by",
    "by computed value",
    "byob reader",
    "byte",
    "byte length queuing strategy size function",
    "byte less than",
    "byte pattern",
    "byte sequence",
    "byte-case-insensitive",
    "byte-lowercase",
    "byte-serializing a request origin",
    "byte-uppercase",
    "c",
    "c edge",
    "c0 control",
    "c0 control or space",
    "c0 control percent-encode set",
    "c0 controls or spaces",
    "cache batch operation",
    "cache entry",
    "cache entry match",
    "cache mode",
    "cache-control",
    "cached attr-associated elements",
    "cached ecmascript object",
    "cadetblue",
    "calc()",
    "calcmode",
    "calculate box size",
    "calculate depth for node",
    "calculate the aspect ratio",
    "calculate the part element map",
    "calculation tree",
    "calibrated",
    "calibration",
    "call",
    "call a user object's operation",
    "call an exported function",
    "call for exclusion",
    "call for review",
    "callback",
    "callback context",
    "callback function",
    "callback function types",
    "callback interface",
    "callback interface member",
    "callback interface types",
    "callback reaction",
    "callback this value",
    "camera information can be exposed",
    "camera-information-can-be-exposed",
    "can autoplay flag",
    "can be displayed",
    "can be manually scrolled",
    "can be scrolled manually",
    "can expose sensor readings",
    "can have its url rewritten",
    "can make payment algorithm",
    "can't be displayed",
    "cancel a hit test source",
    "cancel a hit test source for transient input",
    "cancel a readable stream",
    "cancel an animation",
    "cancel event",
    "canceled event",
    "canceled flag",
    "candidate addition",
    "candidate amendment",
    "candidate correction",
    "candidate examination algorithm",
    "candidate execution",
    "candidate for constraint validation",
    "candidate recommendation",
    "candidate recommendation draft",
    "candidate recommendation snapshot",
    "candidate registry",
    "candidate registry draft",
    "candidate registry snapshot",
    "candidate-attribute",
    "cannot be manually scrolled",
    "cannot be scrolled manually",
    "cannot have a username/password/port",
    "cannot navigate",
    "cannot show simple dialogs",
    "canonical keyword",
    "canonical lexical form",
    "canonical unit",
    "canvas",
    "canvas background",
    "canvas blob serialization task source",
    "canvas context mode",
    "canvas pixel arraybuffer",
    "canvas surface",
    "cap shapes",
    "cap-height baseline",
    "capabilities",
    "capability",
    "capable of supporting",
    "caption",
    "caption width minimum (capmin)",
    "caption-side",
    "captions",
    "captiontext",
    "capture phase",
    "captures snap positions",
    "card",
    "caret",
    "caret node",
    "caret offset",
    "caret position",
    "caret range",
    "caret-color",
    "caret-shape",
    "cascade",
    "cascade layers",
    "cascade origin",
    "cascade-dependent keyword",
    "cascaded value",
    "cascading style sheets (css)",
    "case-insensitive",
    "case-sensitive",
    "categories",
    "cbor",
    "ccdtostring",
    "cdata section bracket state",
    "cdata section end state",
    "cdata section state",
    "cdata sections",
    "cdata-in-html-content",
    "cddl",
    "cell",
    "cell intrinsic offsets",
    "center",
    "central",
    "central baseline",
    "ceo",
    "ceremony",
    "chain",
    "chain an operation",
    "chain.",
    "chaining",
    "chains",
    "chair",
    "chair decision appeal",
    "chair decisions",
    "change",
    "change an attribute",
    "change the encoding",
    "change the preferred css style sheet set name",
    "channel keyword",
    "channel messaging",
    "channel name",
    "channelcount",
    "channelmergernode",
    "channelmergeroptions",
    "channelsplitternode",
    "channelsplitteroptions",
    "character",
    "character encoding",
    "character encoding declaration",
    "character map",
    "character reference code",
    "character reference state",
    "character references",
    "character value",
    "character-reference-outside-unicode-range",
    "characterdata",
    "characteristic",
    "characteristic descriptor discovery",
    "characteristic descriptors",
    "characteristic discovery",
    "characteristic extended properties",
    "characteristic properties",
    "characteristic value indications",
    "characteristic value notification",
    "characteristic value read",
    "characteristic value write",
    "characterized",
    "characters",
    "charter",
    "charter extension",
    "chartered groups",
    "chartreuse",
    "charwidth",
    "check a global object's embedder policy",
    "check a navigation response's adherence to `x-frame-options`",
    "check a navigation response's adherence to its embedder policy",
    "check if a popup window is requested",
    "check if a window feature is set",
    "check if an access between two browsing contexts should be reported",
    "check if coop values require a browsing context group switch",
    "check if enforcing report-only coop would require a browsing context group switch",
    "check if negotiation is needed",
    "check if the device is configured",
    "check if three code points would start a number",
    "check if three code points would start an ident sequence",
    "check if two code points are a valid escape",
    "check if we can run script",
    "check permissions for device",
    "check sensor policy-controlled features",
    "check that a key could be injected into a value",
    "check the completion record",
    "check the layers state",
    "check the usability of the image argument",
    "check the validity of the control transfer parameters",
    "check validity steps",
    "check-for-apache-bug flag",
    "checkbox state (type=checkbox)",
    "checkedness",
    "child",
    "child browsing context",
    "child combinator",
    "child effect",
    "child layout",
    "child selector",
    "child text content",
    "child-src",
    "childnode",
    "children",
    "children changed steps",
    "chocolate",
    "chorded button interactions",
    "chorded buttons",
    "chromatic adaptation transform",
    "chromaticity",
    "chunk",
    "circ",
    "circle",
    "circle()",
    "circled-lower-latin",
    "circular reference",
    "cite",
    "clamp a grid area",
    "clamp and coarsen connection timing info",
    "clamp()",
    "clamped to the range",
    "class",
    "class constructor",
    "class selector",
    "class string",
    "classes",
    "classic script",
    "classic scrollbars",
    "clean up after running a callback",
    "clean up after running script",
    "clean up the disconnected device",
    "cleanup indexed database transactions",
    "cleanupfinalizationregistry",
    "clear",
    "clear an object store",
    "clear cache entries",
    "clear registration",
    "clear the list of active formatting elements up to the last marker",
    "clear the negotiation-needed flag",
    "clear the stack back to a table body context",
    "clear the stack back to a table context",
    "clear the stack back to a table row context",
    "clearance",
    "clearance.",
    "clearkeptobjects",
    "click",
    "click focusable",
    "click in progress flag",
    "click, auxclick, and contextmenu events",
    "client",
    "client characteristic configuration",
    "client data",
    "client device",
    "client extension",
    "client extension input",
    "client extension output",
    "client extension processing",
    "client message queue",
    "client platform",
    "client-side",
    "client-side credential storage modality",
    "client-side discoverable credential",
    "client-side discoverable public key credential source",
    "clip",
    "clip steps",
    "clip-path",
    "clip-rule",
    "clippath",
    "clipping path",
    "clipping region",
    "clone",
    "clone a node",
    "clone a policy container",
    "clone a track",
    "cloneNode()",
    "cloning steps",
    "close",
    "close a browsing context",
    "close a database connection",
    "close a p element",
    "close a worker",
    "close sentinel",
    "close steps",
    "close the cell",
    "close-quote",
    "closed",
    "closed flag",
    "closed subpath",
    "closed-shadow-hidden",
    "closest-side",
    "closing",
    "closing procedure",
    "clustered scripts",
    "coalesced events",
    "coalesced events list",
    "coarsen time",
    "coarsened shared current time",
    "code",
    "code point",
    "code point length",
    "code point substring",
    "code point substring by positions",
    "code point substring to the end of the string",
    "code unit",
    "code unit less than",
    "code unit prefix",
    "code unit substring",
    "code unit substring by positions",
    "code unit substring to the end of the string",
    "code unit suffix",
    "code units",
    "col",
    "colgroup",
    "collapse",
    "collapse through",
    "collapsed",
    "collapsed flex item",
    "collapsed grid track",
    "collapsed gutter",
    "collapsed margin",
    "collapsed track",
    "collapsible white space",
    "collapsing margin",
    "collapsing margins",
    "colleague",
    "collect Credentials from the credential store",
    "collect a sequence of code points",
    "collect an http quoted string",
    "collect attribute values",
    "collect attribute values of an inheritance stack",
    "collect documents to unfullscreen",
    "collecting a sequence of code points",
    "collecting an http quoted string",
    "collecting the first vcard subproperty",
    "collecting vcard subproperties",
    "collection",
    "color",
    "color interpolation hint",
    "color scheme",
    "color space",
    "color state (type=color)",
    "color stop",
    "color stop list",
    "color transition hint",
    "color()",
    "color-adjust",
    "color-functions",
    "color-interpolation",
    "color-interpolation-filters",
    "color-mix()",
    "color-profile",
    "color-rendering",
    "color-scheme",
    "color:<color>",
    "colortextures",
    "column",
    "column box",
    "column break",
    "column combinator",
    "column gap",
    "column group",
    "column group header",
    "column header",
    "column height",
    "column rule",
    "column width",
    "column-count",
    "column-fill",
    "column-gap",
    "column-rule",
    "column-rule-color",
    "column-rule-style",
    "column-rule-width",
    "column-span",
    "column-width",
    "columns",
    "combinators",
    "combine",
    "combining shadow lists",
    "command",
    "comment",
    "comment end bang state",
    "comment end dash state",
    "comment end state",
    "comment less-than sign bang dash dash state",
    "comment less-than sign bang dash state",
    "comment less-than sign bang state",
    "comment less-than sign state",
    "comment start dash state",
    "comment start state",
    "comment state",
    "commentary",
    "comments",
    "commit a transaction",
    "commit computed styles",
    "commit early hints",
    "commit()",
    "common writing system keys",
    "common-ligatures",
    "compact",
    "compact form",
    "compact iri",
    "compacted",
    "compacted form",
    "compacting",
    "compaction",
    "compacts",
    "compare media queries",
    "compare two keys",
    "compatibility mapping with mouse events",
    "compatibility mouse events",
    "compatible baseline alignment preferences",
    "compatible graphics adapter",
    "compatible units",
    "compatible with cross-origin isolation",
    "compile a webassembly module",
    "compiled pattern regular expression",
    "completed transition",
    "completely available",
    "completely finish loading",
    "completely loaded",
    "completely loaded time",
    "completion record",
    "complex selector",
    "component percent-encode set",
    "component value",
    "composed flag",
    "composite",
    "composite face",
    "composite operation",
    "composite operation accumulate",
    "composite operation add",
    "composite operation replace",
    "composited value",
    "compositeoperation",
    "composition",
    "compositionend",
    "compositionstart",
    "compositionupdate",
    "compound parameter",
    "compound selector",
    "compression curve",
    "computationally independent",
    "compute a property value",
    "compute all hit test results",
    "compute an mp3 frame size",
    "compute hit test results",
    "compute hit test results for transient input",
    "compute missing keyframe offsets",
    "compute the effective overload set",
    "compute the intersection",
    "computed <image>",
    "computed color",
    "computed keyframe offset",
    "computed keyframes",
    "computed length",
    "computed mime type",
    "computed repeat notation",
    "computed stylepropertymap",
    "computed track list",
    "computed track size",
    "computed value",
    "computed values",
    "computedfrequency",
    "computednumberofchannels",
    "computedoscfrequency",
    "computedplaybackrate",
    "computedvalue",
    "computing a block of audio",
    "computing the envelope rate",
    "computing the makeup gain",
    "concrete",
    "concrete object size",
    "condensed",
    "conditional group rule",
    "conditional import",
    "conditional mediation",
    "conditional processing attribute",
    "conditional rule chain",
    "conditionally exposed",
    "conditionally hang",
    "conditionally hsts-safe origin",
    "confidence",
    "configuration descriptor",
    "conformance",
    "conformant server",
    "conformant style sheet",
    "conformant user agent",
    "conforming documents",
    "conforming ecmascript implementation",
    "conforming implementation",
    "conforming scripted web animations user agent",
    "conforming set of idl fragments",
    "conforming user agent",
    "conforming-touch-behavior",
    "conforms to an element's touch-action",
    "conic-gradient",
    "conic-gradient()",
    "connect",
    "connect to sensor",
    "connect-src",
    "connected",
    "connection",
    "connection flag",
    "connection pool",
    "connection queue",
    "connection state",
    "connection timing info",
    "connection-checking wrapper",
    "connectionstatechange",
    "consecutive",
    "consensus",
    "considered text",
    "console",
    "constant",
    "constantsourcenode",
    "constantsourceoptions",
    "constrainable object",
    "constrainedness",
    "constraint",
    "constraint rectangle",
    "construct",
    "construct a fragment result",
    "construct a webassembly module object",
    "construct policy from dictionary and origin",
    "constructing",
    "constructing entry list",
    "constructing the entry list",
    "construction stack",
    "constructor operation",
    "constructor operations",
    "constructor steps",
    "consume a component value",
    "consume a data type name",
    "consume a declaration",
    "consume a function",
    "consume a list of declarations",
    "consume a list of rules",
    "consume a number",
    "consume a numeric token",
    "consume a preloaded resource",
    "consume a qualified rule",
    "consume a simple block",
    "consume a string token",
    "consume a style block's contents",
    "consume a syntax component",
    "consume a syntax definition",
    "consume a token",
    "consume a url token",
    "consume an at-rule",
    "consume an escaped code point",
    "consume an ident sequence",
    "consume an ident-like token",
    "consume comments",
    "consume the next input token",
    "consume the remnants of a bad url",
    "consume user activation",
    "consumed as part of an attribute",
    "consumer",
    "contact",
    "contact geometry",
    "contain",
    "contain constraint",
    "contain-fit sizing",
    "contain-intrinsic-block-size",
    "contain-intrinsic-height",
    "contain-intrinsic-inline-size",
    "contain-intrinsic-size",
    "contain-intrinsic-width",
    "container",
    "container element",
    "container feature",
    "container frame element",
    "container mapping",
    "container policy",
    "container query",
    "container query length",
    "container size query",
    "container style query",
    "container-based offset",
    "container-name",
    "container-type",
    "containing block",
    "containing block chain",
    "containing block for all descendants",
    "containing only",
    "containment",
    "contains",
    "contains a header-delivered content security policy",
    "content",
    "content (of a box)",
    "content area",
    "content attributes",
    "content box",
    "content distribution",
    "content document",
    "content edge",
    "content encoding",
    "content height",
    "content language",
    "content model",
    "content models",
    "content rect",
    "content security policy",
    "content security policy directive",
    "content security policy object",
    "content security policy syntax",
    "content size suggestion",
    "content type",
    "content width",
    "content writing system",
    "content()",
    "content,",
    "content-based minimum size",
    "content-box",
    "content-disposition",
    "content-distribution",
    "content-distribution properties",
    "content-empty page",
    "content-language",
    "content-list",
    "content-range",
    "content-security-policy",
    "content-security-policy-report-only",
    "content-type",
    "content-type metadata",
    "content-visibility",
    "contents",
    "contents of an arraybuffer",
    "contentscripttype",
    "context",
    "context element",
    "context lost",
    "context lost steps",
    "context mode",
    "context-base-iri",
    "context-inverse",
    "context-specific sniffing algorithm",
    "contextmenu",
    "contexts in which this element can be used",
    "contextual",
    "contiguous exclusive text nodes",
    "contiguous text nodes",
    "continue",
    "continuous media",
    "contrast ratio",
    "contributes a script-blocking style sheet",
    "control",
    "control message",
    "control message queue",
    "control thread",
    "control transfer",
    "control's data",
    "control-character-in-input-stream",
    "control-character-reference",
    "controlled",
    "controlling",
    "controls",
    "conversion to db",
    "convert",
    "convert a cssunitvalue",
    "convert a json-derived javascript value to an infra value",
    "convert a key to a value",
    "convert a list of dimensions to a list of pixel values",
    "convert a non-negative integer i to an octet string of length n",
    "convert a string to a number",
    "convert a value to a key",
    "convert a value to a key range",
    "convert a value to a multientry key",
    "convert an infra value to a json-compatible javascript value",
    "convert code unit to scalar value",
    "convert data to a format suitable for ingestion into the target",
    "convert fetch timestamp",
    "convert from native entity type",
    "convert header names to a sorted-lowercase set",
    "convert line endings to native",
    "convert to a list of name-value pairs",
    "converted to a numeric type or bigint",
    "converted to an ecmascript value",
    "converted to an idl value",
    "converted to ecmascript values",
    "converted to idl values",
    "converting",
    "converting a character width to pixels",
    "converting a color value from a non-premultiplied representation to a premultiplied one",
    "converting a color value from a premultiplied representation to a non-premultiplied one",
    "converting a json-derived javascript value to an infra value",
    "converting an infra value to a json-compatible javascript value",
    "converting arguments for an asynchronous iterator method",
    "converting line endings to native",
    "converting nodes into a node",
    "convolvernode",
    "convolveroptions",
    "cookie",
    "cookie-averse document object",
    "cookie-string",
    "coop enforcement result",
    "coordinated self-alignment preference",
    "copy",
    "copy-into",
    "copydatablockbytes",
    "coral",
    "core attribute",
    "core attributes",
    "corner diagonal",
    "corner-shape",
    "corners",
    "cornflowerblue",
    "cornsilk",
    "corresponding animator instance",
    "corresponding effect",
    "corresponding element",
    "corresponding use element",
    "cors check",
    "cors filtered response",
    "cors non-wildcard request-header name",
    "cors protocol",
    "cors request",
    "cors settings attribute",
    "cors settings attribute credentials mode",
    "cors-cross-origin",
    "cors-preflight cache",
    "cors-preflight fetch",
    "cors-preflight request",
    "cors-safelisted method",
    "cors-safelisted request-header",
    "cors-safelisted response-header name",
    "cors-same-origin",
    "cors-unsafe request-header byte",
    "cors-unsafe request-header names",
    "cos()",
    "count map",
    "count queuing strategy size function",
    "count the records in a range",
    "counter",
    "counter properties",
    "counter scope",
    "counter style",
    "counter symbol",
    "counter()",
    "counter-increment",
    "counter-reset",
    "counter-set",
    "counters",
    "counters()",
    "country-name",
    "cover constraint",
    "cr",
    "create a 2d matrix",
    "create a 3d matrix",
    "create a bluetoothcharacteristicproperties instance from the characteristic",
    "create a bluetoothremotegattcharacteristic representing",
    "create a bluetoothremotegattdescriptor representing",
    "create a bluetoothremotegattservice representing",
    "create a classic script",
    "create a connection",
    "create a constructed cssstylesheet",
    "create a css module script",
    "create a css style sheet",
    "create a cssunitvalue from a pair",
    "create a cssunitvalue from a sum value item",
    "create a date object",
    "create a dommatrix from a 2d dictionary",
    "create a dommatrix from a dictionary",
    "create a dommatrix from the 2d dictionary",
    "create a dommatrix from the dictionary",
    "create a dommatrixreadonly from the 2d dictionary",
    "create a dommatrixreadonly from the dictionary",
    "create a dompoint from the dictionary",
    "create a dompointreadonly from the dictionary",
    "create a domquad from the domquadinit dictionary",
    "create a domquad from the domrectinit dictionary",
    "create a domrect from the dictionary",
    "create a domrectreadonly from the dictionary",
    "create a frozen array",
    "create a global object",
    "create a hit test result",
    "create a hit test result for transient input",
    "create a hit test source",
    "create a hit test source for transient input",
    "create a host function",
    "create a javascript module script",
    "create a json module script",
    "create a layout api context",
    "create a layout constraints object",
    "create a layout fragment",
    "create a legacy callback interface object",
    "create a legacy factory function",
    "create a link request",
    "create a map iterator",
    "create a mediaerror",
    "create a medialist object",
    "create a mediastreamtrack",
    "create a memory buffer",
    "create a memory object",
    "create a named properties object",
    "create a namespace object",
    "create a new animator instance",
    "create a new auxiliary browsing context",
    "create a new browsing context",
    "create a new browsing context group",
    "create a new cache entry",
    "create a new filesystemwritablefilestream",
    "create a new javascript realm",
    "create a new nested browsing context",
    "create a new object implementing the interface",
    "create a new top-level browsing context",
    "create a notification",
    "create a paintrenderingcontext2d object",
    "create a permissions policy for a browsing context",
    "create a permissions policy for a browsing context from response",
    "create a potential-cors request",
    "create a preload key",
    "create a reference space",
    "create a set iterator",
    "create a sorted name list",
    "create a source set",
    "create a speculative mock element",
    "create a storage bucket",
    "create a storage shelf",
    "create a sum value",
    "create a table object",
    "create a type",
    "create a type from a unit map",
    "create a worklet global scope",
    "create an agent",
    "create an element",
    "create an element for a token",
    "create an event",
    "create an exports object",
    "create an identity transformstream",
    "create an inheritance stack",
    "create an interface object",
    "create an interface prototype object",
    "create an internal representation",
    "create an intrinsic sizes object",
    "create an opaque timing info",
    "create an rtcdatachannel",
    "create an rtcdtmfsender",
    "create an rtcrtpreceiver",
    "create an rtcrtpsender",
    "create an rtcrtptransceiver",
    "create an rtcsctptransport",
    "create an underlying value",
    "create and initialize a document object",
    "create and populate a resizeobserverentry",
    "create client",
    "create job",
    "create link options from element",
    "create mock sensor",
    "create the navigation timing entry",
    "create window client",
    "createDocument()",
    "createElement()",
    "createElementNS()",
    "createHTMLDocument()",
    "createbuiltinfunction",
    "createbytedatablock",
    "created",
    "created on",
    "createdataproperty",
    "createdefaultexportsyntheticmodule",
    "creating a device info object",
    "creating a frozen array",
    "creating a frozen array from an iterable",
    "creating a notification",
    "creating a permissions policy",
    "creating a permissions policy from a response",
    "creating a policy container from a fetch response",
    "creating a sequence from an iterable",
    "creating a sum value",
    "creating a type",
    "creating an element",
    "creating an event",
    "creating an identity transformstream",
    "creating an observable array exotic object",
    "creating an opaque timing info",
    "creating an operation function",
    "creating-a-device-info-object",
    "creation",
    "creator base url",
    "creator origin",
    "creator url",
    "credential",
    "credential chooser",
    "credential id",
    "credential key pair",
    "credential parameters",
    "credential private key",
    "credential properties",
    "credential public key",
    "credential source",
    "credential storage modality",
    "credential store",
    "credentialid",
    "credentialidlength",
    "credentialpublickey",
    "credentials",
    "credentials mode",
    "credprops",
    "crimson",
    "critical subresources",
    "crop bitmap data to the source rectangle with formatting",
    "cross axis",
    "cross dimension",
    "cross size",
    "cross size property",
    "cross-axis",
    "cross-axis baseline set",
    "cross-document messaging",
    "cross-end",
    "cross-fade()",
    "cross-origin accessible window property name",
    "cross-origin credentials",
    "cross-origin isolation mode",
    "cross-origin opener policy",
    "cross-origin opener policy enforcement result",
    "cross-origin opener policy value",
    "cross-origin request",
    "cross-origin resource policy check",
    "cross-origin resource policy internal check",
    "cross-origin-embedder-policy",
    "cross-origin-embedder-policy allows credentials",
    "cross-origin-embedder-policy-report-only",
    "cross-origin-isolated",
    "cross-origin-opener-policy",
    "cross-origin-opener-policy-report-only",
    "cross-origin-referrer request",
    "cross-origin-resource-policy",
    "cross-platform attachment",
    "cross-size",
    "cross-start",
    "crossorigin",
    "crossoriginget ( o, p, receiver )",
    "crossorigingetownpropertyhelper ( o, p )",
    "crossoriginownpropertykeys ( o )",
    "crossoriginproperties ( o )",
    "crossoriginpropertyfallback ( p )",
    "crossoriginset ( o, p, v, receiver )",
    "crush",
    "crypto",
    "cryptographic nonce",
    "cryptographic nonce metadata",
    "cryptokey",
    "cryptokeypair",
    "csp list",
    "csp violation report",
    "css box",
    "css bracketed range notation",
    "css color profile",
    "css counters set",
    "css declaration",
    "css declaration block",
    "css feature queries",
    "css gamut map",
    "css gamut mapped",
    "css gamut mapping algorithm",
    "css ident",
    "css ident sequence",
    "css identifier",
    "css layout box",
    "css level 1",
    "css level 2",
    "css level 3",
    "css level 4",
    "css module script",
    "css property to idl attribute",
    "css qualified name",
    "css region",
    "css rule",
    "css rules",
    "css style sheet",
    "css style sheet set",
    "css style sheet set name",
    "css style sheets",
    "css-connected",
    "css-wide keywords",
    "cssfontfacerule",
    "cssfontfeaturevaluesrule",
    "cssstyledeclaration",
    "cssstylesheet",
    "cubic bÃ©zier easing function",
    "cue",
    "cue-after",
    "cue-before",
    "current",
    "current compositing and blending operator",
    "current context is navigation source",
    "current default path",
    "current dimension value",
    "current document",
    "current document readiness",
    "current drag operation",
    "current element queue",
    "current entry",
    "current entry of the joint session history",
    "current event target",
    "current filter",
    "current finished promise",
    "current focus chain of a top-level browsing context",
    "current frequency data",
    "current global object",
    "current high resolution time",
    "current input character",
    "current input code point",
    "current input token",
    "current iteration",
    "current layout",
    "current navigation was lazy loaded",
    "current node",
    "current pixel density",
    "current playback position",
    "current ready promise",
    "current realm record",
    "current request",
    "current settings object",
    "current svg document fragment",
    "current target element",
    "current template insertion mode",
    "current text position",
    "current time",
    "current time-domain data",
    "current transformation matrix",
    "current transition generation",
    "current translate point object",
    "current url",
    "current value",
    "currentcolor",
    "currently focused area of a top-level browsing context",
    "currently running task",
    "cursive",
    "cursive script",
    "cursor",
    "custodian",
    "custom",
    "custom data attribute",
    "custom effect",
    "custom element",
    "custom element constructor",
    "custom element definition",
    "custom element reaction queue",
    "custom element reactions",
    "custom element reactions stack",
    "custom element state",
    "custom highlight",
    "custom highlight name",
    "custom highlight pseudo-element",
    "custom media query",
    "custom property",
    "custom property name string",
    "custom property registration",
    "custom selector",
    "custom validity error message",
    "customized built-in element",
    "cx",
    "cy",
    "cyan",
    "cycle",
    "cyclic module record",
    "cyclic percentage size",
    "cylindrical polar color",
    "d",
    "d50 whitepoint",
    "d65 whitepoint",
    "dark color scheme",
    "darkblue",
    "darkcyan",
    "darkgoldenrod",
    "darkgray",
    "darkgreen",
    "darkgrey",
    "darkkhaki",
    "darkmagenta",
    "darkolivegreen",
    "darkorange",
    "darkorchid",
    "darkred",
    "darksalmon",
    "darkseagreen",
    "darkslateblue",
    "darkslategray",
    "darkslategrey",
    "darkturquoise",
    "darkviolet",
    "dash list",
    "dash positions",
    "dashed",
    "data",
    "data adjustment",
    "data block",
    "data stage",
    "data state",
    "data transport",
    "data type name",
    "data url",
    "data-",
    "data:",
    "data: url processor",
    "data: url struct",
    "database",
    "database access task source",
    "datachannel",
    "datacloneerror",
    "dataerror",
    "datafld",
    "dataformatas",
    "datalist",
    "dataset",
    "datasrc",
    "datatype iri",
    "date",
    "date state (type=date)",
    "date.now()",
    "datetime value",
    "dblclick",
    "dd",
    "deactivate a sensor object",
    "deactivate an event handler",
    "dead key",
    "decibels to linear gain unit",
    "decimal",
    "decimal character reference start state",
    "decimal character reference state",
    "decimal-leading-zero",
    "declaration",
    "declaration block",
    "declarative custom selector",
    "declare the direct manipulation behavior",
    "declared",
    "declared origin",
    "declared permissions policy",
    "declared policy",
    "declared stylepropertymap",
    "declared value",
    "declaring direct manipulation behavior",
    "decode",
    "decode and enqueue a chunk",
    "decoder",
    "decoding",
    "decorated bounding box",
    "decorating box",
    "decreasing",
    "decrypt",
    "dedicated media source failure steps",
    "dedicated worker agent",
    "deep link",
    "deeppink",
    "deepskyblue",
    "default",
    "default `user-agent` value",
    "default action",
    "default allowlist",
    "default allowlists",
    "default asynchronous iterator object",
    "default base direction",
    "default behavior",
    "default button",
    "default classic script fetch options",
    "default control pipe",
    "default display mode",
    "default document timeline",
    "default encode set",
    "default endpoint",
    "default face",
    "default features",
    "default fetch and process the linked resource",
    "default graph",
    "default inline xr device",
    "default iterator object",
    "default language",
    "default maximum",
    "default method steps",
    "default minimum",
    "default namespace",
    "default object",
    "default object size",
    "default origin",
    "default passive value",
    "default permission query algorithm",
    "default permission request algorithm",
    "default playback start position",
    "default port",
    "default powerful feature",
    "default reader",
    "default referrer policy",
    "default screen orientation",
    "default sensor",
    "default sizing algorithm",
    "default slot.",
    "default state",
    "default step",
    "default step base",
    "default style sheet",
    "default theme color",
    "default tojson steps",
    "default value",
    "default value override",
    "default-src",
    "default/on",
    "defaultcolorspace",
    "defaultvalue",
    "define an algorithm",
    "define an inherited policy for feature in browsing context",
    "define an inherited policy for feature in container at origin",
    "define the asynchronous iteration methods",
    "define the attributes",
    "define the constants",
    "define the global property references",
    "define the iteration methods",
    "define the operations",
    "define the regular attributes",
    "define the regular operations",
    "define the static attributes",
    "define the static operations",
    "define the unforgeable regular attributes",
    "define the unforgeable regular operations",
    "defined",
    "defined property name",
    "defining term",
    "definite",
    "definite column position",
    "definite column span",
    "definite grid position",
    "definite grid span",
    "definite position",
    "definite row position",
    "definite row span",
    "definite size",
    "definite span",
    "definition",
    "definition of keys and values",
    "definitions",
    "defs",
    "degenerate ratio",
    "del",
    "delay",
    "delaying load events mode",
    "delaying the load event",
    "delaying-the-load-event flag",
    "delaynode",
    "delayoptions",
    "delayreader",
    "delays the load event",
    "delaywriter",
    "delegates focus",
    "delete",
    "delete a database",
    "delete an existing named property",
    "delete mock sensor",
    "delete records from an object store",
    "delete the selection",
    "deleted",
    "deleter",
    "deliver a network report",
    "deliver resize loop error notification",
    "delta",
    "density-corrected intrinsic width and height",
    "deprecated",
    "deprecates",
    "depthstenciltextures",
    "dequeue",
    "derive the accessible name",
    "derivebits",
    "derivekey",
    "deriving the accessible name",
    "desc",
    "descendant",
    "descendant browsing context",
    "descendant combinator",
    "descendant script fetch options",
    "descendant text content",
    "descendant-selectors",
    "descent metric",
    "description",
    "descriptions",
    "descriptive element",
    "descriptor",
    "descriptor_declaration",
    "descriptors",
    "deserialization steps",
    "design mode enabled",
    "designates",
    "desired size to fill a stream's internal queue",
    "destination",
    "destination node",
    "destination-atop",
    "destination-in",
    "destination-out",
    "destination-over",
    "desynchronized",
    "detacharraybuffer",
    "detached",
    "detaching from a media element",
    "details",
    "details notification task steps",
    "details of touch-action values",
    "detector curve",
    "determine if dtmf can be sent",
    "determine navigation params policy container",
    "determine nosniff",
    "determine request's referrer",
    "determine the creation sandboxing flags",
    "determine the device pixel ratio",
    "determine the fallback encoding",
    "determine the http cache partition",
    "determine the intrinsic sizes",
    "determine the layout attribute",
    "determine the maximum scalefactor",
    "determine the network partition key",
    "determine the origin",
    "determine the purpose of an image",
    "determine the target of an event handler",
    "determine the type of a calculation",
    "determine the used color scheme",
    "determine the value of a named property",
    "determine the value of an indexed property",
    "determine the visibility state",
    "determines the set of origins on which the public key credential may be exercised",
    "determining the http cache partition",
    "determining the network partition key",
    "device change notification steps",
    "device descriptor",
    "device discovery procedure",
    "device enumeration can proceed",
    "device information can be exposed",
    "device permission revocation algorithm",
    "device sensor",
    "device-cmyk()",
    "device-enumeration-can-proceed",
    "device-information-can-be-exposed",
    "device-pixel-ratio",
    "devicechange",
    "devicecompat",
    "deviceid",
    "devolvable",
    "devolvable widget",
    "devolved",
    "devolved widget",
    "dfn",
    "diagonal-fractions",
    "dialog",
    "dialog focusing steps",
    "dice",
    "dictionary",
    "dictionary members",
    "dictionary types",
    "did-perform-automatic-track-selection",
    "digest",
    "digit",
    "digitizer",
    "dimension",
    "dimension attribute source",
    "dimension attributes",
    "dimgray",
    "dimgrey",
    "dir",
    "direct manipulation",
    "direct manipulation behavior",
    "direct nesting",
    "directed progress",
    "direction",
    "direction at the end of a path segment",
    "direction at the start of a path segment",
    "direction mapping",
    "direction of a path",
    "direction of playback",
    "direction-agnostic size",
    "directional embedding",
    "directional keyword",
    "directional override",
    "directionality of an attribute",
    "directionality-capable attributes",
    "directionally scroll an element",
    "directionally scroll the element",
    "directive set",
    "directive-name",
    "directive-value",
    "directives",
    "directly associated with an animation",
    "directly nested",
    "director",
    "directory",
    "directory entry",
    "dirtiness",
    "dirty checkedness",
    "dirty checkedness flag",
    "dirty value flag",
    "disable internals",
    "disabled",
    "disabled fieldset",
    "disabled flag",
    "disabled state",
    "disassociate animator instance of worklet animation",
    "disc",
    "discard",
    "discard a document",
    "disclosure",
    "disclosure requests",
    "disclosure requirement",
    "disconnect",
    "discontinued draft",
    "discover all characteristic descriptors",
    "discover characteristics by uuid",
    "discover primary service by service uuid",
    "discoverable credential",
    "discoverable credential capable",
    "discoverable mode",
    "discoverablecredentialmetadata",
    "discrete",
    "discretionary-ligatures",
    "disowned",
    "dispatch",
    "dispatch the event",
    "dispatches navbeforefocus event",
    "dispatches navnotarget event",
    "dispatching navbeforefocus event",
    "dispatching navnotarget event",
    "display",
    "display a plugin",
    "display frame rate",
    "display mode",
    "display modes list",
    "display no plugin",
    "display size",
    "display state",
    "display technology",
    "display type",
    "display-p3",
    "disposition",
    "dissent",
    "distance along the ray",
    "distinguishable",
    "distinguishing argument index",
    "distribute extra space",
    "distributed alignment",
    "distributed meeting",
    "distributed width",
    "distributing excess width to columns",
    "distribution list",
    "div",
    "dl",
    "dns resolution",
    "do bytes match metadatalist?",
    "do not apply",
    "doctype",
    "doctype legacy string",
    "doctype name state",
    "doctype public identifier (double-quoted) state",
    "doctype public identifier (single-quoted) state",
    "doctype state",
    "doctype system identifier (double-quoted) state",
    "doctype system identifier (single-quoted) state",
    "document",
    "document animator definition",
    "document animator definitions",
    "document base url",
    "document element",
    "document family",
    "document for timing",
    "document language",
    "document layout definition",
    "document layout definitions",
    "document load timing info",
    "document open steps",
    "document order",
    "document paint definition",
    "document paint definitions",
    "document timeline",
    "document tree",
    "document type",
    "document unload timing info",
    "document white space",
    "document white space characters",
    "document write steps",
    "document's body element",
    "document-domain",
    "document-tree child browsing context",
    "document-tree child browsing context name property set",
    "documentfragment",
    "documents",
    "documenttype",
    "dodgerblue",
    "dom application",
    "dom interface",
    "dom level 0",
    "dom tree accessors",
    "domactivate",
    "domain",
    "domain name",
    "domain namespace tree",
    "domain to ascii",
    "domain to unicode",
    "domattrmodified",
    "domcharacterdatamodified",
    "domexception",
    "domfocusin",
    "domfocusout",
    "domhighrestimestamp",
    "domimplementation",
    "dominant baseline",
    "dominant-baseline",
    "dommatrix",
    "dommatrix2dinit",
    "dommatrixinit",
    "domnodeinserted",
    "domnodeinsertedintodocument",
    "domnoderemoved",
    "domnoderemovedfromdocument",
    "dompointinit",
    "domstring",
    "domsubtreemodified",
    "domtokenlist",
    "dotted",
    "double",
    "double-dot path segment",
    "double-rainbow()",
    "down-mixing",
    "download the hyperlink",
    "draft note",
    "draft registry",
    "drag and drop",
    "drag data store",
    "drag data store allowed effects state",
    "drag data store bitmap",
    "drag data store default feedback",
    "drag data store hot spot coordinate",
    "drag data store item list",
    "drag data store mode",
    "draw a paint image",
    "drawing model",
    "drawing states",
    "dropped initial",
    "dropzone",
    "dt",
    "dtend",
    "dtstart",
    "duplex printing",
    "duplex stream",
    "duplicate-attribute",
    "dur",
    "duration",
    "duration time component",
    "duration time component scale",
    "dynamic markup insertion",
    "dynamic viewport size",
    "dynamic viewport-percentage units",
    "dynamicscompressornode",
    "dynamicscompressoroptions",
    "eager",
    "earliest possible position",
    "earliest possible position when the script started",
    "early error",
    "early hints",
    "easing function",
    "east asian width property",
    "ecdh curve name",
    "ecdh derivation steps",
    "ecdh generation steps",
    "ecdh key export steps",
    "ecdh key import steps",
    "ecdhkeyderiveparams",
    "ecdsa curve name",
    "ecdsa generation steps",
    "ecdsa key export steps",
    "ecdsa key import steps",
    "ecdsa signature steps",
    "ecdsa verification steps",
    "ecdsaparams",
    "echocancellation",
    "eckeyalgorithm",
    "eckeygenparams",
    "eckeyimportparams",
    "ed",
    "editable",
    "editable element",
    "editing host",
    "editing host of",
    "editor draft",
    "editor's draft",
    "editorial change",
    "effect",
    "effect stack",
    "effect target",
    "effect value",
    "effective automation rate",
    "effective character map",
    "effective domain",
    "effective end offset",
    "effective frame rate",
    "effective overload set",
    "effective playback rate",
    "effective position of the legacy mouse pointer",
    "effective resident key requirement for credential creation",
    "effective scroll offset",
    "effective start offset",
    "effective timeline phase",
    "effective user verification requirement for assertion",
    "effective user verification requirement for credential creation",
    "elapsed time",
    "elected groups",
    "element",
    "element definition",
    "element definition is running",
    "element has the focus",
    "element instance",
    "element interface",
    "element queue",
    "element type",
    "element()",
    "element-based offset",
    "element-based template.",
    "element-not-rendered",
    "elements",
    "elements with default margins",
    "elevation",
    "eligible for autoplay",
    "eligible for messaging",
    "eligible track",
    "ellipse",
    "ellipse method steps",
    "ellipse()",
    "em",
    "em-over baseline",
    "em-under baseline",
    "email",
    "email state (type=email)",
    "embed",
    "embed task source",
    "embedded accessible name",
    "embedded content",
    "embedder policy",
    "embedder policy value",
    "embedding custom non-visible data with the data-* attributes",
    "embedding document",
    "emergency",
    "emoji presentation participating code points",
    "empty",
    "empty cell",
    "empty float area",
    "empty host",
    "empty permissions policy",
    "empty string",
    "empty table",
    "empty-cells",
    "enable a css style sheet set",
    "enable-background",
    "enabled",
    "enabled css style sheet set",
    "encapsulation contexts",
    "encode",
    "encode and enqueue a chunk",
    "encode and flush",
    "encode or fail",
    "encoder",
    "encoding",
    "encoding labels",
    "encoding name",
    "encoding sniffing algorithm",
    "encodingerror",
    "encrypt",
    "enctype",
    "end",
    "end delay",
    "end of iteration",
    "end page value",
    "end tag open state",
    "end tags",
    "end time",
    "end-of-queue",
    "end-tag-with-attributes",
    "end-tag-with-trailing-solidus",
    "enddelay",
    "ended",
    "ended playback",
    "ending edges",
    "ending point",
    "ending shape",
    "ending token",
    "endpoint",
    "endpoint descriptor",
    "endpoint group",
    "endpoint pair",
    "endpoint-on-the-path",
    "ends for any reason other than the stop() method being invoked",
    "ends in a number checker",
    "enforce a response's cross-origin opener policy",
    "enforce the policy",
    "enforced",
    "enqueue",
    "enqueue a custom element callback reaction",
    "enqueue a custom element upgrade reaction",
    "enqueue an element on the appropriate element queue",
    "ensure an immersive xr device is selected",
    "ensure there is a subpath",
    "ensurecspdoesnotblockstringcompilation",
    "ensurecspdoesnotblockstringcompilation(callerrealm, calleerealm, source)",
    "ensurecspdoesnotblockstringcompilation(realm, source)",
    "ensurecspdoesnotblockwasmbytecompilation(realm)",
    "entangle",
    "entries",
    "entry",
    "entry construction algorithm",
    "entry execution context",
    "entry global object",
    "entry list",
    "entry realm",
    "entry settings object",
    "entry update",
    "entry value",
    "enumerableownpropertynames",
    "enumerate all devices attached to the system",
    "enumerate immersive xr devices",
    "enumerated attributes",
    "enumeration",
    "enumeration types",
    "enumeration value",
    "enumeration's values",
    "env()",
    "envelopefollower",
    "environment",
    "environment discarding steps",
    "environment encoding",
    "environment settings object",
    "eof code point",
    "eof-before-tag-name",
    "eof-in-cdata",
    "eof-in-comment",
    "eof-in-doctype",
    "eof-in-script-html-comment-like-text",
    "eof-in-tag",
    "epoch-relative timestamp",
    "equal numeric value",
    "equal to",
    "equivalent",
    "equivalent path",
    "equivalent token sequence",
    "erase all event listeners and handlers",
    "errata",
    "erratum",
    "error",
    "error mode",
    "error names table",
    "error response",
    "escapable raw text elements",
    "escape a character",
    "escape a character as code point",
    "escape the vcard text string",
    "escaped as code point",
    "escaping",
    "escaping a string",
    "essential claims",
    "establish a websocket connection",
    "establish an independent formatting context",
    "establish an orthogonal flow",
    "established an independent formatting context",
    "establishes an independent formatting context",
    "establishing an independent formatting context",
    "establishing the media timeline",
    "estimated floor level",
    "euc-jp",
    "euc-jp decoder",
    "euc-jp encoder",
    "euc-jp jis0212",
    "euc-jp lead",
    "euc-kr",
    "euc-kr decoder",
    "euc-kr encoder",
    "euc-kr lead",
    "eval()",
    "evaluate",
    "evaluate a key path on a value",
    "evaluate media queries and report changes",
    "evaluating a selector",
    "event",
    "event attribute",
    "event constructing steps",
    "event focus",
    "event handler",
    "event handler content attribute",
    "event handler event type",
    "event handler idl attribute",
    "event handler map",
    "event listener",
    "event loop",
    "event loop processing model",
    "event order",
    "event phase",
    "event target",
    "event type",
    "eventinit",
    "eventtarget",
    "ex",
    "exact matching",
    "example term",
    "exception",
    "exception objects",
    "exceptionsenabled",
    "excess width",
    "exchange mtu",
    "exclude fragment",
    "exclude fragments",
    "excluded subtree",
    "exclusion area",
    "exclusion box",
    "exclusion draft",
    "exclusion draft charter",
    "exclusion element",
    "exclusion opportunity",
    "exclusive access",
    "exclusive text node",
    "exdate",
    "execcommand()",
    "execute a javascript: url request",
    "execute the script element",
    "exists",
    "exit fullscreen",
    "exit value",
    "exp()",
    "expanded",
    "expanded form",
    "expanded name",
    "expanded term definition",
    "expanded transition property name",
    "expanding",
    "expansion",
    "expired",
    "explicit \"eof\" character",
    "explicit column span",
    "explicit consent",
    "explicit grid",
    "explicit grid column",
    "explicit grid properties",
    "explicit grid row",
    "explicit grid span",
    "explicit grid track",
    "explicit intrinsic inner size",
    "explicit row span",
    "explicit span",
    "explicithistorynavigation",
    "explicitly enabled",
    "explicitly set attr-element",
    "explicitly set attr-elements",
    "explicitly supported json mime type",
    "explicitly supported xml mime type",
    "explicitly-assigned line name",
    "exported function",
    "exported function cache",
    "exportkey",
    "expose a user interface to the user",
    "exposed",
    "exposure decision algorithm for devices other than camera and microphone",
    "exposure set",
    "express permission",
    "extend",
    "extended attribute",
    "extended inquiry response",
    "extended report",
    "extended-address",
    "extension",
    "extension identifier",
    "extension sensor interface",
    "extension specification",
    "extension-token",
    "extensions to the predefined set of link types",
    "extensions to the predefined set of metadata names",
    "extern value cache",
    "external application resource",
    "external application resource's",
    "external file reference",
    "external now hidden algorithm",
    "external now visible algorithm",
    "external resource link",
    "extra-condensed",
    "extra-expanded",
    "extract a key from a value using a key path",
    "extract a marked token",
    "extract a mime type",
    "extract any vcard data represented by those nodes",
    "extract any vevent data represented by those nodes",
    "extract content-range values",
    "extract header list values",
    "extract header values",
    "extract links from headers",
    "extract the microdata from those nodes into a json form",
    "extractable",
    "extracting header list values",
    "extracting header values",
    "extrinsic sizing",
    "face-to-face meeting",
    "facets",
    "facing pages",
    "facingmode",
    "factory method",
    "fail",
    "fail the connection",
    "fail the websocket connection",
    "failed",
    "failed to load",
    "failure reason",
    "failure sampling rate",
    "failure_fraction",
    "failures",
    "fake worklet 1",
    "fake worklet 2",
    "fakeworklet1",
    "fakeworklet2",
    "fallback",
    "fallback alignment",
    "fallback base url",
    "fallback chain",
    "fallback content",
    "fallback size",
    "false in the negative range",
    "false-by-default",
    "familiar with",
    "family-name",
    "fantasy",
    "farthest-side",
    "fax",
    "feature",
    "feature descriptor",
    "feature requirements",
    "feature separator",
    "feature-identifier",
    "featureless",
    "feblend",
    "fecolormatrix",
    "fecomponenttransfer",
    "fecomposite",
    "feconvolvematrix",
    "fediffuselighting",
    "fedisplacementmap",
    "fedistantlight",
    "fedropshadow",
    "feflood",
    "fefunca",
    "fefuncb",
    "fefuncg",
    "fefuncr",
    "fegaussianblur",
    "feimage",
    "femerge",
    "femergenode",
    "femorphology",
    "feoffset",
    "fepointlight",
    "fespecularlighting",
    "fespotlight",
    "fetch",
    "fetch a classic script",
    "fetch a classic worker script",
    "fetch a classic worker-imported script",
    "fetch a css style sheet",
    "fetch a font",
    "fetch a module worker script graph",
    "fetch a modulepreload module script graph",
    "fetch a single module script",
    "fetch a style resource",
    "fetch a worklet script graph",
    "fetch a worklet/module worker script graph",
    "fetch an @import",
    "fetch an external color profile",
    "fetch an external image for a stylesheet",
    "fetch an external module script graph",
    "fetch an external resource for a shape",
    "fetch an import() module script graph",
    "fetch an inline module script graph",
    "fetch and process the linked resource",
    "fetch controller",
    "fetch directives",
    "fetch metadata headers",
    "fetch params",
    "fetch response handover",
    "fetch scheme",
    "fetch steps",
    "fetch the descendants of a module script",
    "fetch the descendants of and link a module script",
    "fetch timing info",
    "fetch()",
    "fetching an image resource",
    "fetile",
    "feturbulence",
    "fictional tag sequence",
    "fieldset",
    "figcaption",
    "figure",
    "file",
    "file entry",
    "file read error",
    "file reading task source",
    "file type guidelines",
    "file upload state (type=file)",
    "filelist",
    "filelock",
    "fill",
    "fill mode",
    "fill painting area",
    "fill positioning area",
    "fill rule",
    "fill steps",
    "fill style",
    "fill-break",
    "fill-color",
    "fill-image",
    "fill-opacity",
    "fill-origin",
    "fill-position",
    "fill-repeat",
    "fill-rule",
    "fill-size",
    "filled",
    "filter",
    "filter primitive",
    "filter primitive attribute",
    "filter primitive attributes",
    "filter primitive subregion",
    "filter primitive tree",
    "filter property",
    "filter region",
    "filter()",
    "filter-margin-top, filter-margin-right, filter-margin-bottom, filter-margin-left",
    "filter-primitive",
    "filtered response",
    "final sandboxing flag set",
    "finalizationregistry",
    "finalize",
    "finalize and report timing",
    "find a list of configuration descriptors for the connected usb device",
    "find a list of descriptors for a configuration",
    "find a list of endpoint descriptors",
    "find a potential indicated element",
    "find a slot",
    "find flattened slottables",
    "find focusable areas",
    "find if the interface is claimed",
    "find slottables",
    "find the alternate index",
    "find the alternate interface for the current alternate setting",
    "find the current configuration",
    "find the device descriptor for the connected usb device",
    "find the endpoint",
    "find the endpoint descriptor",
    "find the first parse error",
    "find the interface index",
    "find the intersecting or enclosed descendants",
    "find the matching font faces",
    "find the non-container graphics elements",
    "find the opposite of true",
    "find the reporting frequency of a sensor object",
    "find the shortest distance",
    "find the typographic character for a character",
    "find-in-page",
    "find-in-page interface",
    "finding a slot",
    "finding flattened slottables",
    "finding focusable areas",
    "finding slottables",
    "finding the shortest distance",
    "fingerprint",
    "fingerprinting surface",
    "fingerprints",
    "finish an animation",
    "finish event",
    "finish job",
    "finish notification steps",
    "finishdynamicimport",
    "finished",
    "finished play state",
    "fire",
    "fire a dnd event",
    "fire a focus event",
    "fire a font load event",
    "fire a functional event",
    "fire a layoutchange event",
    "fire a page transition event",
    "fire a pointer event",
    "fire a progress event",
    "fire a service worker notification event",
    "fire a success event",
    "fire a sync event",
    "fire a track event",
    "fire a version change event",
    "fire an advertisementreceived event",
    "fire an error event",
    "fire an event",
    "fire an input source event",
    "fire functional event",
    "firebrick",
    "firefoxplatform",
    "firefoxversion",
    "firing",
    "firing a click event",
    "firing a synthetic pointer event named e",
    "firing a track event named e",
    "firing submission events",
    "first available font",
    "first baseline set",
    "first baselines",
    "first child",
    "first cross-axis baseline set",
    "first formatted line",
    "first letter",
    "first main-axis baseline set",
    "first public working draft",
    "first symbol value",
    "first-baseline alignment",
    "first-baseline content-alignment",
    "first-baseline self-alignment",
    "first-child",
    "first-factor roaming authenticator",
    "first-letter text",
    "first-person observer view",
    "fit-content block size",
    "fit-content inline size",
    "fit-content size",
    "fixed position",
    "fixed positioning containing block",
    "fixed sizing function",
    "fixed-positioned",
    "fixed-positioned box",
    "flagged as full",
    "flags",
    "flags data type",
    "flat tree",
    "flattened",
    "flattened element tree",
    "flattened tabindex-ordered focus navigation scope",
    "flattening",
    "flex",
    "flex base size",
    "flex container",
    "flex direction",
    "flex factor",
    "flex factor sum",
    "flex formatting context",
    "flex fraction",
    "flex item",
    "flex layout",
    "flex line",
    "flex space",
    "flex-basis",
    "flex-direction",
    "flex-flow",
    "flex-grow",
    "flex-level",
    "flex-shrink",
    "flex-wrap",
    "flexible",
    "flexible length",
    "flexible sizing function",
    "flexible tracks",
    "float",
    "float anchor",
    "float area",
    "float block formatting context",
    "float containing block formatting context",
    "float reference",
    "float rules",
    "float-defer",
    "float-offset",
    "float-reference",
    "flood-color",
    "flood-opacity",
    "floralwhite",
    "flow",
    "flow content",
    "flow fragment height",
    "flow layout",
    "flow of an element",
    "flow-from",
    "flow-into",
    "flow-relative",
    "flow-relative direction",
    "flush and enqueue",
    "flush autofocus candidates",
    "flush code points consumed as a character reference",
    "fn",
    "focus",
    "focus chain",
    "focus delegate",
    "focus fixup rule",
    "focus navigation scope",
    "focus navigation scope owner",
    "focus ring",
    "focus state",
    "focus update steps",
    "focusable",
    "focusable area",
    "focused",
    "focused area of the document",
    "focusevent",
    "focusin",
    "focusing steps",
    "focusout",
    "follow the hyperlink",
    "following element",
    "font",
    "font block period",
    "font download timer",
    "font failure period",
    "font feature value declaration",
    "font mime type",
    "font source",
    "font specific",
    "font style source object",
    "font swap period",
    "font type pattern matching algorithm",
    "font-face",
    "font-face-name",
    "font-face-src",
    "font-face-uri",
    "font-family",
    "font-feature-settings",
    "font-kerning",
    "font-language-override",
    "font-optical-sizing",
    "font-palette",
    "font-relative lengths",
    "font-size",
    "font-size-adjust",
    "font-src",
    "font-stretch",
    "font-style",
    "font-synthesis",
    "font-synthesis-small-caps",
    "font-synthesis-style",
    "font-synthesis-weight",
    "font-variant",
    "font-variant-alternates",
    "font-variant-caps",
    "font-variant-east-asian",
    "font-variant-emoji",
    "font-variant-ligatures",
    "font-variant-numeric",
    "font-variant-position",
    "font-variation-settings",
    "font-weight",
    "font_face_rule",
    "font_face_sym",
    "fontface",
    "footer",
    "footnote",
    "footnote counter",
    "footnote-display",
    "footnote-policy",
    "forbidden domain code point",
    "forbidden header name",
    "forbidden host code point",
    "forbidden method",
    "forbidden response-header name",
    "force async",
    "force-quirks flag",
    "forced break",
    "forced break values",
    "forced colors mode",
    "forced line break",
    "forced paragraph break",
    "forced sandboxing flag set",
    "forced-color-adjust",
    "forcibly close",
    "foreign elements",
    "foreignobject",
    "forestgreen",
    "forget the media element's media-resource-specific tracks",
    "forgiving-base64 decode",
    "forgiving-base64 encode",
    "form",
    "form element pointer",
    "form owner",
    "form submission",
    "form-action",
    "form-associated",
    "form-associated custom element",
    "form-associated elements",
    "formal objection",
    "formally addressed",
    "formatting",
    "formatting context",
    "formatting structure",
    "formdata",
    "forward progress",
    "forward-compatible parsing",
    "foster parenting",
    "found definition for \"cannot be used together\", but nothing links to it. this is usually a spec bug!",
    "found definition for \"icon\", but nothing links to it. this is usually a spec bug!",
    "found definition for \"manifest url\", but nothing links to it. this is usually a spec bug!",
    "found definition for \"recognized key format values\", but nothing links to it. this is usually a spec bug!",
    "found definition for \"solid fill\", but nothing links to it. this is usually a spec bug!",
    "found definition for \"steps for determining the web app's chosen display mode\", but nothing links to it. this is usually a spec bug!",
    "found definition for \"subtags\", but nothing links to it. this is usually a spec bug!",
    "fr",
    "fragment",
    "fragment box",
    "fragment case",
    "fragment percent-encode set",
    "fragment pseudo-element",
    "fragment state",
    "fragmentainer",
    "fragmentation",
    "fragmentation break",
    "fragmentation container",
    "fragmentation context",
    "fragmentation direction",
    "fragmentation root",
    "fragmented flow",
    "fragmenter",
    "frame",
    "frame border color",
    "frame requested flag",
    "frame update",
    "frame-ancestors",
    "frame-ancestors directive",
    "frame-current",
    "frame-requested",
    "frame-src",
    "framerate",
    "frameset",
    "frameset-ok flag",
    "free space",
    "freely fragmentable",
    "frequency",
    "fresh response",
    "friend",
    "from",
    "from an external file",
    "frozen array",
    "frozen array type",
    "frozen base url",
    "ftn",
    "fuchsia",
    "fulfill",
    "fulfilled",
    "fulfillment",
    "full glyph cell",
    "full-width",
    "fullscreen an element",
    "fullscreen element",
    "fullscreen element ready check",
    "fullscreen flag",
    "fullscreen is supported",
    "fullscreen-feature",
    "fullwidth closing punctuation",
    "fullwidth colon punctuation",
    "fullwidth dot punctuation",
    "fullwidth middle dot punctuation",
    "fullwidth opening punctuation",
    "fully clipped",
    "fully decodable",
    "fully exit fullscreen",
    "fully inflexible",
    "fully reading body as promise",
    "fully visible",
    "function",
    "functional notation",
    "functional pseudo-class",
    "functionbody",
    "furthest ancestral svg viewport",
    "fx",
    "fy",
    "g",
    "gain focus",
    "gainnode",
    "gainoptions",
    "gainsboro",
    "gamut",
    "gamut-map",
    "gap",
    "gap interoperability requirements",
    "garbage-collect the connection",
    "gather active observations at depth",
    "gatheringstatechange",
    "gatt",
    "gatt assigned characteristics",
    "gatt assigned descriptors",
    "gatt assigned services",
    "gatt blocklist",
    "gatt client",
    "gatt procedure",
    "gatt procedures",
    "gatt profile hierarchy",
    "gatt server",
    "gb18030",
    "gb18030 decoder",
    "gb18030 encoder",
    "gb18030 first",
    "gb18030 second",
    "gb18030 third",
    "gbk",
    "gbk decoder",
    "gbk encoder",
    "geckoversion",
    "gender-identity",
    "general category",
    "general discovery procedure",
    "generalized rdf dataset",
    "generalized rdf datasets",
    "generate a counter",
    "generate a counter representation",
    "generate a fragment",
    "generate a key",
    "generate a network error report",
    "generate a new blob url",
    "generate a random uuid",
    "generate a report",
    "generate all implied end tags thoroughly",
    "generate an xml value",
    "generate baselines",
    "generate implied end tags",
    "generate report for violation of permissions policy on settings",
    "generate test report",
    "generated",
    "generated content",
    "generatekey",
    "generating a new blob url",
    "generating a random uuid",
    "generating authenticator",
    "generation",
    "generator-unable-to-provide-required-alt",
    "generic attribute profile",
    "generic javascript object formatting",
    "generic raw text element parsing algorithm",
    "generic rcdata element parsing algorithm",
    "generic sensor permission revocation algorithm",
    "geo",
    "geometry properties",
    "georgian",
    "get",
    "get a copy of the buffer source",
    "get a copy of the bytes held by the buffer source",
    "get a document layout definition",
    "get a domstringmap's name-value pairs",
    "get a final encoding",
    "get a final mime type",
    "get a layout child",
    "get a layout class instance",
    "get a layout definition",
    "get a promise to wait for all",
    "get a response mime type",
    "get a style map",
    "get action url",
    "get an attribute",
    "get an attribute by name",
    "get an attribute by namespace and local name",
    "get an attribute value",
    "get an element's noopener",
    "get an element's target",
    "get an encoder",
    "get an encoding",
    "get an output encoding",
    "get an xml encoding",
    "get configuration",
    "get credentials",
    "get descriptor",
    "get frame type",
    "get mock sensor",
    "get newest worker",
    "get registration",
    "get the \"all\"-indexed element",
    "get the \"all\"-indexed or named element(s)",
    "get the \"all\"-named element(s)",
    "get the bluetoothdevice representing",
    "get the current permission state",
    "get the current value of the event handler",
    "get the focusable area",
    "get the next iteration result",
    "get the notifications permission state",
    "get the object",
    "get the parent",
    "get the service worker object",
    "get the service worker registration object",
    "get the strongest metadata from set",
    "get time origin timestamp",
    "get url",
    "get value from latest reading",
    "get, decode, and split",
    "getBattery()",
    "getElementById()",
    "getElementsByClassName()",
    "getactivescriptormodule",
    "getfunctionrealm",
    "getgattchildren",
    "getglobalvalue",
    "getprioritizedhashfunction",
    "getprioritizedhashfunction(a, b)",
    "getrandomvalues",
    "getter",
    "getter steps",
    "getting a promise to wait for all",
    "getting a structured field value",
    "getting a text response",
    "getting an encoder",
    "getting an encoding",
    "getting the current permission state",
    "getting the keys",
    "getting the service worker object",
    "getting the service worker registration object",
    "getting the value of an entry",
    "getting the values",
    "getusermedia specific failure is allowed",
    "getusermedia-specific-failure-is-allowed",
    "ghostwhite",
    "given-name",
    "global alpha",
    "global animation list",
    "global attributes",
    "global date and time",
    "global identifier",
    "global monotonic clock",
    "global names",
    "global object",
    "global object cache",
    "globalcompositeoperation",
    "globalcrypto",
    "glyph",
    "glyph-midline",
    "glyph-orientation-horizontal",
    "glyph-orientation-vertical",
    "go",
    "gold",
    "goldenrod",
    "gpucanvascontext",
    "gradient box",
    "gradient element",
    "gradient function",
    "gradient line",
    "gradient-average-color",
    "gradienttransform",
    "gradientunits",
    "graph",
    "graph name",
    "graph object",
    "grapheme cluster",
    "graphics element",
    "graphics referencing element",
    "gray",
    "graytext",
    "greater than",
    "green",
    "greenyellow",
    "grey",
    "grid",
    "grid ancestor",
    "grid area",
    "grid axis",
    "grid cell",
    "grid column",
    "grid column line",
    "grid container",
    "grid element.",
    "grid formatting context",
    "grid item",
    "grid item placement algorithm",
    "grid layout",
    "grid line",
    "grid order",
    "grid placement",
    "grid position",
    "grid row",
    "grid row line",
    "grid sizing algorithm",
    "grid span",
    "grid track",
    "grid-area",
    "grid-auto-columns",
    "grid-auto-flow",
    "grid-auto-rows",
    "grid-column",
    "grid-column-end",
    "grid-column-gap",
    "grid-column-start",
    "grid-gap",
    "grid-level",
    "grid-modified document order",
    "grid-placement property",
    "grid-row",
    "grid-row-end",
    "grid-row-gap",
    "grid-row-start",
    "grid-template",
    "grid-template-areas",
    "grid-template-columns",
    "grid-template-rows",
    "groove",
    "group",
    "group alignment",
    "group decision",
    "group decision appeal",
    "group effect",
    "group note",
    "group stack",
    "group-align",
    "group-aligned",
    "groupid",
    "growth limit",
    "guaranteed-invalid value",
    "guidelines for exposing cues in various formats as text track cues",
    "gutter",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "half-leading",
    "half-width",
    "hand-off to external software",
    "handle",
    "handle attribute changes",
    "handle close events",
    "handle content codings",
    "handle errors",
    "handle fetch",
    "handle fetch task source",
    "handle functional event task source",
    "handle response end-of-body",
    "handle service worker client unload",
    "handle user agent shutdown",
    "handled",
    "handler",
    "hang",
    "hanging baseline",
    "hanging glyph",
    "hanging-punctuation",
    "hard",
    "has a border",
    "has a protected interface class",
    "has a reversed range",
    "has a style sheet that is blocking scripts",
    "has active observations",
    "has an attribute",
    "has been shipped",
    "has cross-origin redirects",
    "has default method steps",
    "has focus steps",
    "has no style sheet that is blocking scripts",
    "has range limitations",
    "has skipped observations",
    "hash",
    "hash-algo",
    "hash-algorithm",
    "hash-expression",
    "hash-source",
    "hash-with-options",
    "hashalgorithmidentifier",
    "hasownproperty",
    "have a particular element in button scope",
    "have a particular element in list item scope",
    "have a particular element in scope",
    "have a particular element in select scope",
    "have a particular element in table scope",
    "have a periodic domain",
    "have an element target node in a specific scope",
    "have default method steps",
    "head",
    "head element pointer",
    "header",
    "header list",
    "header name",
    "header policy",
    "header value",
    "header-name cache entry match",
    "headers guard",
    "heading content",
    "heading level",
    "headings",
    "height",
    "hex color",
    "hex color notation",
    "hex digit",
    "hexadecimal character reference start state",
    "hexadecimal character reference state",
    "hexadecimal representation",
    "hgroup",
    "hidden",
    "hidden annotation",
    "hidden ruby annotation",
    "hidden state",
    "hidden state (type=hidden)",
    "hidden until found state",
    "hide",
    "hierarchically correct main element",
    "hierarchyrequesterror",
    "high boundary",
    "high water mark",
    "high-level",
    "highlight",
    "highlight overlay",
    "highlight pseudo-element",
    "highlight registry",
    "highlighttext",
    "historical agent cluster key map",
    "historical-ligatures",
    "history handling",
    "history handling behavior",
    "history traversal task source",
    "history-navigation flag",
    "historyhandling",
    "historypolicycontainer",
    "hit test",
    "hit-test",
    "hit-testing",
    "hkdfparams",
    "hkern",
    "hmac key export steps",
    "hmac key import steps",
    "hmacimportparams",
    "hmackeyalgorithm",
    "hmackeygenparams",
    "hold phase",
    "hold time",
    "home",
    "home document",
    "home sequential focus navigation order",
    "honeydew",
    "honor user preferences for automatic text track selection",
    "honorific-prefix",
    "honorific-suffix",
    "horizontal",
    "horizontal axis",
    "horizontal block flow",
    "horizontal dimension",
    "horizontal element",
    "horizontal offset",
    "horizontal script",
    "horizontal typographic mode",
    "horizontal writing mode",
    "horizontal-only",
    "host",
    "host element",
    "host equals",
    "host institutions",
    "host interfaces",
    "host language",
    "host parser",
    "host parsing",
    "host serializer",
    "host state",
    "host syntax",
    "host-char",
    "host-including inclusive ancestor",
    "host-part",
    "host-part match",
    "host-source",
    "hostcalljobcallback",
    "hostcalljobcallback(callback, v, argumentslist)",
    "hostenqueuefinalizationregistrycleanupjob",
    "hostenqueuefinalizationregistrycleanupjob(finalizationregistry)",
    "hostenqueuepromisejob",
    "hostenqueuepromisejob(job, realm)",
    "hostensurecancompilestrings",
    "hostensurecancompilestrings(realm)",
    "hostgetimportmetaproperties",
    "hostgetimportmetaproperties(modulerecord)",
    "hostgetsupportedimportassertions",
    "hostgetsupportedimportassertions()",
    "hostimportmoduledynamically",
    "hostimportmoduledynamically(referencingscriptormodule, modulerequest, promisecapability)",
    "hostmakejobcallback",
    "hostmakejobcallback(callable)",
    "hostname state",
    "hostpromiserejectiontracker",
    "hostpromiserejectiontracker(promise, operation)",
    "hostresolveimportedmodule",
    "hostresolveimportedmodule(referencingscriptormodule, modulerequest)",
    "hosts",
    "hotpink",
    "hr",
    "href",
    "hsl()",
    "hsla()",
    "hsts-safe origin",
    "html",
    "html document",
    "html documents",
    "html element insertion steps",
    "html element removing steps",
    "html elements",
    "html fragment parsing algorithm",
    "html fragment serialization algorithm",
    "html integration point",
    "html mime type",
    "html namespace",
    "html parser",
    "html script extraction",
    "htmlcollection",
    "htmldocument",
    "http fetch",
    "http header layer division",
    "http newline byte",
    "http quoted-string token code point",
    "http tab or space",
    "http tab or space byte",
    "http token code point",
    "http whitespace",
    "http whitespace byte",
    "http(s) scheme",
    "http-default-style",
    "http-network fetch",
    "http-network-or-cache fetch",
    "http-redirect fetch",
    "http:",
    "http://microformats.org/profile/hcalendar#vevent",
    "http://microformats.org/profile/hcard",
    "http://n.whatwg.org/work",
    "https:",
    "human palatability",
    "hwb()",
    "hyperlink",
    "hyperlink annotations",
    "hyperlink auditing",
    "hyphen-separated matching",
    "hyphenate",
    "hyphenate-character",
    "hyphenate-limit-chars",
    "hyphenate-limit-last",
    "hyphenate-limit-lines",
    "hyphenate-limit-zone",
    "hyphenation",
    "hyphenation opportunity",
    "hyphens",
    "hypot()",
    "hypothetical cross size",
    "hypothetical fr size",
    "hypothetical main size",
    "hysteresis",
    "i",
    "i/o queue",
    "ibm866",
    "ice agent",
    "ice candidate pool size",
    "ice connection state",
    "ice gathering state",
    "ice servers list",
    "ice transports setting",
    "icecandidate",
    "icecandidateerror",
    "iceconnectionstatechange",
    "icegatheringstatechange",
    "icon purposes",
    "icon purposes list",
    "ictcp",
    "id",
    "id map",
    "id selector",
    "ident",
    "ident code point",
    "ident sequence",
    "ident-start code point",
    "identical to",
    "identified with",
    "identifier",
    "identifiers",
    "identity",
    "identity resolving key",
    "identity transform",
    "identity transform function",
    "identity transform stream",
    "ideographic-ink-over baseline",
    "ideographic-ink-under baseline",
    "ideographic-over baseline",
    "ideographic-under baseline",
    "ideographs",
    "idl attribute name to animation property name",
    "idl attribute to css property",
    "idl fragment",
    "idl type for a canvas filter attribute",
    "idl-exposed autofill value",
    "idle phase",
    "idle play state",
    "if aborted",
    "if()",
    "iframe",
    "iframe fullscreen flag",
    "iframe load event steps",
    "iframe load in progress",
    "iframe sandboxing flag set",
    "ignore",
    "ignore higher-layer caching",
    "ignore unknown",
    "ignore valid",
    "ignore-destructive-writes counter",
    "ignored",
    "iirfilternode",
    "iirfilteroptions",
    "illegal",
    "image",
    "image button state (type=image)",
    "image candidate string",
    "image decoding hint",
    "image format-based selection",
    "image map",
    "image mime type",
    "image request",
    "image resolution",
    "image resource",
    "image source",
    "image type pattern matching algorithm",
    "image()",
    "image-orientation",
    "image-rendering",
    "image-rendering rectangle",
    "image-resolution",
    "image-set()",
    "image/gif",
    "image/jpeg",
    "image/png",
    "image/svg+xml",
    "imagebitmaprenderingcontext creation algorithm",
    "ime",
    "img",
    "img-src",
    "immediate user selection",
    "immediately",
    "immersive session",
    "immersive session request is allowed",
    "immersive xr device",
    "immutable prototype exotic object",
    "implementation",
    "implementation-check an object",
    "implementation-defined",
    "implements",
    "implicit column span",
    "implicit consent",
    "implicit grid",
    "implicit grid column",
    "implicit grid lines",
    "implicit grid properties",
    "implicit grid row",
    "implicit grid span",
    "implicit grid track",
    "implicit pointer capture",
    "implicit release of pointer capture",
    "implicit row span",
    "implicit signals",
    "implicit span",
    "implicit template",
    "implicitly potentially render-blocking",
    "implicitly release the pointer capture",
    "implicitly releasing pointer capture",
    "implicitly-assigned line name",
    "implicitly-named area",
    "implied document",
    "implied event loop",
    "impolite peer",
    "import conditions",
    "import scripts into worker global scope",
    "import()",
    "import.meta",
    "importNode()",
    "important",
    "importkey",
    "impp",
    "in",
    "in a document",
    "in a document tree",
    "in a formal activation state",
    "in auto mode",
    "in collapsed-borders mode",
    "in effect",
    "in error reporting mode",
    "in fixed mode",
    "in flow",
    "in parallel",
    "in play",
    "in separated-borders mode",
    "in the background",
    "in the context of a shadow tree",
    "in the context of the shadow tree",
    "in transfers",
    "in-flow",
    "inactive timeline",
    "inactiveborder",
    "inactivecaption",
    "inactivecaptiontext",
    "inappropriate for a control",
    "include",
    "include credentials",
    "include_subdomains",
    "included block",
    "included service",
    "includes a nullable type",
    "includes credentials",
    "includes statement",
    "includes undefined",
    "inclusion criteria",
    "inclusive ancestor",
    "inclusive descendant",
    "incorrectly-closed-comment",
    "incorrectly-opened-comment",
    "increasing",
    "increment the marquee current loop index",
    "incrementally reading a body",
    "incrementally-read loop",
    "incumbent",
    "incumbent global object",
    "incumbent realm",
    "incumbent settings object",
    "indefinite",
    "indefinite column span",
    "indefinite grid span",
    "indefinite row span",
    "indefinite size",
    "indefinite span",
    "independent formatting context",
    "index",
    "index big5",
    "index big5 pointer",
    "index code point",
    "index euc-kr",
    "index gb18030",
    "index gb18030 ranges",
    "index gb18030 ranges code point",
    "index gb18030 ranges pointer",
    "index handle",
    "index iso-2022-jp katakana",
    "index jis0208",
    "index jis0212",
    "index map",
    "index mapping",
    "index of the host function",
    "index pointer",
    "index shift_jis pointer",
    "index single-byte",
    "indexed properties",
    "indexed property getter",
    "indexed property setter",
    "indexsizeerror",
    "indianred",
    "indicate focus",
    "indices",
    "indigo",
    "indistinguishable by user agent string",
    "individual",
    "inert",
    "infinitely growable",
    "info",
    "infobackground",
    "infotext",
    "inherit",
    "inherit counters",
    "inherit its getter",
    "inherit,",
    "inherit-by-default",
    "inheritance",
    "inherited dictionaries",
    "inherited interfaces",
    "inherited policies",
    "inherited policy",
    "inherited policy for a feature",
    "inherited property",
    "inherited time",
    "inherited value",
    "inhibit",
    "initEvent()",
    "initial",
    "initial containing block",
    "initial float reference",
    "initial free space",
    "initial letter",
    "initial letter box",
    "initial objects",
    "initial point",
    "initial representation for the counter value",
    "initial scroll position",
    "initial url",
    "initial value",
    "initial viewport",
    "initial-height",
    "initial-letter",
    "initial-letter-align",
    "initial-letter-wrap",
    "initial-width",
    "initialinsertion",
    "initialize a cylinder layer",
    "initialize a equirect layer",
    "initialize a global object",
    "initialize a global's endpoint list",
    "initialize a memory object",
    "initialize a new intersectionobserver",
    "initialize a quad layer",
    "initialize a response",
    "initialize a sensor object",
    "initialize a table object",
    "initialize a worker global scope's policy container",
    "initialize an imagedata object",
    "initialize an instance object",
    "initialize the render state",
    "initialize the session",
    "initialize the underlying source",
    "initialize the viewport",
    "initializehostdefinedrealm",
    "initializing",
    "initiate the drag-and-drop operation",
    "initiator",
    "inject a key into a value using a key path",
    "ink overflow",
    "ink overflow area",
    "ink overflow rectangle",
    "ink overflow region",
    "inline",
    "inline axis",
    "inline base direction",
    "inline block",
    "inline block box",
    "inline box",
    "inline dimension",
    "inline documentation for external scripts",
    "inline end",
    "inline float",
    "inline formatting context",
    "inline initial letter",
    "inline initial letter box",
    "inline layout",
    "inline session",
    "inline session request is allowed",
    "inline size",
    "inline start",
    "inline xr device",
    "inline-axis",
    "inline-base direction",
    "inline-block",
    "inline-end",
    "inline-level",
    "inline-level box",
    "inline-level boxes",
    "inline-level content",
    "inline-level elements",
    "inline-size",
    "inline-size containment",
    "inline-sizing",
    "inline-start",
    "inline-table",
    "inlinification",
    "inlinify",
    "inner block size",
    "inner box-shadow",
    "inner display type",
    "inner edge",
    "inner event creation steps",
    "inner height",
    "inner inline size",
    "inner invoke",
    "inner size",
    "inner text shadows",
    "inner width",
    "innerHTML",
    "innermost",
    "input",
    "input activation behavior",
    "input audioparam buffer",
    "input buffer",
    "input method editor",
    "input progress value",
    "input stream",
    "input-security",
    "inputs",
    "ins",
    "insecure requests policy",
    "insert",
    "insert a character",
    "insert a comment",
    "insert a css rule",
    "insert a foreign element",
    "insert adjacent",
    "insert an html element",
    "insert children",
    "inserted into a document",
    "insertion mode",
    "insertion point",
    "insertion steps",
    "inset",
    "inset properties",
    "inset()",
    "inset-block",
    "inset-block-end",
    "inset-block-start",
    "inset-inline",
    "inset-inline-end",
    "inset-inline-start",
    "inset-modified containing block",
    "inside",
    "inside area",
    "install",
    "installation",
    "installed",
    "installed font fallback",
    "installed web application",
    "installing",
    "instance root",
    "instant scroll",
    "instantiate a promise of a module",
    "instantiate a webassembly module",
    "instantiate counter",
    "instantiate the core of a webassembly module",
    "integer",
    "integer types",
    "integrity",
    "integrity metadata",
    "integrity-metadata",
    "intended direction",
    "intended direction and end position",
    "intended end position",
    "intended path",
    "inter-annotation white space",
    "inter-base white space",
    "inter-element whitespace",
    "inter-level white space",
    "inter-segment white space",
    "interactive",
    "interactive content",
    "interactively validate the constraints",
    "interest group note",
    "interest groups",
    "interface",
    "interface descriptor",
    "interface member",
    "interface mixin",
    "interface mixin member",
    "interface object",
    "interface prototype object",
    "interface types",
    "interlinear annotations",
    "internal algorithm for scanning and assigning header cells",
    "internal createelementns steps",
    "internal key modifier state",
    "internal module script graph fetching procedure",
    "internal pause steps",
    "internal play steps",
    "internal queues",
    "internal raw uncompiled handler",
    "internal representation",
    "internal response",
    "internal ruby box",
    "internal ruby boxes",
    "internal ruby display types",
    "internal ruby element",
    "internal slot",
    "internal table box",
    "internal table element",
    "internally create a new object implementing the interface",
    "internationalized resource identifier",
    "interpolate",
    "interpolation",
    "interpolation procedure",
    "interpreter",
    "interrupt transfers",
    "intersect the viewport",
    "intersection observer",
    "intersectionobserver",
    "intersectionobserver task source",
    "intersectionobserverinit",
    "interval end",
    "interval start",
    "intialize a composition layer",
    "intra-level white space",
    "intra-ruby white space",
    "intrinsic dimensions",
    "intrinsic height",
    "intrinsic iteration duration",
    "intrinsic minimum",
    "intrinsic percentage width of a column",
    "intrinsic percentage width of a column based on cells of span up to 1",
    "intrinsic percentage width of a column based on cells of span up to n (n > 1)",
    "intrinsic preferred",
    "intrinsic resolution",
    "intrinsic size",
    "intrinsic size constraint",
    "intrinsic size contribution",
    "intrinsic sizes valid flag",
    "intrinsic sizing",
    "intrinsic sizing function",
    "intrinsic width",
    "intrinsic-sizes-invalid",
    "intrinsic-sizes-valid",
    "invalid at computed-value time",
    "invalid color",
    "invalid condition",
    "invalid image",
    "invalid reference",
    "invalid selector",
    "invalid value",
    "invalid value default",
    "invalid-character-sequence-after-doctype-name",
    "invalid-first-character-of-tag-name",
    "invalidaccesserror",
    "invalidate layout functions",
    "invalidcharactererror",
    "invalidstateerror",
    "invariants of the essential internal methods",
    "inverse context",
    "invert",
    "invisible",
    "invited expert in a working group",
    "invited expert in an interest group",
    "invoke",
    "invoke a intrinsic sizes callback",
    "invoke a layout callback",
    "invoke a paint callback",
    "invoke a protocol handler",
    "invoke an intrinsic sizes callback",
    "invoke custom element reactions",
    "invoke the indexed property setter",
    "invoke the named property setter",
    "invoking",
    "iosversion",
    "ip address",
    "ipv4 address",
    "ipv4 number parser",
    "ipv4 parser",
    "ipv4 serializer",
    "ipv6 address",
    "ipv6 parser",
    "ipv6 piece",
    "ipv6 serializer",
    "iri",
    "iri compacting",
    "iri expanding",
    "iri mapping",
    "iri reference",
    "irk",
    "is",
    "is a platform object",
    "is a registrable domain suffix of or is equal to",
    "is an array index",
    "is an environment settings object contextually secure?",
    "is async module",
    "is base allowed for document?",
    "is closing",
    "is empty",
    "is feature enabled by policy for origin",
    "is feature enabled in document for origin?",
    "is gbk",
    "is initial about:blank",
    "is local",
    "is mime type supported by the user agent?",
    "is modal",
    "is not a registrable domain suffix of and is not equal to",
    "is not a valid filter",
    "is not an array index",
    "is not origin-clean",
    "is not special",
    "is origin-keyed",
    "is point in path steps",
    "is point in stroke steps",
    "is popup",
    "is special",
    "is url potentially trustworthy?",
    "is utf-16be decoder",
    "is value",
    "isaccessordescriptor",
    "iscallable",
    "isconstructor",
    "isdatadescriptor",
    "isdetachedbuffer",
    "isindex",
    "iso-2022-jp",
    "iso-2022-jp decoder",
    "iso-2022-jp decoder ascii",
    "iso-2022-jp decoder escape",
    "iso-2022-jp decoder escape start",
    "iso-2022-jp decoder katakana",
    "iso-2022-jp decoder lead byte",
    "iso-2022-jp decoder output state",
    "iso-2022-jp decoder roman",
    "iso-2022-jp decoder state",
    "iso-2022-jp decoder trail byte",
    "iso-2022-jp encoder",
    "iso-2022-jp encoder ascii",
    "iso-2022-jp encoder jis0208",
    "iso-2022-jp encoder roman",
    "iso-2022-jp encoder state",
    "iso-2022-jp lead",
    "iso-2022-jp output",
    "iso-8859-10",
    "iso-8859-13",
    "iso-8859-14",
    "iso-8859-15",
    "iso-8859-16",
    "iso-8859-2",
    "iso-8859-3",
    "iso-8859-4",
    "iso-8859-5",
    "iso-8859-6",
    "iso-8859-7",
    "iso-8859-8",
    "iso-8859-8-i",
    "isochronous transfers",
    "isolated sequence",
    "isolation",
    "isomorphic decode",
    "isomorphic encode",
    "isplatformobjectsameorigin ( o )",
    "ispush",
    "issharedarraybuffer",
    "it is appropriate to resolve percentage heights on direct children of a table-cell",
    "italic",
    "item",
    "item types",
    "item()",
    "iterable",
    "iterable declaration",
    "iterate",
    "iterate a cursor",
    "iteration composite operation",
    "iteration composite operation accumulate",
    "iteration composite operation replace",
    "iteration count",
    "iteration duration",
    "iteration interval",
    "iteration progress",
    "iteration start",
    "iterationcompositeoperation",
    "iterations",
    "iterator prototype object",
    "iterator result",
    "iv",
    "ivory",
    "javascript engine task source",
    "javascript execution context",
    "javascript execution context stack",
    "javascript mime type",
    "javascript mime type essence match",
    "javascript module script",
    "javascript realm",
    "javascript string",
    "jis04",
    "jis78",
    "jis83",
    "jis90",
    "job",
    "job queue",
    "jobcallback record",
    "joint session history",
    "json literal",
    "json mime type",
    "json module script",
    "json number",
    "json object",
    "json type",
    "json-field-value",
    "json-ld document",
    "json-ld frame",
    "json-ld input",
    "json-ld internal representation",
    "json-ld processor",
    "json-ld script element",
    "json-ld value",
    "json-serialize",
    "json-serialized",
    "json-serializing",
    "jsonldprocessor-compact-context",
    "jsonldprocessor-compact-input",
    "jsonldprocessor-compact-options",
    "jsonldprocessor-expand-input",
    "jsonldprocessor-expand-options",
    "jsonldprocessor-flatten-context",
    "jsonldprocessor-flatten-input",
    "jsonldprocessor-flatten-options",
    "jsonldprocessor-fromrdf-input",
    "jsonldprocessor-fromrdf-options",
    "jsonldprocessor-tordf-input",
    "jsonldprocessor-tordf-options",
    "jsonwebkey",
    "justification opportunity",
    "justify-content",
    "justify-items",
    "justify-self",
    "justify-tracks",
    "jzazbz",
    "jzczhz",
    "k-rate",
    "kbd",
    "kerning",
    "key",
    "key export steps",
    "key generator",
    "key import steps",
    "key mapping",
    "key modifier name",
    "key path",
    "key range",
    "key value",
    "keyalgorithm",
    "keydown",
    "keyframe",
    "keyframe effect",
    "keyframe offset",
    "keyframe-specific composite operation",
    "keygen",
    "keypress",
    "keysplines",
    "keytimes",
    "keyup",
    "keyword",
    "keyword alias",
    "keyword-source",
    "khaki",
    "kin",
    "kind",
    "kind strings",
    "koi8-r",
    "koi8-u",
    "lab()",
    "label",
    "labelable elements",
    "labeled control",
    "landing page",
    "landscape",
    "landscape orientation",
    "landscape-primary",
    "landscape-secondary",
    "lang",
    "language map",
    "language mapping",
    "language range",
    "language tag",
    "language-tagged string",
    "large viewport size",
    "large viewport-percentage units",
    "largeblob",
    "last activation timestamp",
    "last baseline set",
    "last baselines",
    "last call for review of proposed additions",
    "last call for review of proposed amendments",
    "last call for review of proposed corrections",
    "last call for review of proposed corrections and additions",
    "last child",
    "last cross-axis baseline set",
    "last css style sheet set name",
    "last event id string",
    "last idle period start time",
    "last line",
    "last main-axis baseline set",
    "last remembered size",
    "last render opportunity time",
    "last selected source",
    "last usable css region",
    "last usable region",
    "last-baseline alignment",
    "last-baseline content-alignment",
    "last-baseline self-alignment",
    "last-event-id",
    "last-modified",
    "latency",
    "latest entry",
    "latest reading",
    "launching a shortcut",
    "launching a web application",
    "lavender",
    "lavenderblush",
    "lawngreen",
    "layer name",
    "laying out in-place",
    "layout api children",
    "layout api container",
    "layout api context",
    "layout api formatting context",
    "layout api work task",
    "layout bounds",
    "layout box",
    "layout class instances",
    "layout containment",
    "layout containment box",
    "layout cycles",
    "layout definition",
    "layout definitions",
    "layout valid flag",
    "layout-internal",
    "layout-invalid",
    "layout-valid",
    "layoutchange",
    "lazy",
    "lazy load intersection observer",
    "lazy load resumption steps",
    "lazy load root margin",
    "lazy loading attribute",
    "lch()",
    "le bonding procedure",
    "leader()",
    "leading",
    "leading-trim",
    "left",
    "left page",
    "leftover space",
    "legacy callback interface object",
    "legacy color syntax",
    "legacy extract an encoding",
    "legacy factory function",
    "legacy name alias",
    "legacy platform object",
    "legacy platform objects",
    "legacy selector alias",
    "legacy shorthand",
    "legacy-canceled-activation behavior",
    "legacy-clone a browsing session storage shed",
    "legacy-pre-activation behavior",
    "legacy-uppercased-byte less than",
    "legacyfactoryfunction identifier",
    "legacywindowalias identifier",
    "legend",
    "lemonchiffon",
    "length",
    "less than",
    "letter",
    "letter spacing",
    "letter-spacing",
    "level",
    "levels",
    "lexical form",
    "li",
    "liaison",
    "license",
    "licensing commitment",
    "lifecycle callbacks",
    "light color scheme",
    "light source",
    "light tree",
    "lightblue",
    "lightcoral",
    "lightcyan",
    "lighter",
    "lightgoldenrodyellow",
    "lightgray",
    "lightgreen",
    "lightgrey",
    "lighting-color",
    "lightpink",
    "lightsalmon",
    "lightseagreen",
    "lightskyblue",
    "lightslategray",
    "lightslategrey",
    "lightsteelblue",
    "lightyellow",
    "lime",
    "limegreen",
    "limit maximum sampling frequency",
    "limit number of delivered readings",
    "limited max-content contribution",
    "limited min-content contribution",
    "limited to numbers greater than zero",
    "limited to only known values",
    "limited to only non-negative numbers",
    "limited to only non-negative numbers greater than zero",
    "limited to only non-negative numbers greater than zero with fallback",
    "limited-quirks mode",
    "limiting",
    "line",
    "line box",
    "line break",
    "line breaking",
    "line breaking process",
    "line gap metric",
    "line grid",
    "line join shape",
    "line name",
    "line name set",
    "line orientation",
    "line segments",
    "line-break",
    "line-clamp",
    "line-grid",
    "line-height",
    "line-height-step",
    "line-left",
    "line-over",
    "line-padding",
    "line-relative",
    "line-relative direction",
    "line-relative shift values",
    "line-relative values",
    "line-right",
    "line-snap",
    "line-under",
    "linear easing function",
    "linear gain unit to decibel",
    "linear pcm",
    "linear timing function",
    "linear-gradient()",
    "lineargradient",
    "linen",
    "lining-nums",
    "link",
    "link processing options",
    "link type \"alternate\"",
    "link type \"author\"",
    "link type \"bookmark\"",
    "link type \"canonical\"",
    "link type \"dns-prefetch\"",
    "link type \"external\"",
    "link type \"help\"",
    "link type \"icon\"",
    "link type \"license\"",
    "link type \"manifest\"",
    "link type \"modulepreload\"",
    "link type \"next\"",
    "link type \"nofollow\"",
    "link type \"noopener\"",
    "link type \"noreferrer\"",
    "link type \"opener\"",
    "link type \"pingback\"",
    "link type \"preconnect\"",
    "link type \"prefetch\"",
    "link type \"preload\"",
    "link type \"prerender\"",
    "link type \"prev\"",
    "link type \"search\"",
    "link type \"stylesheet\"",
    "link type \"tag\"",
    "linked data",
    "linked data graph",
    "linked resource fetch setup steps",
    "linkstyle",
    "list",
    "list interfaces",
    "list item",
    "list object",
    "list of active formatting elements",
    "list of active xr input sources",
    "list of animation frame callbacks",
    "list of available images",
    "list of color formats for non-projection layers",
    "list of color formats for projection layers",
    "list of complex selectors",
    "list of compound selectors",
    "list of currently running animation frame callbacks",
    "list of depth formats for non-projection layers",
    "list of depth formats for projection layers",
    "list of dragged nodes",
    "list of elements with class names classnames",
    "list of elements with namespace namespace and local name localname",
    "list of elements with qualified name qualifiedname",
    "list of full-sized viewports",
    "list of immersive xr devices",
    "list of inherent constrainable track properties",
    "list of inline sessions",
    "list of joints",
    "list of newly introduced cues",
    "list of notifications",
    "list of options",
    "list of pending fullscreen events",
    "list of pending play promises",
    "list of pending text tracks",
    "list of scripts that will execute in order as soon as possible",
    "list of scripts that will execute when the document has finished parsing",
    "list of selectors",
    "list of simple selectors",
    "list of speculative fetch urls",
    "list of supported modes",
    "list of sync registrations",
    "list of text tracks",
    "list of the descendant browsing contexts",
    "list of viewport objects",
    "list owner",
    "list properties",
    "list-item",
    "list-of-inherent-constrainable-track-properties",
    "list-style",
    "list-style-image",
    "list-style-position",
    "list-style-type",
    "list-valued properties",
    "listed elements",
    "listener",
    "listing",
    "literal",
    "live",
    "live ranges",
    "load",
    "load value",
    "loaddocumentcallback-options",
    "loaded",
    "loading",
    "loading image",
    "local boundary default action",
    "local cache",
    "local context",
    "local coordinate system",
    "local date and time",
    "local date and time state (type=datetime-local)",
    "local font-relative lengths",
    "local name",
    "local name data type",
    "local scheme",
    "local storage",
    "local storage bucket",
    "local storage holder",
    "local time",
    "local-urls-only flag",
    "locality",
    "localizable members",
    "locate a namespace",
    "locate a namespace prefix",
    "locating a namespace prefix",
    "location",
    "location url",
    "location-object navigate",
    "lock",
    "lock the orientation",
    "locked for focus",
    "locked for reset",
    "locked to a reader",
    "locked to a writer",
    "log()",
    "logical",
    "logical height",
    "logical property group",
    "logical width",
    "logo",
    "long",
    "long attribute values",
    "long long",
    "longer",
    "longhand",
    "longhand property",
    "look up a custom element definition",
    "loosely sorted by offset",
    "low boundary",
    "low-level",
    "lower-alpha",
    "lower-greek",
    "lower-latin",
    "lower-roman",
    "lowercase letter",
    "ls",
    "ltr",
    "m11 element",
    "m12 element",
    "m21 element",
    "m22 element",
    "m41 element",
    "m42 element",
    "machine-readable equivalent of the element's contents",
    "macintosh",
    "magenta",
    "mail as body",
    "mail with headers",
    "mailto:",
    "main",
    "main axis",
    "main dimension",
    "main fetch",
    "main size",
    "main size property",
    "main-axis",
    "main-axis baseline set",
    "main-desc",
    "main-end",
    "main-size",
    "main-start",
    "majorversion",
    "make disappear",
    "making a buffer available for reading",
    "manifest",
    "manifest image resource",
    "manifest's",
    "manifest-src",
    "manual slot assignment",
    "manufacturer specific data",
    "map",
    "map document language elements to table elements",
    "map entries",
    "map entry",
    "map of active timers",
    "map of animation frame callbacks",
    "map of preloaded resources",
    "map size getter",
    "map to the aspect-ratio property",
    "map to the aspect-ratio property (using dimension rules)",
    "maplike",
    "maplike declaration",
    "mapping logic",
    "maps to the dimension property",
    "maps to the dimension property (ignoring zero)",
    "maps to the pixel length property",
    "margin",
    "margin (of a box)",
    "margin area",
    "margin at-rule",
    "margin box",
    "margin context",
    "margin edge",
    "margin properties",
    "margin-block",
    "margin-block-end",
    "margin-block-start",
    "margin-bottom",
    "margin-box",
    "margin-break",
    "margin-inline",
    "margin-inline-end",
    "margin-inline-start",
    "margin-left",
    "margin-right",
    "margin-top",
    "margin-trim",
    "mark",
    "mark a promise as handled",
    "mark as handled",
    "mark as ready",
    "mark paint timing",
    "mark resource timing",
    "marker",
    "marker box",
    "marker image",
    "marker properties",
    "marker string",
    "marker-end",
    "marker-mid",
    "marker-side",
    "marker-start",
    "markers",
    "markup declaration open state",
    "maroon",
    "marquee",
    "marquee current loop index",
    "marquee loop count",
    "marquee scroll distance",
    "marquee scroll interval",
    "mask",
    "mask border image",
    "mask border image area",
    "mask image",
    "mask layer image",
    "mask painting area",
    "mask positioning area",
    "mask-border",
    "mask-border-mode",
    "mask-border-outset",
    "mask-border-repeat",
    "mask-border-slice",
    "mask-border-source",
    "mask-border-width",
    "mask-clip",
    "mask-composite",
    "mask-image",
    "mask-mode",
    "mask-origin",
    "mask-position",
    "mask-repeat",
    "mask-size",
    "mask-type",
    "masonry axis",
    "masonry box",
    "masonry-auto-flow",
    "match",
    "match a complex selector against an element",
    "match a css production",
    "match a device filter",
    "match a selector against a pseudo-element",
    "match a selector against a tree",
    "match a selector against an element",
    "match an mp3 header",
    "match cross-origin opener policy values",
    "match service worker registration",
    "matches",
    "matches a filter",
    "matches about:blank",
    "matches the environment",
    "matches the interface filter",
    "matches the signature for mp3 without id3",
    "matches the signature for mp4",
    "matches the signature for webm",
    "matching a padded sequence",
    "matching transition delay",
    "matching transition duration",
    "matching transition timing function",
    "matching transition-property value",
    "math baseline",
    "math function",
    "math functions",
    "mathml annotation-xml",
    "mathml math",
    "mathml merror",
    "mathml mi",
    "mathml mn",
    "mathml mo",
    "mathml ms",
    "mathml mtext",
    "mathml namespace",
    "mathml text integration point",
    "matrix",
    "matrix object",
    "matrix3d()",
    "matured",
    "max",
    "max cross size",
    "max cross size property",
    "max height",
    "max inner height",
    "max inner width",
    "max main size",
    "max main size property",
    "max size",
    "max size property",
    "max track sizing function",
    "max width",
    "max()",
    "max-block-size",
    "max-content",
    "max-content block size",
    "max-content block-size contribution",
    "max-content constraint",
    "max-content contribution",
    "max-content inline size",
    "max-content inline-size contribution",
    "max-content size",
    "max-content sizing-guess",
    "max-content width",
    "max-content width of a column",
    "max-content width of a column based on cells of span up to 1",
    "max-content width of a column based on cells of span up to n (n > 1)",
    "max-content width of a table",
    "max-height",
    "max-inline-size",
    "max-lines",
    "max-width",
    "max_age",
    "maximum",
    "maximum allowed code point",
    "maximum allowed value length",
    "maximum far clip plane",
    "maximum height",
    "maximum inline field of view",
    "maximum number of actions",
    "maximum size",
    "maximum value",
    "maximum width",
    "may",
    "me",
    "measurable properties",
    "media",
    "media condition",
    "media data processing steps list",
    "media description",
    "media element attributes",
    "media element event task source",
    "media element load algorithm",
    "media element stall timeout",
    "media elements",
    "media feature",
    "media fragment syntax",
    "media groups",
    "media provider object",
    "media query",
    "media query list",
    "media query modifier",
    "media resource",
    "media timeline",
    "media transport",
    "media type",
    "media()",
    "media-dependent import",
    "media-resource-specific text track",
    "media-src",
    "mediaelementaudiosourcenode",
    "mediaelementaudiosourceoptions",
    "mediasource",
    "mediastream",
    "mediastreamaudiodestinationnode",
    "mediastreamaudiosourcenode",
    "mediastreamaudiosourceoptions",
    "mediastreamtrack source type",
    "mediastreamtrack source-specific clone steps",
    "mediastreamtrack source-specific construction steps",
    "mediastreamtrackaudiosourcenode",
    "mediastreamtrackaudiosourceoptions",
    "mediumaquamarine",
    "mediumblue",
    "mediumorchid",
    "mediumpurple",
    "mediumseagreen",
    "mediumslateblue",
    "mediumspringgreen",
    "mediumturquoise",
    "mediumvioletred",
    "member",
    "member consortia",
    "member consortium",
    "member representative in a working group",
    "member representative in an interest group",
    "member submission",
    "member-only",
    "members",
    "memoranda of understanding",
    "memorandum of understanding",
    "memory object cache",
    "menu",
    "menuitem",
    "menulist-button",
    "menutext",
    "merge with the next text node",
    "merged",
    "merged annotation",
    "message",
    "message port post message steps",
    "messageevent",
    "met",
    "meta",
    "metadata",
    "metadata content",
    "meter",
    "method",
    "method cache entry match",
    "method steps",
    "mftn",
    "microdata",
    "microdata errors",
    "microphone information can be exposed",
    "microphone-information-can-be-exposed",
    "microtask",
    "microtask queue",
    "microtask task source",
    "midnightblue",
    "midpoint-on-the-path",
    "migrate an animator instance",
    "mime type",
    "mime type essence",
    "mime type record",
    "mime type sniffing algorithm",
    "mime types array",
    "min",
    "min cross size",
    "min cross size property",
    "min height",
    "min inner height",
    "min inner width",
    "min main size",
    "min main size property",
    "min size",
    "min size property",
    "min track sizing function",
    "min width",
    "min()",
    "min-block-size",
    "min-content",
    "min-content block size",
    "min-content block-size contribution",
    "min-content constraint",
    "min-content contribution",
    "min-content inline size",
    "min-content inline-size contribution",
    "min-content size",
    "min-content sizing-guess",
    "min-content width",
    "min-content width of a column",
    "min-content width of a column based on cells of span up to 1",
    "min-content width of a column based on cells of span up to n (n > 1)",
    "min-content width of a table",
    "min-content-percentage sizing-guess",
    "min-content-specified sizing-guess",
    "min-height",
    "min-inline-size",
    "min-intrinsic-sizing",
    "min-width",
    "minde",
    "minh",
    "minimum",
    "minimum allowed value length",
    "minimum block text size",
    "minimum contribution",
    "minimum height",
    "minimum inline field of view",
    "minimum near clip plane",
    "minimum readable text size",
    "minimum size",
    "minimum value",
    "minimum width",
    "minorversion",
    "mintcream",
    "minutes",
    "minw",
    "missing color component",
    "missing value default",
    "missing-attribute-value",
    "missing-doctype-name",
    "missing-doctype-public-identifier",
    "missing-doctype-system-identifier",
    "missing-end-tag-name",
    "missing-glyph",
    "missing-quote-before-doctype-public-identifier",
    "missing-quote-before-doctype-system-identifier",
    "missing-semicolon-after-character-reference",
    "missing-whitespace-after-doctype-public-keyword",
    "missing-whitespace-after-doctype-system-keyword",
    "missing-whitespace-before-doctype-name",
    "missing-whitespace-between-attributes",
    "missing-whitespace-between-doctype-public-and-system-identifiers",
    "mistyrose",
    "mix()",
    "mix-blend-mode",
    "mixed content",
    "mixed download",
    "mixing rules",
    "mobileosname",
    "moccasin",
    "mock sensor",
    "mock sensor already created",
    "mock sensor reading",
    "mock sensor reading values",
    "mock sensor type",
    "mod()",
    "mode",
    "modifier key",
    "module",
    "module map",
    "module responses map",
    "module script",
    "module type allowed",
    "module type from module request",
    "modulerequest record",
    "moduluslength",
    "monitored",
    "monitored object",
    "monolithic",
    "monospace",
    "monotonic clock",
    "monotonically increasing timeline",
    "month",
    "month state (type=month)",
    "most-negative-single-float",
    "most-positive-single-float",
    "mou",
    "mousedown",
    "mouseenter",
    "mouseevent",
    "mouseeventinit",
    "mouseleave",
    "mousemove",
    "mouseout",
    "mouseover",
    "mouseup",
    "move",
    "multi-col line",
    "multi-column container",
    "multi-column formatting context",
    "multi-column layout",
    "multi-column line",
    "multi-device credential",
    "multi-factor capable",
    "multi-line flex container",
    "multicol",
    "multicol container",
    "multicol line",
    "multiline",
    "multipart/form-data",
    "multipart/form-data boundary string",
    "multipart/form-data encoding algorithm",
    "multipart/mixed",
    "multipart/x-mixed-replace",
    "multiple declarations",
    "multiply",
    "multiply transforms",
    "muse",
    "must",
    "must not",
    "mutable",
    "mutate action url",
    "mutation observer microtask queued",
    "mutation observers",
    "mutationobserver",
    "mute",
    "mute iframe load",
    "muted",
    "muted errors",
    "muting",
    "n",
    "naively convert from cmyk to rgba",
    "naively convert from rgba to cmyk",
    "naively converted to cmyk",
    "naively converted to rgba",
    "name",
    "name discovery procedure",
    "name of the webassembly function",
    "name to cache map",
    "name-start code point",
    "named attribute",
    "named character reference state",
    "named character references",
    "named color",
    "named constructor",
    "named definition",
    "named flow",
    "named graph",
    "named grid area",
    "named page",
    "named properties",
    "named properties object",
    "named property deleter",
    "named property getter",
    "named property setter",
    "named property visibility algorithm",
    "named string",
    "namedItem()",
    "namedcurve",
    "namedflows",
    "names: the itemprop attribute",
    "namespace",
    "namespace member",
    "namespace object",
    "namespace prefix",
    "namespace uris",
    "nan-safe maximum",
    "nan-safe minimum",
    "native accessibility semantics map",
    "native appearance",
    "native entity type",
    "native hit test",
    "native hit test result",
    "native hit test results",
    "native webgl framebuffer resolution",
    "natural",
    "natural aspect ratio",
    "natural dimension",
    "natural dimensions of a cross-fade()",
    "natural end-point",
    "natural height",
    "natural resolution",
    "natural size",
    "natural width",
    "nav",
    "nav-down",
    "nav-left",
    "nav-right",
    "nav-up",
    "navajowhite",
    "navigate",
    "navigate an iframe or frame",
    "navigate to a fragment",
    "navigate-redirect fetch",
    "navigate-to",
    "navigation",
    "navigation id",
    "navigation params",
    "navigation request",
    "navigation status canceled",
    "navigation status complete",
    "navigation status id",
    "navigation status pending",
    "navigation status status",
    "navigation status url",
    "navigation-override",
    "navigationid",
    "navigationtimingtype",
    "navigationtype",
    "navigator compatibility mode",
    "navigator.credentials.get()",
    "navigator.online",
    "navy",
    "nearest ancestor autofocus scoping root element",
    "nearest scrollport",
    "need new subpath",
    "needs a browsing context group switch",
    "negotiation-needed flag",
    "negotiationneeded",
    "neighbor",
    "nel",
    "nel policies",
    "nel policy",
    "nest value",
    "nest-containing",
    "nest-prefixed",
    "nested browsing context",
    "nested conditional group rules",
    "nested grid",
    "nested region context",
    "nested style rule",
    "nested-comment",
    "nesting selector",
    "nesting style rule",
    "network error",
    "network error report",
    "network error reports",
    "network errors",
    "network partition key",
    "network protocol",
    "network request",
    "network requests",
    "networkerror",
    "networking task source",
    "neutral value for composition",
    "never support",
    "never-rendered element",
    "new",
    "new broadcastchannel(name)",
    "new connection setting",
    "new domparser()",
    "new information about the user's intent",
    "new messagechannel()",
    "new unit value",
    "newline",
    "newlines",
    "newobjectenvironment",
    "newpromisereactionjob",
    "newpromiseresolvethenablejob",
    "newtarget",
    "next input character",
    "next input code point",
    "next input token",
    "next sibling",
    "next sibling not included",
    "next token",
    "next-sibling combinator",
    "nextid",
    "nickname",
    "no cors",
    "no pending font loads",
    "no such mock sensor",
    "no-close-quote",
    "no-common-ligatures",
    "no-contextual",
    "no-cors-safelisted request-header",
    "no-cors-safelisted request-header name",
    "no-discretionary-ligatures",
    "no-historical-ligatures",
    "no-open-quote",
    "no-quirks mode",
    "no-referrer",
    "no-referrer-when-downgrade",
    "no-sniff flag",
    "no-translate",
    "no-validate state",
    "nobr",
    "node",
    "node document",
    "node is inserted into a document",
    "node is removed from a document",
    "node name to parameter descriptor map",
    "node name to processor constructor map",
    "node object",
    "node tree",
    "nodeiterator pre-removing steps",
    "nodelist",
    "nodes",
    "noembed",
    "noframes",
    "noisesuppression",
    "nominal frame rate",
    "nominal range",
    "nomodificationallowederror",
    "non-ascii code point",
    "non-ascii ident code point",
    "non-autofill credential type",
    "non-devolvable",
    "non-devolvable widget",
    "non-discoverable credential",
    "non-ideographic letters",
    "non-ideographic numerals",
    "non-interactive",
    "non-local boundary default action",
    "non-negative-number",
    "non-persistent notification",
    "non-printable code point",
    "non-rendered element",
    "non-replaced",
    "non-replaced element",
    "non-resident credential",
    "non-secure context",
    "non-subresource request",
    "non-void-html-element-start-tag-with-trailing-solidus",
    "nonce-source",
    "noncharacter",
    "noncharacter-character-reference",
    "noncharacter-in-input-stream",
    "none",
    "none!!font-kerning",
    "none!!font-size-adjust",
    "none!!font-variant",
    "none!!font-variant-ligatures",
    "normal",
    "normal elements",
    "normal!!font-feature-settings",
    "normal!!font-kerning",
    "normal!!font-stretch",
    "normal!!font-style",
    "normal!!font-variant",
    "normal!!font-variant-caps",
    "normal!!font-variant-east-asian",
    "normal!!font-variant-ligatures",
    "normal!!font-variant-numeric",
    "normal!!font-variant-position",
    "normal!!font-weight",
    "normalcompletion",
    "normalize",
    "normalize a feature name",
    "normalize an algorithm",
    "normalize into a token stream",
    "normalize newlines",
    "normalize non-finite values",
    "normalize protocol handler parameters",
    "normalize specified timing",
    "normalize the source densities",
    "normalized timeranges object",
    "normalized value",
    "normalized value of a usages list",
    "normalized windows drive letter",
    "normative",
    "noscript",
    "not additive",
    "not animatable",
    "not handled",
    "not hidden state",
    "not loaded",
    "not origin-clean",
    "not overlapping",
    "not required",
    "notallowederror",
    "note",
    "notfound",
    "notfounderror",
    "nothing",
    "notification",
    "notify about playing",
    "notify about rejected promises",
    "notify activated state",
    "notify controller change",
    "notify error",
    "notify intersection observers",
    "notify mutation observers",
    "notify new reading",
    "notsupportederror",
    "now hidden algorithm",
    "now visible algorithm",
    "nth()",
    "null",
    "null body status",
    "null-character-reference",
    "nullable type",
    "number",
    "number of columns",
    "number of days in month month of year year",
    "number of document-tree child browsing contexts",
    "number of nullable member types",
    "number of rows",
    "numeric",
    "numeric character reference end state",
    "numeric character reference state",
    "numeric data types",
    "numeric type value",
    "numeric types",
    "nyquist frequency",
    "object",
    "object bounding box",
    "object size negotiation",
    "object store",
    "object store handle",
    "object types",
    "object url",
    "object-fit",
    "object-position",
    "object-src",
    "object-view-box",
    "objects",
    "oblique",
    "observable array exotic object",
    "observable array type",
    "observable policy",
    "observation procedure",
    "observe a target element",
    "observed attributes",
    "observer",
    "obsolete recommendation",
    "obsolete registry",
    "obtain a browsing context to use for a navigation response",
    "obtain a connection",
    "obtain a cross-origin opener policy",
    "obtain a dedicated/shared worker agent",
    "obtain a local storage bottle map",
    "obtain a local storage shelf",
    "obtain a physical form",
    "obtain a service worker agent",
    "obtain a session storage bottle map",
    "obtain a similar-origin window agent",
    "obtain a site",
    "obtain a storage bottle map",
    "obtain a storage key",
    "obtain a storage key for non-storage purposes",
    "obtain a storage shelf",
    "obtain a websocket connection",
    "obtain a worker/worklet agent",
    "obtain a worklet agent",
    "obtain an embedder policy",
    "obtain hit test results",
    "obtain hit test results for transient input",
    "obtain the current device",
    "obtain their numeric values",
    "obviously discoverable",
    "occupied",
    "octet",
    "octet string",
    "octet string containing",
    "octet string containing a bit string",
    "off",
    "official playback position",
    "offlineaudiocompletionevent",
    "offlineaudiocompletioneventinit",
    "offlineaudiocontext",
    "offlineaudiocontextoptions",
    "offscreen 2d context creation algorithm",
    "offset",
    "offset distance",
    "offset path",
    "offset-anchor",
    "offset-distance",
    "offset-path",
    "offset-position",
    "offset-rotate",
    "offsetk",
    "offsets-adjusted min-width, width, and max-width",
    "ok status",
    "oklab()",
    "oklch()",
    "ol",
    "oldest message",
    "oldlace",
    "oldstyle-nums",
    "olive",
    "olivedrab",
    "omitted",
    "on",
    "on document ready",
    "on response available",
    "one permitted sandboxed navigator",
    "online",
    "only if border is not equivalent to zero",
    "onshow",
    "opacity",
    "opaque",
    "opaque black",
    "opaque environment blending",
    "opaque filtered response",
    "opaque framebuffer",
    "opaque host",
    "opaque origin",
    "opaque path",
    "opaque texture",
    "opaque-host parser",
    "opaque-host-and-port string",
    "opaque-redirect filtered response",
    "open",
    "open a database",
    "open subpath",
    "open-quote",
    "opener browsing context",
    "opener origin at creation",
    "operating coordinate space",
    "operation",
    "operationerror",
    "operations chain",
    "optgroup",
    "optimal sampling frequency",
    "optimal viewing region",
    "optimally useful formatting",
    "optimum point",
    "option",
    "option-expression",
    "optional",
    "optional argument",
    "optional basic constraints",
    "optional features",
    "optional-ascii-whitespace",
    "optionality list",
    "optionality values",
    "optionally truncate a simple dialog string",
    "orange",
    "orangered",
    "orchid",
    "order",
    "order-modified document order",
    "ordered map",
    "ordered set",
    "ordered set of unique space-separated tokens",
    "ordered set parser",
    "ordered set serializer",
    "ordinal",
    "ordinal value",
    "ordinary",
    "ordinarydefineownproperty",
    "ordinarydelete",
    "ordinaryfunctioncreate",
    "ordinaryget",
    "ordinarygetownproperty",
    "ordinarygetprototypeof",
    "ordinaryisextensible",
    "ordinaryobjectcreate",
    "ordinaryownpropertykeys",
    "ordinarypreventextensions",
    "ordinaryset",
    "ordinarysetprototypeof",
    "org",
    "organization-name",
    "organization-unit",
    "orientation values",
    "orientationchange",
    "origin",
    "origin color",
    "origin private file system",
    "origin time",
    "origin-agent-cluster",
    "origin-bound one-time code",
    "origin-bound one-time code message",
    "origin-clean",
    "origin-clean flag",
    "origin-only flag",
    "origin-when-cross-origin",
    "original base url",
    "original insertion mode",
    "original source",
    "originate",
    "originating element",
    "originating line",
    "originating line box",
    "originating pseudo-element",
    "origins",
    "orphans",
    "orthogonal",
    "orthogonal flow",
    "oscillatornode",
    "oscillatoroptions",
    "oscpu",
    "other applicable specifications",
    "other space separators",
    "out of flow",
    "out of gamut",
    "out transfers",
    "out-of-flow",
    "outer block size",
    "outer box-shadow",
    "outer display type",
    "outer edge",
    "outer height",
    "outer inline size",
    "outer max width",
    "outer max-content",
    "outer min width",
    "outer min-content",
    "outer size",
    "outer text shadows",
    "outer width",
    "outerHTML",
    "outermost svg element",
    "outline",
    "outline-color",
    "outline-offset",
    "outline-style",
    "outline-width",
    "output",
    "output bitmap",
    "output of the cascade",
    "output progress value",
    "outputs",
    "outset",
    "outside",
    "outside-inside",
    "outstanding rejected promises weak set",
    "over",
    "overall progress",
    "overflow",
    "overflow alignment",
    "overflow clip edge",
    "overflow columns",
    "overflow directions",
    "overflow-anchor",
    "overflow-block",
    "overflow-clip-margin",
    "overflow-inline",
    "overflow-wrap",
    "overflow-x",
    "overflow-y",
    "overlay element",
    "overlay scrollbars",
    "overload resolution algorithm",
    "overloaded",
    "overridden constructor steps",
    "override mime type",
    "override the color scheme",
    "overscroll behavior",
    "overscroll-behavior",
    "overscroll-behavior-block",
    "overscroll-behavior-inline",
    "overscroll-behavior-x",
    "overscroll-behavior-y",
    "own autocapitalization hint",
    "own exposure set",
    "owner css rule",
    "owner node",
    "owning element",
    "p",
    "padding",
    "padding (of a box)",
    "padding area",
    "padding box",
    "padding edge",
    "padding properties",
    "padding-block",
    "padding-block-end",
    "padding-block-start",
    "padding-bottom",
    "padding-box",
    "padding-inline",
    "padding-inline-end",
    "padding-inline-start",
    "padding-left",
    "padding-right",
    "padding-top",
    "pag",
    "pag proposal",
    "page",
    "page area",
    "page border",
    "page box",
    "page break",
    "page context",
    "page float",
    "page footer",
    "page group",
    "page header",
    "page load processing model for content that uses plugins",
    "page load processing model for inline content that doesn't have a dom",
    "page load processing model for media",
    "page load processing model for multipart/x-mixed-replace resources",
    "page load processing model for text files",
    "page load processing model for xml files",
    "page margin",
    "page orientation",
    "page padding",
    "page progression",
    "page property",
    "page pseudo-class",
    "page selector",
    "page selectors",
    "page sheet",
    "page showing",
    "page type selector",
    "page visibility change steps",
    "page zoom",
    "page's supported color schemes",
    "page's supported color-schemes",
    "page-based template",
    "page-break-after",
    "page-break-before",
    "page-break-inside",
    "page-context",
    "page-margin boxes",
    "page-margin property",
    "paged media",
    "pager",
    "pagination",
    "paint",
    "paint class instances",
    "paint containment",
    "paint containment box",
    "paint definition",
    "paint definitions",
    "paint server element",
    "paint source",
    "paint()",
    "paint-order",
    "pair asynchronously iterable declaration",
    "pair iterator",
    "pairing",
    "palegoldenrod",
    "palegreen",
    "paleturquoise",
    "palevioletred",
    "palpable content",
    "pannernode",
    "panneroptions",
    "papayawhip",
    "paragraph",
    "parallel queue",
    "param",
    "parameterdescriptors",
    "parameters",
    "parent",
    "parent browsing context",
    "parent css style sheet",
    "parent element",
    "parent grid",
    "parent group",
    "parent layout",
    "parse a boolean feature",
    "parse a calculation",
    "parse a comma-separated list of component values",
    "parse a component value",
    "parse a css <color> value",
    "parse a css declaration block",
    "parse a css rule",
    "parse a css stylesheet",
    "parse a css value",
    "parse a cssstylevalue",
    "parse a date component",
    "parse a date or time string",
    "parse a date string",
    "parse a declaration",
    "parse a duration string",
    "parse a global date and time string",
    "parse a group of selectors",
    "parse a json string to a javascript value",
    "parse a json string to an infra value",
    "parse a jwk",
    "parse a list of component values",
    "parse a list of css page selectors",
    "parse a list of declarations",
    "parse a list of rules",
    "parse a local date and time string",
    "parse a media query",
    "parse a media query list",
    "parse a mime type",
    "parse a mime type from bytes",
    "parse a month component",
    "parse a month string",
    "parse a privatekeyinfo",
    "parse a referrer policy from a `referrer-policy` header",
    "parse a relative selector",
    "parse a response's Content Security Policies",
    "parse a response's content security policies",
    "parse a root margin",
    "parse a rule",
    "parse a sandboxing directive",
    "parse a selector",
    "parse a serialized CSP",
    "parse a serialized CSP list",
    "parse a serialized content security policy",
    "parse a sizes attribute",
    "parse a srcset attribute",
    "parse a string into an abstract matrix",
    "parse a style block's contents",
    "parse a stylesheet",
    "parse a subjectpublickeyinfo",
    "parse a time component",
    "parse a time string",
    "parse a time-zone offset component",
    "parse a time-zone offset string",
    "parse a url",
    "parse a vint",
    "parse a week string",
    "parse a yearless date component",
    "parse a yearless date string",
    "parse an asn.1 structure",
    "parse an mp3 frame",
    "parse an origin-bound one-time code message",
    "parse as a forgiving selector list",
    "parse error",
    "parse errors",
    "parse integrity metadata",
    "parse json bytes to a javascript value",
    "parse json bytes to an infra value",
    "parse json from bytes",
    "parse json into infra values",
    "parse policy directive",
    "parse response's content security policies",
    "parsed according to a particular css grammar",
    "parsed as a forgiving selector list",
    "parsejsonmodule",
    "parsemodule",
    "parser cannot change the mode flag",
    "parser document",
    "parser inserted flag",
    "parser metadata",
    "parser pause flag",
    "parsescript",
    "parsing a `link` field value",
    "parsing a calculation",
    "parsing a json string to a javascript value",
    "parsing a json string to an infra value",
    "parsing as a forgiving selector list",
    "parsing json bytes to a javascript value",
    "parsing json bytes to an infra value",
    "parsing the blocklist",
    "parsing the gatt assigned numbers",
    "partial dictionary",
    "partial interface",
    "partial interface mixin",
    "partial namespace",
    "partially available",
    "partially visible",
    "participant",
    "participants in a working group",
    "participants in an interest group",
    "participate in a working group as an invited expert",
    "pass through filter",
    "pass-through",
    "passive scanning",
    "password",
    "password state (type=password)",
    "past names map",
    "patent advisory group",
    "patent review draft",
    "patent review drafts",
    "path",
    "path components",
    "path percent-encode set",
    "path segment",
    "path start state",
    "path-absolute-non-windows-file-url string",
    "path-absolute-url string",
    "path-part",
    "path-part match",
    "path-relative-scheme-less-url string",
    "path-relative-url string",
    "pattern",
    "pattern mask",
    "pattern matching algorithm",
    "patterncontentunits",
    "patterntransform",
    "patternunits",
    "pause",
    "pause an animation",
    "pause-after",
    "pause-before",
    "paused for in-band content",
    "paused for user interaction",
    "paused play state",
    "payment",
    "payment handler",
    "payment method",
    "payment method identifier",
    "payment method provider",
    "payment-permission",
    "paymentmethodchange",
    "paymentrequest",
    "paymentrequest updated algorithm",
    "pbkdf2params",
    "pc",
    "pcenchar",
    "pdf viewer mime type objects",
    "pdf viewer mime types",
    "pdf viewer plugin names",
    "pdf viewer plugin objects",
    "pdf viewer supported",
    "peachpuff",
    "peak brightness",
    "pending",
    "pending abort request",
    "pending animation event queue",
    "pending immersive session",
    "pending initial intersectionobserver targets",
    "pending parsing-blocking script",
    "pending pause task",
    "pending play task",
    "pending playback rate",
    "pending pointer capture target override",
    "pending processor construction data",
    "pending render state",
    "pending request",
    "pending scroll event targets",
    "pending table character tokens",
    "pending text track change notification flag",
    "pending-substitution value",
    "percent-column",
    "percent-decode",
    "percent-encoded byte",
    "percentage",
    "percentage contribution",
    "perform a microtask checkpoint",
    "perform a scroll",
    "perform a security check",
    "perform automatic text track selection",
    "performance",
    "performanceresourcetiming",
    "performing a microtask checkpoint",
    "periodicwave",
    "periodicwaveconstraints",
    "periodicwaveoptions",
    "peripheral",
    "permissible worker",
    "permission",
    "permission request algorithm",
    "permission state",
    "permissions policy",
    "permissions policy violation reports",
    "permissions-policy",
    "persisted replace state",
    "persisted user state",
    "persistent connections",
    "persistent css style sheet",
    "persistent notification",
    "perspective",
    "perspective matrix",
    "perspective()",
    "perspective-origin",
    "peru",
    "petite-caps",
    "phase",
    "phases",
    "photo",
    "phrasing content",
    "physical",
    "physical bottom",
    "physical dimensions",
    "physical direction",
    "physical hand input source",
    "physical left",
    "physical right",
    "physical top",
    "physical unit",
    "physical units",
    "pick an encoding for a form",
    "picked",
    "picture",
    "pinch zoom",
    "ping-from",
    "ping-to",
    "pink",
    "pipe chain",
    "piping",
    "pitch",
    "pitch-range",
    "pixel",
    "pixel density descriptor",
    "pixel density descriptor value",
    "pixel manipulation",
    "pixel unit",
    "pixel-column",
    "place-content",
    "place-items",
    "place-self",
    "placeholder",
    "placeholder axis",
    "placeholder button",
    "placeholder canvas element",
    "placeholder label option",
    "plaintext",
    "plaintext state",
    "plan to navigate",
    "planned navigation",
    "platform",
    "platform attachment",
    "platform authenticators",
    "platform credential",
    "platform descriptor",
    "platform object",
    "platform sensor",
    "play an animation",
    "play state",
    "play-during",
    "playback direction",
    "playback rate",
    "playback volume",
    "playhead position",
    "playing",
    "pls",
    "plugin",
    "plugin document",
    "plugins array",
    "plum",
    "plus-darker",
    "plus-lighter",
    "pmi",
    "point",
    "pointer",
    "pointer capture",
    "pointer capture target override",
    "pointer event types",
    "pointer-events",
    "pointercancel",
    "pointerdown",
    "pointerevent",
    "pointertype",
    "pointerup",
    "policy cache",
    "policy container",
    "policy directive",
    "policy directives",
    "policy origin",
    "policy-controlled feature",
    "policy-token",
    "polite peer",
    "poly",
    "polygon",
    "polygon()",
    "polyline",
    "pop",
    "pop a ruby level",
    "populate the bluetooth cache",
    "populate the list of pending text tracks",
    "populate the pose",
    "popup sandboxing flag set",
    "port",
    "port 1",
    "port 2",
    "port message queue",
    "port state",
    "port-part",
    "port-part matches",
    "portrait",
    "portrait orientation",
    "portrait-primary",
    "portrait-secondary",
    "poses may be reported",
    "poses must be limited",
    "position",
    "position box",
    "position variable",
    "positional alignment",
    "positioned",
    "positioned box",
    "positioned element/box",
    "positioning rectangle",
    "positioning scheme",
    "positioning schemes:",
    "possible blocking tokens",
    "possibly appropriate alternatives",
    "possibly pending font loads",
    "possibly update the key generator",
    "post",
    "post-alignment shift",
    "post-multiplied",
    "post-multiply",
    "post-office-box",
    "postal-code",
    "posted message task source",
    "poster frame",
    "potential destination",
    "potential event target",
    "potentialcustomelementname",
    "potentially active",
    "potentially delays the load event",
    "potentially playing",
    "potentially render-blocking",
    "potentially scrollable",
    "potentially trustworthy origin",
    "potentially trustworthy origins",
    "potentially trustworthy url",
    "pow()",
    "powderblue",
    "powerful feature",
    "powerless color component",
    "pr",
    "pragma-set default language",
    "pre",
    "pre-insert",
    "pre-multiplied",
    "pre-multiplied data type name",
    "pre-multiply",
    "pre-remove",
    "preceding element",
    "preconnect",
    "predicate",
    "predicted events",
    "predicted events list",
    "preferred aspect ratio",
    "preferred color scheme",
    "preferred css style sheet set name",
    "preferred density-corrected dimensions",
    "preferred height",
    "preferred line height",
    "preferred order",
    "preferred resolution",
    "preferred size",
    "preferred size property",
    "preferred width",
    "prefetch-src",
    "prefh",
    "prefix",
    "prefix flag",
    "prefixed",
    "prefw",
    "preload",
    "preload entry",
    "preload key",
    "preloadable hsts host",
    "premultiplied alpha",
    "premultiplied color values",
    "preparation-time document",
    "prepare an event",
    "prepare an image for presentation",
    "prepare the script element",
    "prepare to run a callback",
    "prepare to run script",
    "prescan a byte stream to determine its encoding",
    "presentation",
    "presentation attribute",
    "presentation attributes",
    "presentation-level",
    "presentational hints",
    "preserveaspectratio",
    "preserved white space",
    "preventDefault()",
    "previous block",
    "previous context",
    "previous current time",
    "previous sibling",
    "previously focused element",
    "primary action",
    "primary affiliation",
    "primary filter primitive tree",
    "primary input source",
    "primary interface",
    "primary orientation",
    "primary pointer",
    "primary service discovery",
    "primary squeeze action",
    "primary squeeze button",
    "primary trigger",
    "primary view",
    "primitive appearance",
    "primitive types",
    "principal block-level box",
    "principal box",
    "principal writing mode",
    "print when loaded",
    "print-color-adjust",
    "printable area",
    "printing steps",
    "priority",
    "priority candidates",
    "privacy feature",
    "private address",
    "privatekey",
    "privileged no-cors request-header name",
    "procedure timeouts",
    "process a color member",
    "process a keyframe-like object",
    "process a keyframes argument",
    "process a link header",
    "process a navigate fetch",
    "process a navigate response",
    "process a navigate url scheme",
    "process a queue",
    "process a shortcut",
    "process a text member",
    "process a timing argument",
    "process an image resource from json",
    "process an imageresource from an api",
    "process an item",
    "process blob parts",
    "process dt or dd",
    "process early hint headers",
    "process image resources",
    "process link headers",
    "process pending pointer capture",
    "process permissions policy attributes",
    "process remote tracks",
    "process response",
    "process response end of body",
    "process response policy",
    "process the addition of a remote track",
    "process the dir member",
    "process the display member",
    "process the frame attributes",
    "process the id member",
    "process the iframe attributes",
    "process the lang member",
    "process the linked resource",
    "process the manifest",
    "process the orientation member",
    "process the related_applications member",
    "process the removal of a remote track",
    "process the scope member",
    "process the shortcuts member",
    "process the start_url member",
    "process the url member of an application",
    "process()",
    "processearlyhintsresponse",
    "processing",
    "processing a manifest",
    "processing a queue",
    "processing an input buffer",
    "processing an item",
    "processing blob parts",
    "processing equivalence",
    "processing mode",
    "processing model",
    "processing modes",
    "processing the backup element queue",
    "processing-input-buffer",
    "processinginstruction",
    "processor construction data",
    "processors",
    "processresponseconsumebody",
    "processresponseendofbody",
    "produce a generator result",
    "producer",
    "product id",
    "product of two unit maps",
    "profile fundamentals",
    "progress",
    "progress-based timeline",
    "progressevent",
    "proleptic gregorian calendar",
    "proleptic-gregorian date",
    "prolog",
    "promise type",
    "prompt the user to choose",
    "prompt to unload",
    "prompting the user to choose",
    "propagate",
    "propagation",
    "propagation path",
    "proper table child",
    "proper table row parent",
    "proper table-row parent",
    "properties",
    "properties that disable native appearance for widgets",
    "property",
    "property descriptor",
    "property names",
    "property that disables native appearance for widgets",
    "property value",
    "property-scoped context",
    "proportional-nums",
    "proportional-width",
    "proposed additions",
    "proposed amendments",
    "proposed corrections",
    "proposed recommendation",
    "proprietary extension",
    "protected",
    "protected mode",
    "protected worker",
    "proxy",
    "proxy-authentication entry",
    "pseudo-class",
    "pseudo-classes",
    "pseudo-element",
    "pseudo-elements",
    "pt",
    "public",
    "public bluetooth address",
    "public device address",
    "public id",
    "public key credential",
    "public key credential source",
    "public participants",
    "public suffix",
    "publicexponent",
    "publickey",
    "publickey-credentials-get-feature",
    "publish",
    "pull source",
    "pull-into descriptor",
    "purple",
    "push",
    "push a ruby annotation",
    "push a ruby level",
    "push onto the list of active formatting elements",
    "push source",
    "px",
    "q",
    "quadrilateral",
    "qualified name",
    "quality",
    "quantization",
    "query",
    "query cache",
    "query container",
    "query container name",
    "query percent-encode set",
    "query state",
    "query the \"bluetooth\" permission",
    "query the bluetooth cache",
    "queue",
    "queue a control message",
    "queue a cross-origin embedder policy corp violation report",
    "queue a cross-origin embedder policy inheritance violation",
    "queue a fetch task",
    "queue a global task",
    "queue a media element task",
    "queue a microtask",
    "queue a mutation observer microtask",
    "queue a mutation record",
    "queue a report",
    "queue a task",
    "queue a tree mutation record",
    "queue a violation report for access from an opened window",
    "queue a violation report for access from another window",
    "queue a violation report for access from the opener",
    "queue a violation report for access to an opened window",
    "queue a violation report for access to another window",
    "queue a violation report for access to the opener",
    "queue a violation report for browsing context group switch when navigating away from a coop response",
    "queue a violation report for browsing context group switch when navigating to a coop response",
    "queue an element task",
    "queue an intersection observer task",
    "queue an intersectionobserverentry",
    "queue the navigation timing entry",
    "queue violation reports for accesses",
    "queuing strategy",
    "quirks mode",
    "quotaexceedederror",
    "quotes",
    "qwerty",
    "r",
    "radial-gradient()",
    "radialgradient",
    "radio button group",
    "radio button state (type=radio)",
    "raised initial",
    "range",
    "range context",
    "range state (type=range)",
    "rangeerror",
    "rate limiting",
    "ratio",
    "ratio-dependent axis",
    "ratio-determining axis",
    "raw text elements",
    "raw value",
    "rawtext end tag name state",
    "rawtext end tag open state",
    "rawtext less-than sign state",
    "rawtext state",
    "rb",
    "rcdata end tag name state",
    "rcdata end tag open state",
    "rcdata less-than sign state",
    "rcdata state",
    "rdate",
    "rdf collection",
    "rdf dataset",
    "rdf graph",
    "rdf literal",
    "rdf serializer/deserializer",
    "rdf serializers/deserializers",
    "rdfdataset-add-graph",
    "rdfdataset-add-graphname",
    "rdfgraph-add-triple",
    "re-snap",
    "re-used graphics",
    "react to the user revoking permission",
    "read bd_addr command",
    "read characteristic descriptors",
    "read errors",
    "read long characteristic descriptors",
    "read method",
    "read only",
    "read only arraybuffer",
    "read operation",
    "read request",
    "read the imports",
    "read the resource header",
    "read-into request",
    "read-loop",
    "read-only mode",
    "read/write mode",
    "readable byte stream",
    "readable byte stream queue entry",
    "readable side",
    "readable stream",
    "readable stream reader",
    "reader",
    "reading change threshold",
    "reading timestamp",
    "reading value",
    "ready",
    "ready for post-load tasks",
    "ready to be parser-executed",
    "real-world environment",
    "rec",
    "rec track",
    "rec2100-hlg",
    "rec2100-pq",
    "receive an rtcdatachannel message",
    "received bytes",
    "received ip address",
    "received signal strength",
    "receiver report",
    "receives a set-cookie-string",
    "recognized algorithm name",
    "recognized key format values",
    "recognized key type values",
    "recognized key usage values",
    "recommendation",
    "recommendation track",
    "recommendation-track",
    "recommended",
    "recommended webgl framebuffer resolution",
    "recommended webgl texture resolution",
    "reconnection time",
    "reconstruct the active formatting elements",
    "reconsume",
    "reconsume the current input code point",
    "reconsume the current input token",
    "record",
    "record connection timing info",
    "record type",
    "recording the input",
    "rect",
    "rectangle",
    "rectangular orthogonal color",
    "rectify a csscolorangle",
    "rectify a csscolornumber",
    "rectify a csscolorpercent",
    "rectify a csscolorrgbcomp",
    "rectify a keywordish value",
    "rectify a numberish value",
    "rectifying a numberish value",
    "red",
    "redirect count",
    "redirect mode",
    "redirect status",
    "redirects",
    "reduce accuracy",
    "reestablish the connection",
    "reference box",
    "reference pixel",
    "reference space is supported",
    "referenced",
    "referenced document subtree",
    "referenced element",
    "referer",
    "referrer",
    "referrer policy",
    "referrer policy attribute",
    "referrer-policy",
    "referrerurl",
    "reflect",
    "refresh",
    "regexp",
    "regexpbuiltinexec",
    "regexpcreate",
    "region",
    "region break",
    "region chain",
    "region flow content box",
    "region-based styling",
    "region-fragment",
    "region.",
    "register",
    "register a custom property",
    "register a protocol handler",
    "register a system key press handler",
    "registered",
    "registered class constructors map",
    "registered custom property",
    "registered observer",
    "registered observer list",
    "registered storage endpoints",
    "registrable domain",
    "registration",
    "registration ceremony",
    "registration extension",
    "registration map",
    "registration state",
    "registry",
    "registry change",
    "registry data",
    "registry data report",
    "registry definition",
    "registry entry",
    "registry report",
    "registry section",
    "registry table",
    "registry track",
    "regular attribute",
    "regular operation",
    "reified as a cssstylevalue",
    "reify a <transform-function>",
    "reify a <transform-list>",
    "reify a color value",
    "reify a list of component values",
    "reify a math expression",
    "reify a numeric value",
    "reify a registered custom property value",
    "reify a var() reference",
    "reify an identifier",
    "reify as a cssstylevalue",
    "reinitialize url",
    "reject",
    "reject job promise",
    "reject pending play promises",
    "rejected",
    "rejecting",
    "rejection",
    "rel",
    "related",
    "related application",
    "related member",
    "relationship discovery",
    "relationship strings",
    "relative",
    "relative color",
    "relative high resolution coarse time",
    "relative high resolution time",
    "relative iri reference",
    "relative length",
    "relative length unit",
    "relative position",
    "relative positioning",
    "relative selector",
    "relative selector anchor elements",
    "relative units",
    "relative url",
    "relative-colorimetric",
    "relative-url string",
    "relative-url-with-fragment string",
    "relatively position",
    "relatively positioned box",
    "relatively-positioned",
    "release a lock",
    "release a read lock",
    "release a write lock",
    "release early candidates",
    "release pointer capture",
    "release system resources",
    "releasing pointer capture",
    "relevant",
    "relevant agent",
    "relevant animation",
    "relevant child nodes",
    "relevant document",
    "relevant global object",
    "relevant mutations",
    "relevant name to cache map",
    "relevant owner to add",
    "relevant realm",
    "relevant request response list",
    "relevant settings object",
    "relevant to the user",
    "relevant types",
    "relevant value",
    "reload",
    "reload-navigation flag",
    "relying party",
    "relying party identifier",
    "rem()",
    "remaining",
    "remaining fragmentainer extent",
    "remaining free space",
    "remote event task source",
    "remote source",
    "remove",
    "remove a css rule",
    "remove a css style sheet",
    "remove a track",
    "remove all credentials",
    "remove all event listeners",
    "remove an animation effect",
    "remove an animator instance",
    "remove an attribute",
    "remove an attribute by name",
    "remove an attribute by namespace and local name",
    "remove an event listener",
    "remove credential",
    "remove device from storage",
    "remove event",
    "remove replaced animations",
    "remove the track",
    "remove virtual authenticator",
    "removed from a document",
    "removed replace state",
    "removetrack",
    "removing an entry",
    "removing steps",
    "render",
    "render quantum",
    "render quantum size",
    "render with a fallback font face",
    "render with an invisible fallback font face",
    "render-blocked",
    "render-blocking",
    "render-blocking element set",
    "render-blocking mechanism",
    "renderable element",
    "rendered content",
    "rendered element",
    "rendered legend",
    "rendered text collection steps",
    "rendered text fragment",
    "renderer",
    "rendering opportunity",
    "rendering thread",
    "rendering tree",
    "reorder",
    "repeat()",
    "repeatable list",
    "repeatcount",
    "repeatdur",
    "repeated duration",
    "repeating-conic-gradient()",
    "repeating-linear-gradient()",
    "repeating-radial-gradient()",
    "replace",
    "replace all",
    "replace an attribute",
    "replace data",
    "replace state",
    "replaceable animation",
    "replaced",
    "replaced element",
    "replacement",
    "replacement decoder",
    "replacement error returned",
    "replaces client id",
    "report",
    "report a warning to the console",
    "report an error",
    "report an exception",
    "report body",
    "report content security policy violations for request",
    "report latest reading updated",
    "report long tasks",
    "report the exception",
    "report timing",
    "report type",
    "report validity steps",
    "report-only reporting endpoint",
    "report-only value",
    "report-to",
    "report-uri",
    "report-uri directive",
    "report_to",
    "reporting endpoint",
    "reporting frequency",
    "reporting group",
    "reporting observer",
    "reporting-endpoints",
    "reports",
    "represent",
    "representation",
    "representation data",
    "represented",
    "represented by the collection",
    "request",
    "request bluetooth devices",
    "request body",
    "request error steps",
    "request hit test",
    "request matches cached item",
    "request method",
    "request permission to use",
    "request response list",
    "request sensor access",
    "request the \"usb\" permission",
    "request the xr permission",
    "request url",
    "request-body-header name",
    "requestFullscreen()",
    "requestcredentials",
    "requestdestination",
    "requested features",
    "requested sampling frequency",
    "requestidlecallback()",
    "requesting permission to use",
    "requests",
    "required",
    "required constraints",
    "required features",
    "required-ascii-whitespace",
    "requiredExtensions",
    "requires storing the policy container in history",
    "reregisteredwhilefiring",
    "rescinded candidate recommendation",
    "rescinded recommendation",
    "reserialized",
    "reserved client",
    "reserved environment",
    "reserved identifiers",
    "reset",
    "reset algorithm",
    "reset an animation's pending tasks",
    "reset button",
    "reset button state (type=reset)",
    "reset the form owner",
    "reset the insertion mode appropriately",
    "reset the memory buffer",
    "reset the rendering context to its default state",
    "reset-only sub-property",
    "resettable elements",
    "resident",
    "resident credential",
    "resident key",
    "resize",
    "resizemode",
    "resolution",
    "resolvable private address resolution procedure",
    "resolve",
    "resolve a container-based offset",
    "resolve a module specifier",
    "resolve a scroll timeline offset",
    "resolve an element-based offset",
    "resolve an origin",
    "resolve get client promise",
    "resolve job promise",
    "resolve pending play promises",
    "resolve percentage heights in table-cell content:",
    "resolve the requested features",
    "resolved",
    "resolved descendant node",
    "resolved type",
    "resolved value",
    "resolved value special case property",
    "resolved value special case property like color",
    "resolved value special case property like height",
    "resolved value special case property like top",
    "resolved-table-width",
    "resolver",
    "resolves",
    "resolveuuidname",
    "resource",
    "resource fetch algorithm",
    "resource header",
    "resource metadata management",
    "resource representation",
    "resource selection algorithm",
    "resources",
    "response",
    "response body info",
    "response header",
    "response headers",
    "response object",
    "response type",
    "responses",
    "rest",
    "rest-after",
    "rest-before",
    "restart",
    "restart the animation",
    "restorable scrollable regions",
    "restore persisted state",
    "restrictions for contents of script elements",
    "result",
    "resulting url record",
    "resulting url string",
    "retarget",
    "retargeting",
    "retargeting algorithm",
    "retrieve a key from an object store",
    "retrieve a referenced value from an index",
    "retrieve a value from an index",
    "retrieve a value from an object store",
    "retrieve multiple keys from an object store",
    "retrieve multiple referenced values from an index",
    "retrieve multiple values from an index",
    "retrieve multiple values from an object store",
    "retrieving an extern value",
    "return state",
    "return type",
    "rev",
    "reverse an animation",
    "reverse property",
    "revoke bluetooth access",
    "revoke sensor permission",
    "rfcb",
    "rgb()",
    "rgba()",
    "richness",
    "ridge",
    "right",
    "right page",
    "roaming authenticators",
    "roaming credential",
    "role",
    "root",
    "root element",
    "root font-relative lengths",
    "root inline box",
    "rosybrown",
    "rotate",
    "rotate3d()",
    "rotatex()",
    "rotatey()",
    "rotatez()",
    "rotation",
    "rough interoperability",
    "round()",
    "rounding",
    "row",
    "row group",
    "row group box",
    "row group header",
    "row groups",
    "row header",
    "row-gap",
    "row/column-grid width maximum (gridmax)",
    "row/column-grid width minimum (gridmin)",
    "rowmin",
    "rows",
    "royalblue",
    "rp",
    "rp id",
    "rpidhash",
    "rr",
    "rrule",
    "rsa-oaep key export steps",
    "rsa-oaep key import steps",
    "rsa-pss key export steps",
    "rsa-pss key import steps",
    "rsahashedimportparams",
    "rsahashedkeyalgorithm",
    "rsahashedkeygenparams",
    "rsakeyalgorithm",
    "rsakeygenparams",
    "rsaoaepparams",
    "rsaotherprimesinfo",
    "rsapssparams",
    "rsassa-pkcs1-v1_5 key export steps",
    "rsassa-pkcs1-v1_5 key import steps",
    "rssi",
    "rt",
    "rtc",
    "rtcdatachannel message has been received",
    "rtcdtlstransport error",
    "rtcdtlstransport state change",
    "rtcicetransport state change",
    "rtcp extended report",
    "rtcp receiver report",
    "rtcp rr",
    "rtcp sender report",
    "rtcp sr",
    "rtcprioritytype",
    "rtcsctptransport connected",
    "rtcsctptransport state change",
    "rtl",
    "rtp media api",
    "rtp stream",
    "ruby",
    "ruby annotation",
    "ruby annotation box",
    "ruby annotation container",
    "ruby annotation container box",
    "ruby base",
    "ruby base box",
    "ruby base container",
    "ruby base container box",
    "ruby columns",
    "ruby container",
    "ruby container box",
    "ruby formatting context",
    "ruby segments",
    "ruby-align",
    "ruby-base",
    "ruby-merge",
    "ruby-overhang",
    "ruby-position",
    "rule set",
    "rules for distinguishing if a resource is a feed or html",
    "rules for distinguishing if a resource is text or binary",
    "rules for identifying an unknown mime type",
    "rules for parsing a hash-name reference",
    "rules for parsing a legacy color value",
    "rules for parsing a legacy font size",
    "rules for parsing a list of dimensions",
    "rules for parsing a list of floating-point numbers",
    "rules for parsing dimension values",
    "rules for parsing floating-point number values",
    "rules for parsing integers",
    "rules for parsing non-negative integers",
    "rules for parsing nonzero dimension values",
    "rules for parsing simple color values",
    "rules for serializing simple color values",
    "rules for sniffing audio and video specifically",
    "rules for sniffing fonts specifically",
    "rules for sniffing images specifically",
    "rules for sniffing in a plugin context",
    "rules for sniffing in a script context",
    "rules for sniffing in a style context",
    "rules for updating the display of webvtt text tracks",
    "rules for updating the text track rendering",
    "rules on anonymous table objects",
    "run a classic script",
    "run a generator",
    "run a host function",
    "run a module script",
    "run a work queue",
    "run a worker",
    "run an upgrade transaction",
    "run animators",
    "run csp initialization for a document",
    "run csp initialization for a global object",
    "run csp initialization for a global object.",
    "run job",
    "run service worker",
    "run steps after a timeout",
    "run the animation frame callbacks",
    "run the fullscreen steps",
    "run the resize steps",
    "run the scroll steps",
    "run the update intersection observations steps",
    "run-in",
    "run-in box",
    "run-in sequence",
    "runjobs",
    "runnable",
    "running",
    "running elements",
    "running javascript execution context",
    "running play state",
    "running position",
    "running script",
    "running transition",
    "running()",
    "rx",
    "ry",
    "s",
    "saddlebrown",
    "safariplatform",
    "safariversion",
    "safe zone",
    "safelisted schemes",
    "safely extracting a body",
    "safely upgradable requests",
    "salmon",
    "salt",
    "saltlength",
    "salvageable",
    "same attribute",
    "same bluetooth device",
    "same origin",
    "same origin-domain",
    "same site",
    "same-document url reference",
    "same-loop windows",
    "same-origin",
    "same-origin request",
    "same-origin with its ancestors",
    "same-origin-allow-popups",
    "same-origin-plus-coep",
    "same-origin-referrer request",
    "samevalue",
    "samp",
    "samplerate",
    "samplesize",
    "sampling frequency",
    "sampling rate",
    "sampling rates",
    "sandbox",
    "sandbox directive",
    "sandbox propagates to auxiliary browsing contexts flag",
    "sandboxed automatic features browsing context flag",
    "sandboxed auxiliary navigation browsing context flag",
    "sandboxed custom protocols navigation browsing context flag",
    "sandboxed document.domain browsing context flag",
    "sandboxed downloads browsing context flag",
    "sandboxed forms browsing context flag",
    "sandboxed modals flag",
    "sandboxed navigation browsing context flag",
    "sandboxed orientation lock browsing context flag",
    "sandboxed origin browsing context flag",
    "sandboxed plugins browsing context flag",
    "sandboxed pointer lock browsing context flag",
    "sandboxed presentation browsing context flag",
    "sandboxed scripts browsing context flag",
    "sandboxed top-level navigation with user activation browsing context flag",
    "sandboxed top-level navigation without user activation browsing context flag",
    "sandboxing flag set",
    "sandboxing flags",
    "sandybrown",
    "sanitize a url to send in a report",
    "sans-serif",
    "satisfies its constraints",
    "save persisted state",
    "scalar",
    "scalar value",
    "scalar value string",
    "scale",
    "scale()",
    "scale3d()",
    "scaled flex shrink factor",
    "scaled viewport size",
    "scalex()",
    "scaley()",
    "scalez()",
    "scan for devices",
    "scancode",
    "schedule job",
    "scheduled event time",
    "scheme",
    "scheme fetch",
    "scheme start state",
    "scheme-and-host",
    "scheme-part",
    "scheme-part match",
    "scheme-relative-file-url string",
    "scheme-relative-special-url string",
    "scheme-relative-url string",
    "scheme-source",
    "schemelessly same site",
    "scope",
    "scope proximity",
    "scope to job queue map",
    "scope to registration map",
    "scope-match a selectors string",
    "scope-relative",
    "scoped context",
    "scoped descendant combinator",
    "scoped selector",
    "scoping element",
    "scoping limit",
    "scoping root",
    "screen",
    "screen concept",
    "screen reader",
    "script",
    "script data double escape end state",
    "script data double escape start state",
    "script data double escaped dash dash state",
    "script data double escaped dash state",
    "script data double escaped less-than sign state",
    "script data double escaped state",
    "script data end tag name state",
    "script data end tag open state",
    "script data escape start dash state",
    "script data escape start state",
    "script data escaped dash dash state",
    "script data escaped dash state",
    "script data escaped end tag name state",
    "script data escaped end tag open state",
    "script data escaped less-than sign state",
    "script data escaped state",
    "script data less-than sign state",
    "script data state",
    "script evaluation environment settings object set",
    "script fetch options",
    "script nesting level",
    "script property",
    "script record",
    "script-blocking style sheet counter",
    "script-closable",
    "script-created parser",
    "script-like",
    "script-src",
    "script-src-attr",
    "script-src-elem",
    "script-supporting elements",
    "scriptable mime type",
    "scriptevaluation",
    "scripting flag",
    "scripting is disabled",
    "scripting is enabled",
    "scriptprocessornode",
    "scroll",
    "scroll an element",
    "scroll an element into view",
    "scroll anchoring bounding rect",
    "scroll boundary",
    "scroll chain",
    "scroll chaining",
    "scroll completed",
    "scroll container",
    "scroll position data",
    "scroll restoration mode",
    "scroll snap",
    "scroll snap area",
    "scroll snap container",
    "scroll snap position",
    "scroll snapport",
    "scroll timeline",
    "scroll timeline offset",
    "scroll to the beginning of the document",
    "scroll to the fragment",
    "scroll-behavior",
    "scroll-margin",
    "scroll-margin-block",
    "scroll-margin-block-end",
    "scroll-margin-block-start",
    "scroll-margin-bottom",
    "scroll-margin-inline",
    "scroll-margin-inline-end",
    "scroll-margin-inline-start",
    "scroll-margin-left",
    "scroll-margin-right",
    "scroll-margin-top",
    "scroll-padding",
    "scroll-padding-block",
    "scroll-padding-block-end",
    "scroll-padding-block-start",
    "scroll-padding-bottom",
    "scroll-padding-inline",
    "scroll-padding-inline-end",
    "scroll-padding-inline-start",
    "scroll-padding-left",
    "scroll-padding-right",
    "scroll-padding-top",
    "scroll-snap-align",
    "scroll-snap-stop",
    "scroll-snap-type",
    "scroll-start",
    "scroll-start-block",
    "scroll-start-inline",
    "scroll-start-target",
    "scroll-start-x",
    "scroll-start-y",
    "scrollable overflow",
    "scrollable overflow area",
    "scrollable overflow rectangle",
    "scrollable overflow region",
    "scrollbar",
    "scrollbar gutter",
    "scrollbar-color",
    "scrollbar-gutter",
    "scrollbar-width",
    "scrolling area",
    "scrolling area origin",
    "scrolling box",
    "scrollport",
    "sctp transport is connected",
    "seagreen",
    "seamlessly update the playback rate",
    "search origin",
    "searching for services",
    "seashell",
    "sec-fetch-dest",
    "sec-fetch-mode",
    "sec-fetch-site",
    "sec-fetch-user",
    "second-factor platform authenticator",
    "second-factor roaming authenticator",
    "secondary view",
    "section",
    "sectioning content",
    "secure connection establishment",
    "secure context",
    "security-sensitive members",
    "securityerror",
    "segment break",
    "segment-completing close path",
    "select",
    "select a css style sheet set",
    "select an image source",
    "select an image source from a source set",
    "select an immersive xr device",
    "select the best candidate",
    "selected coordinate",
    "selected files",
    "selectedcandidatepairchange",
    "selectedness",
    "selectedness setting algorithm",
    "selecting the best candidate",
    "selection",
    "selection direction",
    "selector",
    "selector list",
    "selector matches",
    "selector scoping notation",
    "self",
    "self attestation",
    "self-alignment",
    "self-alignment properties",
    "self-closing flag",
    "self-closing start tag state",
    "semi-condensed",
    "semi-expanded",
    "send select update notifications",
    "send() algorithm",
    "send() flag",
    "sender report",
    "sensitive information",
    "sensitive text input",
    "sensor feature names",
    "sensor fusion",
    "sensor hubs",
    "sensor permission names",
    "sensor reading",
    "sensor task source",
    "sensor type",
    "sentences",
    "separated borders model",
    "sequence",
    "sequence effect",
    "sequence of simple selectors",
    "sequence type",
    "sequential focus navigation",
    "sequential focus navigation order",
    "sequential focus navigation starting point",
    "sequential navigation search algorithm",
    "sequentially focusable",
    "serial number",
    "serializable objects",
    "serialization of a color",
    "serialization of a site",
    "serialization of an origin",
    "serialization steps",
    "serialize a calculation tree",
    "serialize a comma-separated list",
    "serialize a css component value",
    "serialize a css declaration",
    "serialize a css declaration block",
    "serialize a css rule",
    "serialize a css value",
    "serialize a csskeywordvalue",
    "serialize a cssmathvalue",
    "serialize a cssmatrixcomponent",
    "serialize a cssnumericvalue",
    "serialize a cssperspective",
    "serialize a csspropertyrule",
    "serialize a cssrotate",
    "serialize a cssscale",
    "serialize a cssscrolltimelinerule",
    "serialize a cssskew",
    "serialize a cssskewx",
    "serialize a cssskewy",
    "serialize a csstransformvalue",
    "serialize a csstranslate",
    "serialize a cssunitvalue",
    "serialize a cssunparsedvalue",
    "serialize a cssvariablereferencevalue",
    "serialize a group of selectors",
    "serialize a javascript value to a json string",
    "serialize a javascript value to json bytes",
    "serialize a list of css page selectors",
    "serialize a list of reports to json",
    "serialize a local",
    "serialize a math function",
    "serialize a media feature value",
    "serialize a media query",
    "serialize a media query list",
    "serialize a mime type",
    "serialize a mime type to bytes",
    "serialize a response url for reporting",
    "serialize a scroll timeline offset",
    "serialize a selector",
    "serialize a selector() function",
    "serialize a simple selector",
    "serialize a string",
    "serialize a url",
    "serialize a whitespace-separated list",
    "serialize an <an+b> value",
    "serialize an identifier",
    "serialize an infra value to a json string",
    "serialize an infra value to json bytes",
    "serialize an integer",
    "serialize i/o queue",
    "serialize json to bytes",
    "serialize the calculation tree",
    "serialized csp",
    "serialized csp list",
    "serialized directive",
    "serialized mock sensor",
    "serialized options",
    "serialized permissions policy",
    "serialized source list",
    "serialized state",
    "serialized-directive",
    "serialized-origin",
    "serialized-permissions-policy",
    "serialized-policy",
    "serialized-policy-directive",
    "serialized-policy-list",
    "serialized-source-list",
    "serializeddata",
    "serializes as void",
    "serializing a calculation tree",
    "serializing a css value",
    "serializing a javascript value to a json string",
    "serializing a javascript value to json bytes",
    "serializing a request origin",
    "serializing an infra value to a json string",
    "serializing an infra value to json bytes",
    "serializing the calculation tree",
    "serif",
    "server",
    "server-sent events",
    "server-side credential",
    "server-side credential storage modality",
    "server-side public key credential source",
    "servers",
    "service",
    "service changed",
    "service data",
    "service definition",
    "service interoperability requirements",
    "service uuid data type",
    "service worker",
    "service worker agent",
    "service worker client",
    "service worker has no pending events",
    "service worker registration",
    "service worker timing info",
    "service-worker",
    "service-worker-allowed",
    "serviceworker",
    "serviceworkercontainer",
    "serviceworkerglobalscope",
    "session history",
    "session history entry",
    "session history event loop",
    "session history traversal queue",
    "session storage",
    "session storage bucket",
    "session storage holder",
    "set",
    "set a configuration",
    "set a css declaration",
    "set a document response",
    "set a local session description",
    "set a remote session description",
    "set a session description",
    "set a track's muted state",
    "set an attribute",
    "set an attribute value",
    "set an existing attribute value",
    "set an imagebitmaprenderingcontext's output bitmap",
    "set animator instance of worklet animation",
    "set bitmap dimensions",
    "set descriptor",
    "set entries",
    "set local session description",
    "set object",
    "set of comma-separated tokens",
    "set of rtcrtptransceivers",
    "set of scripts that will execute as soon as possible",
    "set of space-separated tokens",
    "set of transceivers",
    "set permission",
    "set pointer capture",
    "set registration",
    "set remote session description",
    "set request's referrer policy on redirect",
    "set sensor settings",
    "set size getter",
    "set the active document",
    "set the associated effect of an animation",
    "set the associated remote streams",
    "set the canceled flag",
    "set the configuration",
    "set the current base text",
    "set the current time",
    "set the device information exposure",
    "set the frozen base url",
    "set the muted state",
    "set the password",
    "set the playback rate",
    "set the search origin",
    "set the selection direction",
    "set the selection range",
    "set the session description",
    "set the start time",
    "set the timeline of an animation",
    "set the url",
    "set the username",
    "set the value of a new indexed property",
    "set the value of a new named property",
    "set the value of an existing indexed property",
    "set the value of an existing named property",
    "set up a window environment settings object",
    "set up a worker environment settings object",
    "set up a worklet environment settings object",
    "set up browsing context features",
    "set up the classic script request",
    "set up the module script request",
    "set user verified",
    "set value",
    "set-dest",
    "set-device-information-exposure",
    "set-mode",
    "set-site",
    "set-user",
    "setAttribute()",
    "setimmutableprototype",
    "setlike",
    "setlike declaration",
    "setsyntheticmoduleexport",
    "setter",
    "setter steps",
    "setting",
    "setting a session description",
    "setting pointer capture",
    "setting the local session description",
    "setting the remote session description",
    "setting the search origin",
    "setting the space on a layer",
    "setting the value of an entry",
    "settings",
    "settled",
    "setup packet",
    "setup stage",
    "setup the resource timing entry",
    "sex",
    "sha-2",
    "sha-256",
    "sha-384",
    "sha-512",
    "shadow host",
    "shadow root",
    "shadow tree",
    "shadow-including ancestor",
    "shadow-including descendant",
    "shadow-including inclusive ancestor",
    "shadow-including inclusive descendant",
    "shadow-including preorder, depth-first traversal",
    "shadow-including root",
    "shadow-including tree order",
    "shadowroot",
    "shadows",
    "shadows are only drawn if",
    "shall",
    "shall not",
    "shape elements",
    "shape()",
    "shape-image-threshold",
    "shape-inside",
    "shape-margin",
    "shape-outside",
    "shape-padding",
    "shape-rendering",
    "shape-subtract",
    "share target",
    "shared alignment context",
    "shared attribute processing steps for iframe and frame elements",
    "shared declarative refresh steps",
    "shared history push/replace state steps",
    "shared monotonic clock",
    "shared utf-16 decoder",
    "shared worker",
    "shared worker agent",
    "shared worker manager",
    "sharedarraybuffer",
    "sheets",
    "shift_jis",
    "shift_jis decoder",
    "shift_jis encoder",
    "shift_jis lead",
    "short",
    "shortcut item",
    "shortcut item's",
    "shorten a url's path",
    "shorter",
    "shorthand",
    "shorthand properties",
    "shorthand property",
    "should",
    "should be rendered",
    "should element's inline behavior be blocked by content security policy?",
    "should element's inline type behavior be blocked by content security policy?",
    "should fetching request be blocked as mixed content?",
    "should navigation request of type be blocked by content security policy?",
    "should navigation response to navigation request of type in target be blocked by content security policy?",
    "should not",
    "should not initialize device tracking",
    "should request be allowed to use feature?",
    "should request be blocked by content security policy?",
    "should response to request be blocked as mixed content?",
    "should response to request be blocked by content security policy?",
    "should response to request be blocked due to mime type",
    "should response to request be blocked due to nosniff",
    "should skip event",
    "show poster flag",
    "show steps",
    "show the picker, if applicable",
    "showing",
    "shut down the session",
    "shutdown",
    "shutdown with an action",
    "sibling",
    "sideways typesetting",
    "sienna",
    "sign",
    "sign()",
    "signal a slot change",
    "signal a type change",
    "signal slots",
    "signaling state",
    "signalingstatechange",
    "signature",
    "signature counter",
    "signcount",
    "signing procedure",
    "silentcredentialdiscovery",
    "silently set the current time",
    "silver",
    "similar-origin window agent",
    "simple color",
    "simple exception",
    "simple fullscreen document",
    "simple graph object",
    "simple iteration progress",
    "simple nominal range",
    "simple parameter",
    "simple range header value",
    "simple selector",
    "simple term",
    "simple term definition",
    "simplified",
    "simplify a calculation tree",
    "simplifying a calculation tree",
    "simulcast envelope",
    "sin()",
    "single-byte decoder",
    "single-byte encoder",
    "single-byte encoding",
    "single-device credential",
    "single-dot path segment",
    "single-factor capable",
    "single-line flex container",
    "single-valued properties",
    "site",
    "size",
    "size containment",
    "size containment box",
    "size features",
    "sizes attribute",
    "sizing as if empty",
    "sizing property",
    "sizing type",
    "skeleton joint name",
    "skeleton joints",
    "skip ascii whitespace",
    "skip its contents",
    "skip-when-determining-incumbent counter",
    "skipped contents",
    "skipping its contents",
    "skips its contents",
    "skyblue",
    "slashed-zero",
    "slateblue",
    "slategray",
    "slategrey",
    "slot",
    "slot assignment",
    "slot!!pseudo-element",
    "slots",
    "slottable",
    "small",
    "small viewport size",
    "small viewport-percentage units",
    "small-caps",
    "smart sensors",
    "smooth scroll",
    "smooth scroll aborted",
    "smooth scroll completed",
    "smoothing over time",
    "sms:",
    "snapshot state",
    "snapshotstate",
    "sniff-scriptable flag",
    "snow",
    "soft",
    "soft update",
    "soft wrap break",
    "soft wrap opportunity",
    "solid",
    "sort a calculation's children",
    "sound",
    "source",
    "source browsing context",
    "source document",
    "source expression",
    "source lists",
    "source node",
    "source set",
    "source size",
    "source stopped state",
    "source text module record",
    "source-atop",
    "source-expression",
    "source-in",
    "source-out",
    "source-over",
    "space",
    "space to fill",
    "space-separated matching",
    "spacer",
    "spaces",
    "span",
    "span count",
    "spanner",
    "spanning annotation",
    "spanning element",
    "spatial navigation",
    "spatial navigation containers",
    "spatial navigation starting point",
    "spatial navigation steps",
    "spatial sensor",
    "spatial-navigation-action",
    "spatial-navigation-contain",
    "spatial-navigation-function",
    "spatialnavigation",
    "speak",
    "speak-as",
    "speak-header",
    "speak-numeral",
    "speak-punctuation",
    "special",
    "special keyword",
    "special operation",
    "special scheme",
    "special-query percent-encode set",
    "specific conditions",
    "specific type",
    "specification",
    "specifications",
    "specifications whose evaluations are both affected by the same changes to the user environment, and so always must be evaluated together in order to ensure proper rendering.",
    "specificity",
    "specified",
    "specified end delay",
    "specified flow",
    "specified iteration duration",
    "specified length",
    "specified order",
    "specified size",
    "specified size suggestion",
    "specified start delay",
    "specified value",
    "specified values",
    "specifies a powerful feature",
    "speculative fetch",
    "speculative html parser",
    "speculative mock element",
    "speech-rate",
    "spin the event loop",
    "split a string on ascii whitespace",
    "split a string on commas",
    "split a text node",
    "split on ascii whitespace",
    "split on commas",
    "spoon-feed the parser",
    "spouse",
    "spread break",
    "spread distance",
    "spreadmethod",
    "springgreen",
    "sqrt()",
    "square",
    "sr",
    "src",
    "src()",
    "srcset attribute",
    "srgb",
    "srgb-linear",
    "ssrc",
    "stack",
    "stack level",
    "stack of open elements",
    "stack of template insertion modes",
    "stacked-fractions",
    "stacking context",
    "stacking context.",
    "stacking contexts",
    "stale response",
    "stale-while-revalidate response",
    "standalone axis",
    "standalone grid",
    "standardized payment method",
    "standardized payment method identifier",
    "start",
    "start a new parallel queue",
    "start an idle period algorithm",
    "start delay",
    "start intersection-observing a lazy loading element",
    "start page value",
    "start register",
    "start tags",
    "start the speculative html parser",
    "start the track processing model",
    "start time",
    "start url",
    "start with a number",
    "start with a windows drive letter",
    "start with an ident sequence",
    "starting a new parallel queue",
    "starting point",
    "starting value",
    "startpoint-on-the-path",
    "starts with a number",
    "starts with a valid escape",
    "starts with a windows drive letter",
    "starts with an ident sequence",
    "state",
    "state function",
    "state override",
    "statechange",
    "stateful animator",
    "stateful animator definition",
    "stateful animator instance",
    "stateful flag",
    "stateless animator",
    "statement",
    "statement at-rule",
    "static",
    "static address",
    "static attributes",
    "static device address",
    "static operations",
    "static position rectangle",
    "static-position containing block",
    "static-position rectangle",
    "statically validate the constraints",
    "stats object",
    "stats object reference",
    "stats selection algorithm",
    "stats value",
    "status",
    "status code",
    "status stage",
    "steelblue",
    "step base",
    "step easing function",
    "step position",
    "step scale factor",
    "step unit",
    "steps",
    "steps for when a user changes payment method",
    "steps to check if a payment can be made",
    "steps to expose a media-resource-specific text track",
    "steps to respond to a payment request",
    "steps to run when the result is ready",
    "stereopannernode",
    "stereopanneroptions",
    "sticky activation",
    "sticky activation-gated api",
    "sticky position",
    "sticky view rectangle",
    "sticky-positioned",
    "sticky-positioned box",
    "still on its initial about:blank document",
    "stop",
    "stop all sources",
    "stop document loading",
    "stop intersection-observing a lazy loading element",
    "stop or comma",
    "stop the sensor altogether",
    "stop the speculative html parser",
    "stop-color",
    "stop-opacity",
    "stopped",
    "stopped due to errors",
    "stops parsing",
    "storage bottle",
    "storage bucket",
    "storage endpoint",
    "storage identifier",
    "storage key",
    "storage key equal",
    "storage proxy map",
    "storage quota",
    "storage shed",
    "storage shelf",
    "storage shelves",
    "storage type",
    "storage usage",
    "store a record into an object store",
    "stored permission",
    "street-address",
    "stress",
    "stretch fit",
    "stretch-fit block size",
    "stretch-fit inline size",
    "stretch-fit size",
    "stretched",
    "strict equality comparison",
    "strictly split",
    "strictly split a string",
    "strictness value",
    "strike",
    "string",
    "string descriptor",
    "string replace all",
    "string types",
    "string value of the extern type",
    "string()",
    "string-set",
    "stringification behavior",
    "stringifier",
    "strings",
    "strip and collapse ascii whitespace",
    "strip leading and trailing ascii whitespace",
    "strip newlines",
    "stroke",
    "stroke bounding box",
    "stroke painting area",
    "stroke positioning area",
    "stroke shape",
    "stroke steps",
    "stroke style",
    "stroke-align",
    "stroke-break",
    "stroke-color",
    "stroke-dash-corner",
    "stroke-dash-justify",
    "stroke-dasharray",
    "stroke-dashoffset",
    "stroke-image",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-origin",
    "stroke-position",
    "stroke-repeat",
    "stroke-size",
    "stroke-width",
    "stroked",
    "strong",
    "strong scoping proximity",
    "struct",
    "structural element",
    "structural pseudo-classes",
    "structurally external element",
    "structured clone",
    "structured header",
    "strut size",
    "style",
    "style attribute",
    "style change event",
    "style containment",
    "style features",
    "style rule",
    "style sheet",
    "style sheet!!as conformance class",
    "style-src",
    "style-src-attr",
    "style-src-elem",
    "stylemap",
    "stylesheet",
    "sub",
    "sub-deserialization",
    "sub-property",
    "sub-pseudo-element",
    "sub-serialization",
    "subdivide into iterations",
    "subdomains",
    "subgrid",
    "subgridded axis",
    "subject",
    "subject (of selector)",
    "subjects",
    "subjects of the selector",
    "subkeys",
    "submission value",
    "submit as entity body",
    "submit button",
    "submit button state (type=submit)",
    "submit buttons",
    "submit dialog",
    "submittable elements",
    "submitted",
    "submitter",
    "subresource request",
    "subsequent-sibling combinator",
    "subsidiary",
    "substantial",
    "substantive change",
    "substitute",
    "substitute a var()",
    "substitute an attr()",
    "substitute an env()",
    "subtitles",
    "subtle",
    "subtlecrypto",
    "succeed",
    "succeeded",
    "success_fraction",
    "successful",
    "successful sampling rate",
    "suffering from a custom error",
    "suffering from a pattern mismatch",
    "suffering from a step mismatch",
    "suffering from a type mismatch",
    "suffering from an overflow",
    "suffering from an underflow",
    "suffering from bad input",
    "suffering from being missing",
    "suffering from being too long",
    "suffering from being too short",
    "suggestions source element",
    "suitable sequentially focusable area",
    "sum value",
    "summary",
    "summary for its parent details",
    "sunken initial",
    "sup",
    "super",
    "superdomain match",
    "superseded recommendation",
    "superseded registry",
    "supplied mime type",
    "supplied mime type detection algorithm",
    "support",
    "support global identifiers for items",
    "support indexed properties",
    "support named properties",
    "supported",
    "supported by the user agent",
    "supported css property",
    "supported features",
    "supported filter names",
    "supported open() feature name",
    "supported operations",
    "supported physical transports",
    "supported property indices",
    "supported property names",
    "supported sensor options",
    "supported styling language",
    "supported tokens",
    "supportedalgorithms",
    "supports hand tracking",
    "supports indexed properties",
    "supports queries",
    "supports()",
    "suppress a pointer event stream",
    "suppression trigger",
    "suppression window",
    "surface a candidate",
    "surface the candidate",
    "surrogate",
    "surrogate-character-reference",
    "surrogate-in-input-stream",
    "surrounding agent",
    "suspendable worker",
    "suspended timer handles",
    "suspension time",
    "svg",
    "svg a",
    "svg authoring tools",
    "svg context",
    "svg desc",
    "svg document fragment",
    "svg elements",
    "svg foreignobject",
    "svg fragment identifier",
    "svg generators",
    "svg image",
    "svg interpreters",
    "svg layout box",
    "svg namespace",
    "svg script",
    "svg servers",
    "svg svg",
    "svg text-rendering",
    "svg title",
    "svg use",
    "svg user agent",
    "svg view specification",
    "svg viewers",
    "svg viewports",
    "svg:transform",
    "svgelement",
    "svgimageelement",
    "svgscriptelement",
    "svgsvgelement",
    "swap",
    "sweetheart",
    "switch",
    "switch the fontfaceset to loaded",
    "switch the fontfaceset to loading",
    "symbol",
    "symbols()",
    "symposia",
    "symposium",
    "sync",
    "sync animation timings to worklet",
    "sync local times to document",
    "sync registration",
    "sync requested flag",
    "synchronization source",
    "synchronized",
    "synchronous flag",
    "synchronous read method",
    "synchronous section",
    "synchronously replace the rules of a cssstylesheet",
    "syntax component",
    "syntax component name",
    "syntax definition",
    "syntax of a standardized payment method identifier",
    "syntax string",
    "syntaxerror",
    "synthesize baseline",
    "synthesized baseline",
    "synthetic module record",
    "system color pairings",
    "system colors",
    "system font fallback",
    "system fonts",
    "system id",
    "system key press handler",
    "system visibility state",
    "system-level audio callback",
    "system-level audio callback buffer size",
    "systemLanguage",
    "t1",
    "t2",
    "tab",
    "tab size",
    "tab stop",
    "tab-size",
    "tabindex value",
    "tabindex-ordered focus navigation scope",
    "table",
    "table caption box",
    "table element",
    "table grid",
    "table grid box",
    "table intrinsic offsets",
    "table model",
    "table model error",
    "table object cache",
    "table wrapper box",
    "table-caption",
    "table-cell",
    "table-column",
    "table-column-group",
    "table-created",
    "table-footer-group",
    "table-grid box",
    "table-header-group",
    "table-internal",
    "table-layout",
    "table-non-root",
    "table-root",
    "table-row",
    "table-row-group",
    "table-track",
    "table-track-group",
    "table-wrapper box",
    "tabs",
    "tabular container",
    "tabular-nums",
    "tag",
    "tag name",
    "tag name state",
    "tag note",
    "tag omission in text/html",
    "tag open state",
    "tag-terminating byte",
    "tagged image",
    "taglength",
    "tags",
    "tail-time",
    "take pending play promises",
    "tan",
    "tan()",
    "tao check",
    "target",
    "target element",
    "target frame rate",
    "target main size",
    "target object",
    "target phase",
    "target property",
    "target pseudo-selector",
    "target-counter()",
    "target-counters()",
    "target-text()",
    "task",
    "task queues",
    "task source",
    "tbody",
    "td",
    "teal",
    "team",
    "team contact",
    "team correction",
    "team decision",
    "team representative in a working group",
    "team representative in an interest group",
    "team's decision",
    "team-only",
    "technical architecture group",
    "technical report",
    "tee a readable stream",
    "tel",
    "telephone state (type=tel)",
    "telephone type strings",
    "template",
    "template contents",
    "temporary buffer",
    "term",
    "term definition",
    "terminate",
    "terminate a worker",
    "terminate a worklet global scope",
    "terminate an algorithm",
    "terminate service worker",
    "terminate the algorithm",
    "terminate this algorithm",
    "termination nesting level",
    "test of user presence",
    "text",
    "text (type=text) state and search state (type=search)",
    "text chunk",
    "text composition system",
    "text content block element",
    "text content child element",
    "text content element",
    "text entry cursor position",
    "text over edge",
    "text preparation algorithm",
    "text track cue",
    "text track cue order",
    "text track cue writing direction",
    "text tracks",
    "text under edge",
    "text-align",
    "text-align-all",
    "text-align-last",
    "text-anchor",
    "text-combine-upright",
    "text-decoration",
    "text-decoration-color",
    "text-decoration-fill",
    "text-decoration-line",
    "text-decoration-skip",
    "text-decoration-skip-box",
    "text-decoration-skip-ink",
    "text-decoration-skip-inset",
    "text-decoration-skip-self",
    "text-decoration-skip-spaces",
    "text-decoration-stroke",
    "text-decoration-style",
    "text-decoration-thickness",
    "text-direction list",
    "text-directions",
    "text-edge",
    "text-emphasis",
    "text-emphasis-color",
    "text-emphasis-position",
    "text-emphasis-skip",
    "text-emphasis-style",
    "text-group-align",
    "text-indent",
    "text-justify",
    "text-orientation",
    "text-over baseline",
    "text-overflow",
    "text-rendering",
    "text-shadow",
    "text-size-adjust",
    "text-space-collapse",
    "text-space-trim",
    "text-spacing",
    "text-transform",
    "text-under baseline",
    "text-underline-offset",
    "text-underline-position",
    "text-wrap",
    "text/css",
    "text/event-stream",
    "text/html",
    "text/javascript",
    "text/json",
    "text/ping",
    "text/plain",
    "text/plain encoding algorithm",
    "text/uri-list",
    "text/vcard",
    "text/vtt",
    "text/xml",
    "textarea",
    "textarea effective height",
    "textarea effective width",
    "textarea wrapping transformation",
    "textcontent",
    "textfield",
    "textpath",
    "textphone",
    "textual data types",
    "tfoot",
    "th",
    "the \"after after body\" insertion mode",
    "the \"after after frameset\" insertion mode",
    "the \"after body\" insertion mode",
    "the \"after frameset\" insertion mode",
    "the \"after head\" insertion mode",
    "the \"before head\" insertion mode",
    "the \"before html\" insertion mode",
    "the \"in body\" insertion mode",
    "the \"in caption\" insertion mode",
    "the \"in cell\" insertion mode",
    "the \"in column group\" insertion mode",
    "the \"in frameset\" insertion mode",
    "the \"in head noscript\" insertion mode",
    "the \"in head\" insertion mode",
    "the \"in row\" insertion mode",
    "the \"in select in table\" insertion mode",
    "the \"in select\" insertion mode",
    "the \"in table body\" insertion mode",
    "the \"in table text\" insertion mode",
    "the \"in table\" insertion mode",
    "the \"in template\" insertion mode",
    "the \"initial\" insertion mode",
    "the \"text\" insertion mode",
    "the 128-bit uuid represented",
    "the accesskey attribute",
    "the body element",
    "the constraint validation api",
    "the curve name",
    "the directionality",
    "the document's referrer",
    "the drag data item kind",
    "the drag data item type string",
    "the embed element setup steps",
    "the empty string",
    "the event handler processing algorithm",
    "the exclusive range",
    "the given value",
    "the head element",
    "the html body element",
    "the html element",
    "the html syntax",
    "the inclusive range",
    "the indicated part of the document",
    "the inert attribute",
    "the input byte stream",
    "the kind of text track",
    "the legend element's accesskey delegatee",
    "the link is an alternative style sheet",
    "the location bar barprop object",
    "the menu bar barprop object",
    "the personal bar barprop object",
    "the properties of an item",
    "the range",
    "the rules for choosing a browsing context",
    "the rules for parsing tokens in foreign content",
    "the scrollbar barprop object",
    "the special value *",
    "the status bar barprop object",
    "the template element",
    "the title element",
    "the toolbar barprop object",
    "the typedarray constructors",
    "the underlying resources of a layer are lost",
    "the websocket connection is established",
    "the worker's ports",
    "the xml syntax",
    "thead",
    "theme color",
    "this",
    "thistle",
    "threeddarkshadow",
    "threedface",
    "threedhighlight",
    "threedlightshadow",
    "threedshadow",
    "throttling",
    "throw",
    "throw-on-dynamic-markup-insertion counter",
    "tie track source to context",
    "time",
    "time marches on",
    "time origin",
    "time origin timestamp",
    "time state (type=time)",
    "time value",
    "time-based animation to a proportional animation",
    "time-zone offset",
    "timed out flag",
    "timeline",
    "timeline active phase",
    "timeline after phase",
    "timeline associated with a document",
    "timeline before phase",
    "timeline current time",
    "timeline duration",
    "timeline inactive phase",
    "timeline offset",
    "timeline phase",
    "timeline time to origin-relative time",
    "timeout",
    "timer initialization steps",
    "timer nesting level",
    "timer table",
    "timer task source",
    "timing function",
    "timing info",
    "timing-allow-origin",
    "title",
    "titling-caps",
    "tmbl",
    "to",
    "toboolean",
    "toggle",
    "toggle()",
    "tojsvalue",
    "token",
    "tokenization",
    "tokenize the features argument",
    "tokenizer",
    "tomato",
    "tonechange",
    "toomanyreads",
    "top",
    "top layer",
    "top-level browsing context",
    "top-level calculation",
    "top-level element",
    "top-level microdata item",
    "topmost event target",
    "topmost script-having execution context",
    "tostring",
    "total horizontal border spacing",
    "total length",
    "touch",
    "touch point",
    "touch-action",
    "touch-action values",
    "touchend",
    "touint32",
    "tovaluetype",
    "towebassemblyvalue",
    "tr",
    "trace a path",
    "track",
    "track enabled state",
    "track ended by the user agent",
    "track label",
    "track language",
    "track list",
    "track section",
    "track set",
    "track sizing algorithm",
    "track url",
    "tracking",
    "tracking the effective position of the legacy mouse pointer",
    "tracking user activation",
    "tracking vector",
    "traditional",
    "transaction",
    "transceiver kind",
    "transfer function element",
    "transfer function element attributes",
    "transfer steps",
    "transfer-receiving steps",
    "transferable objects",
    "transferred size suggestion",
    "transform",
    "transform a point with a matrix",
    "transform stream",
    "transform-box",
    "transform-origin",
    "transform-style",
    "transformToDocument()",
    "transformToFragment()",
    "transformable element",
    "transformation matrix",
    "transformations",
    "transformed element",
    "transformed progress",
    "transformed time",
    "transformer",
    "transforms",
    "transient action",
    "transient activation",
    "transient activation duration",
    "transient activation-consuming api",
    "transient activation-gated api",
    "transient input sources",
    "transient registered observer",
    "transition",
    "transition generation",
    "transition origin",
    "transition phase",
    "transition requests",
    "transition-delay",
    "transition-duration",
    "transition-property",
    "transition-timing-function",
    "transitionable",
    "translatable attributes",
    "translate",
    "translate a layoutconstraintsoptions to internal constraints",
    "translate-enabled",
    "translate3d()",
    "translatez()",
    "translating",
    "translation",
    "translation mode",
    "transmission of request and response",
    "transp",
    "transparent",
    "transparent black",
    "traverse siblings",
    "traverse the history",
    "traverse the history by a delta",
    "tree",
    "tree construction",
    "tree construction dispatcher",
    "tree context",
    "tree order",
    "tree-abiding",
    "tree-abiding pseudo-element",
    "tref",
    "triangle",
    "triaxial",
    "triggered by a user generated orientation change",
    "trinary",
    "triple",
    "true-by-default",
    "trusted immersive ui",
    "trusted ui",
    "try activate",
    "try clear registration",
    "try to scroll to the fragment",
    "try to upgrade an element",
    "tspan",
    "tt",
    "ttl",
    "tuple",
    "tuple origin",
    "turned off",
    "turned on",
    "turquoise",
    "tx power level",
    "type",
    "type being given a new name",
    "type list",
    "type map",
    "type mapping",
    "type of a cssmathvalue",
    "type of a cssunitvalue",
    "type of the content",
    "type selector",
    "type-phase",
    "type-scoped context",
    "typed array types",
    "typed item",
    "typed value",
    "typedarraycreate",
    "typedef",
    "typeerror",
    "typeof",
    "types",
    "types array",
    "typeset sideways",
    "typeset upright",
    "typesetting sideways",
    "typesetting upright",
    "typographic character",
    "typographic character unit",
    "typographic letter unit",
    "typographic mode",
    "tz",
    "u",
    "ua",
    "ua origin",
    "ua style sheet",
    "ua-default viewport size",
    "ua-default viewport-percentage units",
    "ua-origin",
    "ui redressing",
    "uid",
    "uievent",
    "uint8clampedarray",
    "ul",
    "ultimate originating element",
    "ultimate sink",
    "ultra-condensed",
    "ultra-expanded",
    "un-initialized value",
    "unable to create an rtcdatachannel",
    "unanimity",
    "unauthenticated response",
    "unavailable",
    "unblock rendering",
    "unbounded key range",
    "unbounded text track cue",
    "undefined",
    "under",
    "underline zero position",
    "underlying byte source",
    "underlying data transport",
    "underlying sink",
    "underlying source",
    "underlying value",
    "underlying values",
    "undistributable space",
    "unexpected-character-after-doctype-system-identifier",
    "unexpected-character-in-attribute-name",
    "unexpected-character-in-unquoted-attribute-value",
    "unexpected-equals-sign-before-attribute-name",
    "unexpected-null-character",
    "unexpected-question-mark-instead-of-tag-name",
    "unexpected-solidus-in-tag",
    "unfocusing steps",
    "unforced break",
    "unforgeable",
    "unforgeable property name",
    "unfullscreen a document",
    "unfullscreen an element",
    "uniaxial",
    "unicase",
    "unicode category",
    "unicode character categories",
    "unicode east asian width",
    "unicode general category",
    "unicode script",
    "unicode vertical orientation",
    "unicode-bidi",
    "unicode-range",
    "union",
    "union type",
    "unique identifier (id)",
    "universal selector",
    "universal syntax definition",
    "unix epoch",
    "unknown",
    "unknown -webkit- pseudo-elements",
    "unknown-named-character-reference",
    "unload",
    "unload a document",
    "unload counter",
    "unloading document cleanup steps",
    "unloading document visibility change steps",
    "unmute",
    "unobserve a target element",
    "unoccupied",
    "unordered set of unique space-separated tokens",
    "unprefixed",
    "unreasonable number of requests",
    "unregister",
    "unregister the system key press handler",
    "unresolved",
    "unresolved reference",
    "unrestricted double",
    "unrestricted float",
    "unsafe response",
    "unsafe shared current time",
    "unsafe-none",
    "unsafe-request flag",
    "unsafe-url",
    "unsafefile",
    "unset",
    "unset.",
    "unshipped port message queue",
    "unsigned long",
    "unsigned long long",
    "unsigned short",
    "unstable",
    "unstyled document",
    "untagged image",
    "untagged video",
    "unwrapkey",
    "up",
    "up-mixing",
    "update",
    "update a layout child style",
    "update a paymentrequest's details algorithm",
    "update a style block",
    "update an animation's finished state",
    "update animations and send events",
    "update href",
    "update latest reading",
    "update mock sensor reading",
    "update registration state",
    "update requests",
    "update service worker extended events set",
    "update style attribute for",
    "update the current document readiness",
    "update the data max message size",
    "update the file selection",
    "update the ice gathering state",
    "update the image data",
    "update the negotiation-needed flag",
    "update the orientation information",
    "update the pending layers state",
    "update the rendering",
    "update the search origin",
    "update the session history with the new page",
    "update the source set",
    "update the timing properties of an animation effect",
    "update the viewports",
    "update the visibility state",
    "update worker state",
    "updating the search origin",
    "upgrade a mixed content request to a potentially trustworthy url, if appropriate",
    "upgrade a request",
    "upgrade an element",
    "upgrade insecure navigations set",
    "upgrade reaction",
    "upgrade request to a potentially trustworthy url, if appropriate",
    "upgrade the pending request to the current request",
    "upgrade transaction",
    "upgrade-insecure-requests",
    "upgrade-insecure-requests http request header field",
    "upgradeable mixed content",
    "upgrades",
    "upload complete flag",
    "upload listener flag",
    "upload object",
    "upon fulfillment",
    "upon rejection",
    "upper-alpha",
    "upper-alpha-legal",
    "upper-latin",
    "upper-roman",
    "uppercase letter",
    "upright typesetting",
    "url",
    "url and history update steps",
    "url code point",
    "url descriptor",
    "url equals",
    "url list",
    "url parser",
    "url path serializer",
    "url path serializing",
    "url property elements",
    "url record",
    "url reference",
    "url reference with fragment identifier",
    "url serializer",
    "url state (type=url)",
    "url units",
    "url()",
    "url-based payment method identifier",
    "url-fragment string",
    "url-path-segment string",
    "url-port string",
    "url-query string",
    "url-scheme string",
    "urlencoded parser",
    "urlencoded serializer",
    "urlencoded string parser",
    "urn:",
    "usage intersection",
    "usages",
    "usages_cached",
    "usb device",
    "use",
    "use a negative sign",
    "use credentials",
    "use srcset or picture",
    "use-element shadow tree",
    "use-url-credentials flag",
    "used",
    "used autocapitalization hint",
    "used color",
    "used color scheme",
    "used min-width of a table",
    "used offset distance",
    "used value",
    "used values",
    "used width of a table",
    "user",
    "user aborts the payment request",
    "user aborts the payment request algorithm",
    "user accepts the payment request",
    "user accepts the payment request algorithm",
    "user account",
    "user action pseudo-class",
    "user agent",
    "user agent (ua)",
    "user agent origin",
    "user consent",
    "user coordinate system",
    "user handle",
    "user intent",
    "user interaction",
    "user interaction task source",
    "user mediated",
    "user mediation",
    "user origin",
    "user present",
    "user public key",
    "user style sheet",
    "user units",
    "user verification",
    "user verification method",
    "user verified",
    "user-activation",
    "user-agent origin",
    "user-agent style sheet",
    "user-origin",
    "user-select",
    "user-verifying platform authenticator",
    "userinfo percent-encode set",
    "username",
    "uses",
    "uses a negative sign",
    "using",
    "using the a element to define a command",
    "using the accesskey attribute on a legend element to define a command",
    "using the accesskey attribute to define a command on other elements",
    "using the button element to define a command",
    "using the input element to define a command",
    "using the option element to define a command",
    "using the rules for",
    "usually support",
    "usvstring",
    "utf-16 lead byte",
    "utf-16 lead surrogate",
    "utf-16be",
    "utf-16be decoder",
    "utf-16be/le",
    "utf-16le",
    "utf-16le decoder",
    "utf-8",
    "utf-8 bytes needed",
    "utf-8 bytes seen",
    "utf-8 code point",
    "utf-8 decode",
    "utf-8 decode without bom",
    "utf-8 decode without bom or fail",
    "utf-8 decoder",
    "utf-8 encode",
    "utf-8 encoder",
    "utf-8 lower boundary",
    "utf-8 percent-encode",
    "utf-8 upper boundary",
    "uuid",
    "uuid alias",
    "uv",
    "valid",
    "valid browsing context name",
    "valid browsing context name or keyword",
    "valid color",
    "valid css property",
    "valid custom element name",
    "valid date string",
    "valid date string with optional time",
    "valid domain",
    "valid domain string",
    "valid duration string",
    "valid email address",
    "valid email address list",
    "valid external application resource",
    "valid file name",
    "valid floating-point number",
    "valid global date and time string",
    "valid hash-name reference",
    "valid host string",
    "valid image",
    "valid integer",
    "valid ipv4-address string",
    "valid ipv6-address string",
    "valid key path",
    "valid list of floating-point numbers",
    "valid list of part mappings",
    "valid local date and time string",
    "valid lowercase simple color",
    "valid media query list",
    "valid mime type string",
    "valid mime type string with no parameters",
    "valid month string",
    "valid name",
    "valid non-empty url",
    "valid non-empty url potentially surrounded by spaces",
    "valid non-negative integer",
    "valid normalized local date and time string",
    "valid opaque-host string",
    "valid part mapping",
    "valid simple color",
    "valid source size list",
    "valid style sheet",
    "valid time string",
    "valid time-zone offset string",
    "valid url potentially surrounded by spaces",
    "valid url string",
    "valid uuid",
    "valid vevent duration string",
    "valid week string",
    "valid yearless date string",
    "validate",
    "validate a cssnumberish time",
    "validate a payment method identifier",
    "validate a standardized payment method identifier",
    "validate a url-based payment method identifier",
    "validate and extract",
    "validate the state of the xrwebglsubimage creation function",
    "validation anchor",
    "validation error",
    "validation message",
    "validation notice",
    "validity",
    "validity states",
    "value",
    "value accumulation",
    "value addition",
    "value asynchronously iterable declaration",
    "value interpolation",
    "value iterator",
    "value object",
    "value of string literal tokens",
    "value pair",
    "value pairs to iterate over",
    "value sanitization algorithm",
    "value-with-size",
    "values",
    "var",
    "var()",
    "var() substitution",
    "variadic",
    "vchar",
    "vector-effect",
    "vendor id",
    "vendor prefix",
    "vendor-prefixed",
    "verification procedure",
    "verification procedure inputs",
    "verify",
    "verify a media response",
    "vertex markers",
    "vertical",
    "vertical axis",
    "vertical block flow",
    "vertical dimension",
    "vertical element",
    "vertical offset",
    "vertical orientation",
    "vertical script",
    "vertical typographic mode",
    "vertical writing mode",
    "vertical-align",
    "vertical-only",
    "viable candidate",
    "video",
    "video/mp4",
    "video/mpeg",
    "videoframe",
    "view",
    "view offset",
    "viewer",
    "viewport",
    "viewport coordinate system",
    "viewport-based selection",
    "viewport-percentage lengths",
    "violate",
    "violated",
    "violation",
    "violet",
    "virtual authenticator database",
    "virtual authenticators",
    "virtual browsing context group id",
    "virtual scoping root",
    "virtual word boundary",
    "visibility",
    "visibility state",
    "visible character",
    "visible to reportingobservers",
    "visible track",
    "visit",
    "visual angle unit",
    "visual box model",
    "visual formatting model",
    "vocabulary mapping",
    "voice",
    "voice-balance",
    "voice-duration",
    "voice-family",
    "voice-pitch",
    "voice-range",
    "voice-rate",
    "voice-stress",
    "voice-volume",
    "void elements",
    "voidfunction",
    "volume",
    "vttcue",
    "vw",
    "w3c candidate recommendation",
    "w3c decision",
    "w3c director",
    "w3c fellows",
    "w3c group",
    "w3c member",
    "w3c note",
    "w3c proposed recommendation",
    "w3c recommendation",
    "w3c recommendation track",
    "w3c registry",
    "w3c rf licensing requirements",
    "w3c royalty-free license",
    "w3c royalty-free licensing requirements",
    "w3c statement",
    "w3c team",
    "w3c working draft",
    "wait for all",
    "waiting",
    "waiting for all",
    "watch advertisements manager",
    "waveshapernode",
    "waveshaperoptions",
    "wbr",
    "wd",
    "weak scoping proximity",
    "weaker inset",
    "weakref",
    "weakref.prototype.deref()",
    "web application",
    "web authentication api",
    "web idl arguments list",
    "web worker",
    "web+ scheme prefix",
    "web-exposed available screen area",
    "web-exposed screen area",
    "webassembly.module",
    "webauthn",
    "webauthn authenticator",
    "webauthn client",
    "webauthn client device",
    "webauthn extensions",
    "webauthn relying party",
    "webauthn signature",
    "webauthn/fido2 protocol",
    "webdriver bidi dom content loaded",
    "webdriver bidi download started",
    "webdriver bidi fragment navigated",
    "webdriver bidi load complete",
    "webdriver bidi navigation aborted",
    "webdriver bidi navigation failed",
    "webdriver bidi navigation started",
    "webdriver bidi navigation status",
    "webdriver bidi user prompt closed",
    "webdriver bidi user prompt opened",
    "webgl",
    "webgl2",
    "webgl2renderingcontext",
    "webglcontextattributes",
    "webglrenderingcontext",
    "webgpu",
    "webkitURL",
    "webrtc",
    "websocket",
    "websocket task source",
    "webusb platform capability descriptor",
    "webvtt file",
    "webvtt file using cue text",
    "webvtt file using only nested cues",
    "webvtt parser",
    "week",
    "week number of the last day",
    "week state (type=week)",
    "weight",
    "well-formed",
    "well-known intrinsic objects",
    "well-known symbols",
    "wheat",
    "wheel",
    "when-defined promise map",
    "while",
    "white",
    "white point",
    "white space",
    "white space characters",
    "white-space",
    "whitesmoke",
    "whitespace",
    "whitespace byte",
    "wide review",
    "widget",
    "widows",
    "width",
    "width descriptor",
    "width descriptor value",
    "width of the select's labels",
    "will lazy load element steps",
    "will read frequently",
    "will retry",
    "will-change",
    "willful violation",
    "window",
    "window event loop",
    "window open steps",
    "window post message steps",
    "window-reflecting body element event handler set",
    "windowframe",
    "windows drive letter",
    "windows-1250",
    "windows-1251",
    "windows-1252",
    "windows-1253",
    "windows-1254",
    "windows-1255",
    "windows-1256",
    "windows-1257",
    "windows-1258",
    "windows-874",
    "windowtext",
    "with an error",
    "word separator",
    "word spacing",
    "word-boundary-detection",
    "word-boundary-expansion",
    "word-break",
    "word-separator character",
    "word-spacing",
    "word-wrap",
    "words",
    "work",
    "worker",
    "worker event loop",
    "worker-src",
    "workerglobalscope object",
    "working draft",
    "working group note",
    "working groups",
    "worklet agent",
    "worklet animation",
    "worklet destination type",
    "worklet event loop",
    "worklet global scope type",
    "worklet global scopes",
    "workshops",
    "would need a browsing context group switch due to report-only",
    "would start a number",
    "would start an ident sequence",
    "wrap",
    "wrap-after",
    "wrap-before",
    "wrap-flow",
    "wrap-inside",
    "wrap-through",
    "wrapkey",
    "wrapping",
    "wrapping area",
    "wrapping context",
    "writable side",
    "writable stream",
    "writable stream writer",
    "write a chunk",
    "write characteristic descriptors",
    "write characteristic value",
    "write long characteristic descriptors",
    "write without response",
    "writecharacteristicvalue",
    "writer",
    "writing mode",
    "writing-mode",
    "wsp",
    "x",
    "x-axis",
    "x-content-type-options",
    "x-frame-options",
    "x-height baseline",
    "x-mac-cyrillic",
    "x-middle baseline",
    "x-user-defined",
    "x-user-defined decoder",
    "x-user-defined encoder",
    "x1",
    "x2",
    "xlink namespace",
    "xlink:href",
    "xml document",
    "xml documents",
    "xml element data for filters",
    "xml filter list",
    "xml fragment parsing algorithm",
    "xml fragment serialization algorithm",
    "xml mime type",
    "xml namespace",
    "xml parser",
    "xml scripting support disabled",
    "xml scripting support enabled",
    "xml-compatible",
    "xmlhttprequest",
    "xmlns namespace",
    "xmp",
    "xor",
    "xr",
    "xr animation frame",
    "xr compatible",
    "xr compositor",
    "xr device",
    "xr input source",
    "xr task source",
    "xsltprocessor",
    "y",
    "y-axis",
    "y1",
    "y2",
    "yearless date",
    "yellow",
    "yellowgreen",
    "z-index",
    "zhuyin fuhao",
    "zip-based mime type",
    "{a,b}",
    "{a}",
    "|",
    "||",
    "~"
  ],
  "::first-letter": [
    "::postfix",
    "::prefix"
  ],
  "<angle>": [
    "deg",
    "grad",
    "rad",
    "turn"
  ],
  "<baseline-position>": [
    "baseline",
    "first",
    "first baseline",
    "last",
    "last baseline"
  ],
  "<basic-shape>": [
    "circle()",
    "ellipse()",
    "inset()",
    "path()",
    "polygon()",
    "rect()",
    "reference box",
    "xywh()"
  ],
  "<bg-clip>": [
    "<box>",
    "border",
    "text"
  ],
  "<blend-mode>": [
    "color",
    "color-burn",
    "color-dodge",
    "darken",
    "difference",
    "exclusion",
    "hard-light",
    "hue",
    "lighten",
    "luminosity",
    "multiply",
    "normal",
    "overlay",
    "saturation",
    "screen",
    "soft-light"
  ],
  "<border-style>": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "<border-width>": [
    "<length>",
    "medium",
    "thick",
    "thin"
  ],
  "<bottom>": [
    "auto"
  ],
  "<box>": [
    "border-box",
    "content-box",
    "fill-box",
    "margin-box",
    "padding-box",
    "stroke-box",
    "svg viewport origin box",
    "view-box"
  ],
  "<by-to>": [
    "by",
    "to"
  ],
  "<color>": [
    "aliceblue",
    "antiquewhite",
    "aqua",
    "aquamarine",
    "azure",
    "beige",
    "bisque",
    "black",
    "blanchedalmond",
    "blue",
    "blueviolet",
    "brown",
    "burlywood",
    "cadetblue",
    "chartreuse",
    "chocolate",
    "coral",
    "cornflowerblue",
    "cornsilk",
    "crimson",
    "currentcolor",
    "cyan",
    "darkblue",
    "darkcyan",
    "darkgoldenrod",
    "darkgray",
    "darkgreen",
    "darkgrey",
    "darkkhaki",
    "darkmagenta",
    "darkolivegreen",
    "darkorange",
    "darkorchid",
    "darkred",
    "darksalmon",
    "darkseagreen",
    "darkslateblue",
    "darkslategray",
    "darkslategrey",
    "darkturquoise",
    "darkviolet",
    "deeppink",
    "deepskyblue",
    "dimgray",
    "dimgrey",
    "dodgerblue",
    "firebrick",
    "floralwhite",
    "forestgreen",
    "fuchsia",
    "gainsboro",
    "ghostwhite",
    "gold",
    "goldenrod",
    "gray",
    "green",
    "greenyellow",
    "grey",
    "honeydew",
    "hotpink",
    "indianred",
    "indigo",
    "ivory",
    "khaki",
    "lavender",
    "lavenderblush",
    "lawngreen",
    "lemonchiffon",
    "lightblue",
    "lightcoral",
    "lightcyan",
    "lightgoldenrodyellow",
    "lightgray",
    "lightgreen",
    "lightgrey",
    "lightpink",
    "lightsalmon",
    "lightseagreen",
    "lightskyblue",
    "lightslategray",
    "lightslategrey",
    "lightsteelblue",
    "lightyellow",
    "lime",
    "limegreen",
    "linen",
    "magenta",
    "maroon",
    "mediumaquamarine",
    "mediumblue",
    "mediumorchid",
    "mediumpurple",
    "mediumseagreen",
    "mediumslateblue",
    "mediumspringgreen",
    "mediumturquoise",
    "mediumvioletred",
    "midnightblue",
    "mintcream",
    "mistyrose",
    "moccasin",
    "navajowhite",
    "navy",
    "none",
    "oldlace",
    "olive",
    "olivedrab",
    "orange",
    "orangered",
    "orchid",
    "palegoldenrod",
    "palegreen",
    "paleturquoise",
    "palevioletred",
    "papayawhip",
    "peachpuff",
    "peru",
    "pink",
    "plum",
    "powderblue",
    "purple",
    "rebeccapurple",
    "red",
    "rosybrown",
    "royalblue",
    "saddlebrown",
    "salmon",
    "sandybrown",
    "seagreen",
    "seashell",
    "sienna",
    "silver",
    "skyblue",
    "slateblue",
    "slategray",
    "slategrey",
    "snow",
    "springgreen",
    "steelblue",
    "tan",
    "teal",
    "thistle",
    "tomato",
    "transparent",
    "turquoise",
    "violet",
    "wheat",
    "white",
    "whitesmoke",
    "yellow",
    "yellowgreen"
  ],
  "<content-distribution>": [
    "space-around",
    "space-between",
    "space-evenly",
    "stretch"
  ],
  "<content-list>": [
    "<image>",
    "<string>",
    "close-quote",
    "contents",
    "leader()",
    "no-close-quote",
    "no-open-quote",
    "open-quote"
  ],
  "<content-position>": [
    "center",
    "end",
    "flex-end",
    "flex-start",
    "start"
  ],
  "<counter-style-name>": [
    "arabic-indic",
    "armenian",
    "bengali",
    "cambodian",
    "circle",
    "cjk-decimal",
    "cjk-earthly-branch",
    "cjk-heavenly-stem",
    "decimal",
    "decimal-leading-zero",
    "devanagari",
    "disc",
    "disclosure-closed",
    "disclosure-open",
    "ethiopic-numeric",
    "georgian",
    "gujarati",
    "gurmukhi",
    "hebrew",
    "hiragana",
    "hiragana-iroha",
    "kannada",
    "katakana",
    "katakana-iroha",
    "khmer",
    "korean-hangul-formal",
    "korean-hanja-formal",
    "korean-hanja-informal",
    "lao",
    "lower-alpha",
    "lower-armenian",
    "lower-greek",
    "lower-latin",
    "lower-roman",
    "malayalam",
    "mongolian",
    "myanmar",
    "oriya",
    "persian",
    "square",
    "tamil",
    "telugu",
    "thai",
    "tibetan",
    "upper-alpha",
    "upper-armenian",
    "upper-latin",
    "upper-roman"
  ],
  "<counter-style>": [
    "cjk-ideographic",
    "japanese-formal",
    "japanese-informal",
    "simp-chinese-formal",
    "simp-chinese-informal",
    "trad-chinese-formal",
    "trad-chinese-informal"
  ],
  "<cubic-bezier-easing-function>": [
    "cubic-bezier()",
    "ease",
    "ease-in",
    "ease-in-out",
    "ease-out"
  ],
  "<display-box>": [
    "contents",
    "none"
  ],
  "<display-inside>": [
    "flex",
    "flow",
    "flow-root",
    "grid",
    "ruby",
    "table"
  ],
  "<display-internal>": [
    "ruby-base",
    "ruby-base-container",
    "ruby-text",
    "ruby-text-container",
    "table-caption",
    "table-cell",
    "table-column",
    "table-column-group",
    "table-footer-group",
    "table-header-group",
    "table-row",
    "table-row-group"
  ],
  "<display-legacy>": [
    "inline-block",
    "inline-flex",
    "inline-grid",
    "inline-table"
  ],
  "<display-list-item>": [
    "list-item"
  ],
  "<display-outside>": [
    "block",
    "inline",
    "run-in"
  ],
  "<ending-shape>": [
    "circle",
    "ellipse"
  ],
  "<flex>": [
    "fr",
    "fr unit"
  ],
  "<frequency>": [
    "hz",
    "khz"
  ],
  "<generic-family>": [
    "cursive",
    "emoji",
    "fangsong",
    "fantasy",
    "math",
    "monospace",
    "sans-serif",
    "serif",
    "system-ui",
    "ui-monospace",
    "ui-rounded",
    "ui-sans-serif",
    "ui-serif",
    "xxx"
  ],
  "<geometry-box>": [
    "border-box",
    "content-box",
    "fill-box",
    "margin-box",
    "padding-box",
    "stroke-box",
    "svg viewport origin box",
    "view-box"
  ],
  "<grid-line>": [
    "<custom-ident>",
    "<integer> && <custom-ident>?",
    "[ <integer [âˆ’âˆž,âˆ’1]> | <integer [1,âˆž]> ] && <custom-ident>?",
    "auto",
    "span && [ <integer [1,âˆž]> || <custom-ident> ]",
    "span && [ <integer> || <custom-ident> ]"
  ],
  "<left>": [
    "auto"
  ],
  "<length>": [
    "advance measure",
    "cap",
    "ch",
    "cm",
    "dvb",
    "dvh",
    "dvi",
    "dvmax",
    "dvmin",
    "dvw",
    "em",
    "ex",
    "ic",
    "in",
    "lh",
    "lvb",
    "lvh",
    "lvi",
    "lvmax",
    "lvmin",
    "lvw",
    "mm",
    "pc",
    "pixel unit",
    "pt",
    "px",
    "q",
    "rcap",
    "rch",
    "rem",
    "rex",
    "ric",
    "rlh",
    "svb",
    "svh",
    "svi",
    "svmax",
    "svmin",
    "svw",
    "vb",
    "vh",
    "vi",
    "vmax",
    "vmin",
    "vw"
  ],
  "<line-style>": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "<line-width>": [
    "medium",
    "thick",
    "thin"
  ],
  "<overflow-position>": [
    "safe",
    "unsafe"
  ],
  "<padding-width>": [
    "<length>",
    "<percentage>"
  ],
  "<page-size>": [
    "a3",
    "a4",
    "a5",
    "b4",
    "b5",
    "jis-b4",
    "jis-b5",
    "ledger",
    "legal",
    "letter"
  ],
  "<paint>": [
    "none"
  ],
  "<quote>": [
    "close-quote",
    "no-close-quote",
    "no-open-quote",
    "open-quote"
  ],
  "<resolution>": [
    "dpcm",
    "dpi",
    "dppx",
    "x"
  ],
  "<right>": [
    "auto"
  ],
  "<rounding-strategy>": [
    "down",
    "nearest",
    "to-zero",
    "up"
  ],
  "<self-position>": [
    "center",
    "end",
    "flex-end",
    "flex-start",
    "self-end",
    "self-start",
    "start"
  ],
  "<shape-box>": [
    "border-box",
    "content-box",
    "fill-box",
    "margin-box",
    "padding-box",
    "stroke-box",
    "svg viewport origin box",
    "view-box"
  ],
  "<size>": [
    "<length [0,âˆž]>",
    "<length-percentage [0,âˆž]>{2}",
    "<length-percentage>{2}",
    "<length>",
    "closest-corner",
    "closest-side",
    "farthest-corner",
    "farthest-side",
    "sides"
  ],
  "<step-easing-function>": [
    "step-end",
    "step-start",
    "steps()"
  ],
  "<svg-paint>": [
    "child",
    "child(<integer>)"
  ],
  "<system-color>": [
    "accentcolor",
    "accentcolortext",
    "activetext",
    "buttonborder",
    "buttonface",
    "buttontext",
    "canvas",
    "canvastext",
    "field",
    "fieldtext",
    "graytext",
    "highlight",
    "highlighttext",
    "linktext",
    "mark",
    "marktext",
    "selecteditem",
    "selecteditemtext",
    "visitedtext"
  ],
  "<time>": [
    "ms",
    "s"
  ],
  "<top>": [
    "auto"
  ],
  "@color-profile": [
    "components",
    "rendering-intent",
    "src"
  ],
  "@color-profile/rendering-intent": [
    "absolute-colorimetric",
    "perceptual",
    "relative-colorimetric",
    "saturation"
  ],
  "@container": [
    "aspect-ratio",
    "block-size",
    "height",
    "inline-size",
    "orientation",
    "width"
  ],
  "@container/orientation": [
    "landscape",
    "portrait"
  ],
  "@counter-style": [
    "additive-symbols",
    "fallback",
    "negative",
    "pad",
    "prefix",
    "range",
    "speak-as",
    "suffix",
    "symbols",
    "system"
  ],
  "@counter-style/range": [
    "auto"
  ],
  "@counter-style/speak-as": [
    "<counter-style-name>",
    "auto",
    "bullets",
    "numbers",
    "spell-out",
    "words"
  ],
  "@counter-style/system": [
    "additive",
    "alphabetic",
    "cyclic",
    "extends",
    "fixed",
    "numeric"
  ],
  "@custom-media": [
    "false",
    "true"
  ],
  "@font-face": [
    "ascent-override",
    "descent-override",
    "font-display",
    "font-family",
    "font-feature-settings",
    "font-language-override",
    "font-named-instance",
    "font-size",
    "font-stretch",
    "font-style",
    "font-variation-settings",
    "font-weight",
    "line-gap-override",
    "size-adjust",
    "src",
    "subscript-position-override",
    "subscript-size-override",
    "superscript-position-override",
    "superscript-size-override",
    "unicode-range"
  ],
  "@font-face/font-display": [
    "auto",
    "block",
    "fallback",
    "optional",
    "swap"
  ],
  "@font-face/font-size": [
    "<number>",
    "auto"
  ],
  "@font-feature-values": [
    "font-display"
  ],
  "@font-palette-values": [
    "base-palette",
    "font-family",
    "override-colors"
  ],
  "@media": [
    "-webkit-device-pixel-ratio",
    "-webkit-max-device-pixel-ratio",
    "-webkit-min-device-pixel-ratio",
    "-webkit-transform-3d",
    "all",
    "any-hover",
    "any-pointer",
    "aspect-ratio",
    "aural",
    "braille",
    "color",
    "color-gamut",
    "color-index",
    "device-aspect-ratio",
    "device-height",
    "device-width",
    "display-mode",
    "dynamic-range",
    "embossed",
    "environment-blending",
    "forced-colors",
    "grid",
    "handheld",
    "height",
    "horizontal-viewport-segments",
    "hover",
    "inverted-colors",
    "monochrome",
    "nav-controls",
    "not",
    "only",
    "orientation",
    "overflow-block",
    "overflow-inline",
    "performance",
    "pointer",
    "prefers-color-scheme",
    "prefers-contrast",
    "prefers-reduced-data",
    "prefers-reduced-motion",
    "prefers-reduced-transparency",
    "print",
    "projection",
    "resolution",
    "scan",
    "screen",
    "scripting",
    "shape",
    "speech",
    "tty",
    "tv",
    "update",
    "vertical-viewport-segments",
    "video-color-gamut",
    "video-dynamic-range",
    "width"
  ],
  "@media/color-gamut": [
    "p3",
    "rec2020",
    "srgb"
  ],
  "@media/dynamic-range": [
    "high",
    "standard"
  ],
  "@media/environment-blending": [
    "additive",
    "opaque",
    "subtractive"
  ],
  "@media/forced-colors": [
    "active",
    "none"
  ],
  "@media/hover": [
    "hover",
    "none"
  ],
  "@media/inverted-colors": [
    "inverted",
    "none"
  ],
  "@media/nav-controls": [
    "back",
    "none"
  ],
  "@media/orientation": [
    "landscape",
    "portrait"
  ],
  "@media/overflow-block": [
    "none",
    "paged",
    "scroll"
  ],
  "@media/overflow-inline": [
    "none",
    "scroll"
  ],
  "@media/pointer": [
    "coarse",
    "fine",
    "none"
  ],
  "@media/prefers-color-scheme": [
    "dark",
    "light"
  ],
  "@media/prefers-contrast": [
    "custom",
    "less",
    "more",
    "no-preference"
  ],
  "@media/prefers-reduced-data": [
    "no-preference",
    "reduce"
  ],
  "@media/prefers-reduced-motion": [
    "no-preference",
    "reduce"
  ],
  "@media/prefers-reduced-transparency": [
    "no-preference",
    "reduce"
  ],
  "@media/resolution": [
    "infinite"
  ],
  "@media/scan": [
    "interlace",
    "progressive"
  ],
  "@media/scripting": [
    "enabled",
    "initial-only",
    "none"
  ],
  "@media/shape": [
    "rect",
    "round"
  ],
  "@media/update": [
    "fast",
    "none",
    "slow"
  ],
  "@page": [
    ":blank",
    ":first",
    ":left",
    ":right",
    "bleed",
    "marks",
    "page-orientation",
    "size"
  ],
  "@page/bleed": [
    "<length>",
    "auto"
  ],
  "@page/marks": [
    "crop",
    "cross",
    "none"
  ],
  "@page/size": [
    "<length>",
    "<page-size>",
    "auto",
    "landscape",
    "portrait"
  ],
  "@property": [
    "inherits",
    "initial-value",
    "syntax"
  ],
  "@scroll-timeline": [
    "orientation",
    "scroll-offsets",
    "source"
  ],
  "@scroll-timeline/source": [
    "auto",
    "none",
    "selector()"
  ],
  "@viewport": [
    "height",
    "max-height",
    "max-width",
    "max-zoom",
    "min-height",
    "min-width",
    "min-zoom",
    "orientation",
    "user-zoom",
    "viewport-fit",
    "width",
    "zoom"
  ],
  "AbortController": [
    "AbortController()",
    "abort()",
    "abort(reason)",
    "constructor()",
    "signal"
  ],
  "AbortController/abort()": [
    "reason"
  ],
  "AbortController/abort(reason)": [
    "reason"
  ],
  "AbortSignal": [
    "abort",
    "abort algorithms",
    "abort reason",
    "abort()",
    "abort(reason)",
    "aborted",
    "add",
    "follow",
    "onabort",
    "reason",
    "remove",
    "signal abort",
    "throwIfAborted()",
    "timeout(milliseconds)"
  ],
  "AbortSignal/abort()": [
    "reason"
  ],
  "AbortSignal/abort(reason)": [
    "reason"
  ],
  "AbortSignal/timeout(milliseconds)": [
    "milliseconds"
  ],
  "AbstractRange": [
    "collapsed",
    "endContainer",
    "endOffset",
    "startContainer",
    "startOffset"
  ],
  "AbstractWorker": [
    "error",
    "onerror"
  ],
  "AddEventListenerOptions": [
    "once",
    "passive",
    "signal"
  ],
  "AesCbcParams": [
    "iv"
  ],
  "AesCtrParams": [
    "counter",
    "length"
  ],
  "AesDerivedKeyParams": [
    "length"
  ],
  "AesGcmParams": [
    "additionalData",
    "iv",
    "tagLength"
  ],
  "AesKeyAlgorithm": [
    "length"
  ],
  "AesKeyGenParams": [
    "length"
  ],
  "Algorithm": [
    "name"
  ],
  "AllowedBluetoothDevice": [
    "[[device]]",
    "allowedManufacturerData",
    "allowedServices",
    "deviceId",
    "mayUseGATT"
  ],
  "AllowedUSBDevice": [
    "[[devices]]",
    "productId",
    "serialNumber",
    "vendorId"
  ],
  "AnalyserNode": [
    "AnalyserNode(context)",
    "AnalyserNode(context, options)",
    "constructor(context)",
    "constructor(context, options)",
    "fftSize",
    "frequencyBinCount",
    "getByteFrequencyData(array)",
    "getByteTimeDomainData(array)",
    "getFloatFrequencyData(array)",
    "getFloatTimeDomainData(array)",
    "maxDecibels",
    "minDecibels",
    "smoothingTimeConstant"
  ],
  "AnalyserNode/AnalyserNode(context)": [
    "context",
    "options"
  ],
  "AnalyserNode/AnalyserNode(context, options)": [
    "context",
    "options"
  ],
  "AnalyserNode/constructor()": [
    "context",
    "options"
  ],
  "AnalyserNode/constructor(context)": [
    "context",
    "options"
  ],
  "AnalyserNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "AnalyserNode/getByteFrequencyData()": [
    "array"
  ],
  "AnalyserNode/getByteFrequencyData(array)": [
    "array"
  ],
  "AnalyserNode/getByteTimeDomainData()": [
    "array"
  ],
  "AnalyserNode/getByteTimeDomainData(array)": [
    "array"
  ],
  "AnalyserNode/getFloatFrequencyData()": [
    "array"
  ],
  "AnalyserNode/getFloatFrequencyData(array)": [
    "array"
  ],
  "AnalyserNode/getFloatTimeDomainData()": [
    "array"
  ],
  "AnalyserNode/getFloatTimeDomainData(array)": [
    "array"
  ],
  "AnalyserOptions": [
    "fftSize",
    "maxDecibels",
    "minDecibels",
    "smoothingTimeConstant"
  ],
  "Animatable": [
    "animate(keyframes)",
    "animate(keyframes, options)",
    "getAnimations()",
    "getAnimations(options)"
  ],
  "Animatable/animate(keyframes, options)": [
    "keyframes",
    "options"
  ],
  "Animatable/getAnimations(options)": [
    "options"
  ],
  "Animation": [
    "Animation (effect, timeline)",
    "Animation()",
    "Animation(effect)",
    "Animation(effect, timeline)",
    "cancel()",
    "commitStyles()",
    "constructor()",
    "constructor(effect)",
    "constructor(effect, timeline)",
    "currentTime",
    "effect",
    "finish()",
    "finished",
    "id",
    "oncancel",
    "onfinish",
    "onremove",
    "pause()",
    "pending",
    "persist()",
    "play()",
    "playState",
    "playbackRate",
    "ready",
    "replaceState",
    "reverse()",
    "startTime",
    "timeline",
    "updatePlaybackRate(playbackRate)"
  ],
  "Animation/Animation(effect, timeline)": [
    "effect",
    "timeline"
  ],
  "Animation/updatePlaybackRate(playbackRate)": [
    "playbackRate"
  ],
  "AnimationEffect": [
    "after()",
    "after(...effects)",
    "before()",
    "before(...effects)",
    "getComputedTiming()",
    "getTiming()",
    "localTime",
    "nextSibling",
    "parent",
    "previousSibling",
    "remove()",
    "replace()",
    "replace(...effects)",
    "undefined after(AnimationEffect... effects)",
    "undefined before (AnimationEffect... effects)",
    "undefined replace(AnimationEffect... effects)",
    "updateTiming()",
    "updateTiming(timing)"
  ],
  "AnimationEffect/after()": [
    "effects"
  ],
  "AnimationEffect/after(...effects)": [
    "effects"
  ],
  "AnimationEffect/before()": [
    "effects"
  ],
  "AnimationEffect/before(...effects)": [
    "effects"
  ],
  "AnimationEffect/replace()": [
    "effects"
  ],
  "AnimationEffect/replace(...effects)": [
    "effects"
  ],
  "AnimationEffect/updateTiming(timing)": [
    "timing"
  ],
  "AnimationEvent": [
    "AnimationEvent(type)",
    "AnimationEvent(type, animationEventInitDict)",
    "Constructor",
    "animationName",
    "constructor",
    "constructor(type)",
    "constructor(type, animationEventInitDict)",
    "elapsedTime",
    "pseudoElement"
  ],
  "AnimationEvent/AnimationEvent(type)": [
    "animationEventInitDict",
    "type"
  ],
  "AnimationEvent/AnimationEvent(type, animationEventInitDict)": [
    "animationEventInitDict",
    "type"
  ],
  "AnimationEvent/constructor(type)": [
    "animationEventInitDict",
    "type"
  ],
  "AnimationEvent/constructor(type, animationEventInitDict)": [
    "animationEventInitDict",
    "type"
  ],
  "AnimationEventInit": [
    "animationName",
    "elapsedTime",
    "pseudoElement"
  ],
  "AnimationFrameProvider": [
    "cancelAnimationFrame(handle)",
    "requestAnimationFrame(callback)"
  ],
  "AnimationNodeList": [
    "getter AnimationEffect? item(unsigned long index)",
    "item(index)",
    "length"
  ],
  "AnimationNodeList/item(index)": [
    "index"
  ],
  "AnimationPlayState": [
    "\"finished\"",
    "\"idle\"",
    "\"paused\"",
    "\"running\""
  ],
  "AnimationPlaybackEvent": [
    "AnimationPlaybackEvent(type)",
    "AnimationPlaybackEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "currentTime",
    "timelineTime"
  ],
  "AnimationPlaybackEvent/AnimationPlaybackEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "AnimationPlaybackEvent/AnimationPlaybackEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "AnimationPlaybackEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "AnimationPlaybackEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "AnimationPlaybackEventInit": [
    "currentTime",
    "timelineTime"
  ],
  "AnimationReplaceState": [
    "\"active\"",
    "\"persisted\"",
    "\"removed\""
  ],
  "AnimationTimeline": [
    "Animation play(optional AnimationEffect? effect = null)",
    "currentTime",
    "duration",
    "phase",
    "play()",
    "play(effect)"
  ],
  "AnimationTimeline/play(effect)": [
    "effect"
  ],
  "AnimationWorkletGlobalScope": [
    "registerAnimator(name, animatorCtor)"
  ],
  "AnimationWorkletGlobalScope/registerAnimator(name, animatorCtor)": [
    "animatorCtor",
    "name"
  ],
  "AnimatorInstanceConstructor": [
    "options",
    "state"
  ],
  "ArrayBuffer": [
    "create",
    "detach",
    "transfer",
    "write"
  ],
  "ArrayBuffer/write": [
    "startingoffset"
  ],
  "ArrayBufferView": [
    "create",
    "write"
  ],
  "ArrayBufferView/write": [
    "startingoffset"
  ],
  "AssignedNodeOptions": [
    "flatten"
  ],
  "AttestationConveyancePreference": [
    "\"direct\"",
    "\"enterprise\"",
    "\"indirect\"",
    "\"none\"",
    "direct",
    "enterprise",
    "indirect",
    "none"
  ],
  "Attr": [
    "element",
    "isId",
    "local name",
    "localName",
    "name",
    "namespace",
    "namespace prefix",
    "namespaceURI",
    "ownerElement",
    "prefix",
    "qualified name",
    "reflect",
    "schemaTypeInfo",
    "specified",
    "value"
  ],
  "AudioBuffer": [
    "AudioBuffer(options)",
    "[[internal data]]",
    "[[length]]",
    "[[number of channels]]",
    "[[sample rate]]",
    "constructor(options)",
    "copyFromChannel(destination, channelNumber)",
    "copyFromChannel(destination, channelNumber, bufferOffset)",
    "copyToChannel(source, channelNumber)",
    "copyToChannel(source, channelNumber, bufferOffset)",
    "duration",
    "getChannelData(channel)",
    "length",
    "numberOfChannels",
    "sampleRate"
  ],
  "AudioBuffer/AudioBuffer(options)": [
    "options"
  ],
  "AudioBuffer/constructor()": [
    "options"
  ],
  "AudioBuffer/constructor(options)": [
    "options"
  ],
  "AudioBuffer/copyFromChannel()": [
    "bufferOffset",
    "channelNumber",
    "destination"
  ],
  "AudioBuffer/copyFromChannel(destination, channelNumber)": [
    "bufferOffset",
    "channelNumber",
    "destination"
  ],
  "AudioBuffer/copyFromChannel(destination, channelNumber, bufferOffset)": [
    "bufferOffset",
    "channelNumber",
    "destination"
  ],
  "AudioBuffer/copyToChannel()": [
    "bufferOffset",
    "channelNumber",
    "source"
  ],
  "AudioBuffer/copyToChannel(source, channelNumber)": [
    "bufferOffset",
    "channelNumber",
    "source"
  ],
  "AudioBuffer/copyToChannel(source, channelNumber, bufferOffset)": [
    "bufferOffset",
    "channelNumber",
    "source"
  ],
  "AudioBuffer/getChannelData()": [
    "channel"
  ],
  "AudioBuffer/getChannelData(channel)": [
    "channel"
  ],
  "AudioBufferOptions": [
    "length",
    "numberOfChannels",
    "sampleRate"
  ],
  "AudioBufferSourceNode": [
    "AudioBufferSourceNode(context)",
    "AudioBufferSourceNode(context, options)",
    "[[buffer set]]",
    "buffer",
    "constructor",
    "constructor(context)",
    "constructor(context, options)",
    "detune",
    "loop",
    "loopEnd",
    "loopStart",
    "playbackRate",
    "start()",
    "start(when)",
    "start(when, offset)",
    "start(when, offset, duration)"
  ],
  "AudioBufferSourceNode/AudioBufferSourceNode(context)": [
    "context",
    "options"
  ],
  "AudioBufferSourceNode/AudioBufferSourceNode(context, options)": [
    "context",
    "options"
  ],
  "AudioBufferSourceNode/constructor": [
    "AudioBufferSourceNode(context, options)"
  ],
  "AudioBufferSourceNode/constructor()": [
    "context",
    "options"
  ],
  "AudioBufferSourceNode/constructor(context)": [
    "context",
    "options"
  ],
  "AudioBufferSourceNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "AudioBufferSourceNode/start(when, offset, duration)": [
    "duration",
    "offset",
    "when"
  ],
  "AudioBufferSourceOptions": [
    "buffer",
    "detune",
    "loop",
    "loopEnd",
    "loopStart",
    "playbackRate"
  ],
  "AudioContext": [
    "AudioContext()",
    "AudioContext(contextOptions)",
    "[[pending resume promises]]",
    "[[suspended by user]]",
    "baseLatency",
    "close()",
    "constructor()",
    "constructor(contextOptions)",
    "createMediaElementSource(mediaElement)",
    "createMediaStreamDestination()",
    "createMediaStreamSource(mediaStream)",
    "createMediaStreamTrackSource(mediaStreamTrack)",
    "getOutputTimestamp()",
    "outputLatency",
    "renderCapacity",
    "resume()",
    "suspend()"
  ],
  "AudioContext/constructor(contextOptions)": [
    "contextOptions"
  ],
  "AudioContext/createMediaElementSource()": [
    "mediaElement"
  ],
  "AudioContext/createMediaElementSource(mediaElement)": [
    "mediaElement"
  ],
  "AudioContext/createMediaStreamSource()": [
    "mediaStream"
  ],
  "AudioContext/createMediaStreamSource(mediaStream)": [
    "mediaStream"
  ],
  "AudioContext/createMediaStreamTrackSource()": [
    "mediaStreamTrack"
  ],
  "AudioContext/createMediaStreamTrackSource(mediaStreamTrack)": [
    "mediaStreamTrack"
  ],
  "AudioContextLatencyCategory": [
    "\"balanced\"",
    "\"interactive\"",
    "\"playback\"",
    "balanced",
    "interactive",
    "playback"
  ],
  "AudioContextOptions": [
    "latencyHint",
    "sampleRate"
  ],
  "AudioContextState": [
    "\"closed\"",
    "\"running\"",
    "\"suspended\"",
    "closed",
    "running",
    "suspended"
  ],
  "AudioDestinationNode": [
    "maxChannelCount"
  ],
  "AudioListener": [
    "forward",
    "forwardX",
    "forwardY",
    "forwardZ",
    "positionX",
    "positionY",
    "positionZ",
    "setOrientation(x, y, z, xUp, yUp, zUp)",
    "setPosition(x, y, z)",
    "up",
    "upX",
    "upY",
    "upZ"
  ],
  "AudioListener/setOrientation()": [
    "x",
    "xUp",
    "y",
    "yUp",
    "z",
    "zUp"
  ],
  "AudioListener/setOrientation(x, y, z, xUp, yUp, zUp)": [
    "x",
    "xUp",
    "y",
    "yUp",
    "z",
    "zUp"
  ],
  "AudioListener/setPosition()": [
    "x",
    "y",
    "z"
  ],
  "AudioListener/setPosition(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "AudioNode": [
    "channelCount",
    "channelCountMode",
    "channelInterpretation",
    "channelcount constraints",
    "channelcountmode constraints",
    "channelinterpretation constraints",
    "connect(destinationNode)",
    "connect(destinationNode, output)",
    "connect(destinationNode, output, input)",
    "connect(destinationParam)",
    "connect(destinationParam, output)",
    "context",
    "disconnect()",
    "disconnect(destinationNode)",
    "disconnect(destinationNode, output)",
    "disconnect(destinationNode, output, input)",
    "disconnect(destinationParam)",
    "disconnect(destinationParam, output)",
    "disconnect(output)",
    "numberOfInputs",
    "numberOfOutputs",
    "source nodes"
  ],
  "AudioNode/connect(destinationNode, output, input)": [
    "destinationNode",
    "input",
    "output"
  ],
  "AudioNode/connect(destinationParam, output)": [
    "destinationParam",
    "output"
  ],
  "AudioNode/disconnect(destinationNode)": [
    "destinationNode"
  ],
  "AudioNode/disconnect(destinationNode, output)": [
    "destinationNode",
    "output"
  ],
  "AudioNode/disconnect(destinationNode, output, input)": [
    "destinationNode",
    "input",
    "output"
  ],
  "AudioNode/disconnect(destinationParam)": [
    "destinationParam"
  ],
  "AudioNode/disconnect(destinationParam, output)": [
    "destinationParam",
    "output"
  ],
  "AudioNode/disconnect(output)": [
    "output"
  ],
  "AudioNodeOptions": [
    "channelCount",
    "channelCountMode",
    "channelInterpretation"
  ],
  "AudioParam": [
    "[[current value]]",
    "automation rate constraints",
    "automationRate",
    "cancelAndHoldAtTime(cancelTime)",
    "cancelScheduledValues(cancelTime)",
    "defaultValue",
    "exponentialRampToValueAtTime(value, endTime)",
    "linearRampToValueAtTime(value, endTime)",
    "maxValue",
    "minValue",
    "setTargetAtTime(target, startTime, timeConstant)",
    "setValueAtTime(value, startTime)",
    "setValueCurveAtTime(values, startTime, duration)",
    "value"
  ],
  "AudioParam/cancelAndHoldAtTime()": [
    "cancelTime"
  ],
  "AudioParam/cancelAndHoldAtTime(cancelTime)": [
    "cancelTime"
  ],
  "AudioParam/cancelScheduledValues()": [
    "cancelTime"
  ],
  "AudioParam/cancelScheduledValues(cancelTime)": [
    "cancelTime"
  ],
  "AudioParam/exponentialRampToValueAtTime()": [
    "endTime",
    "value"
  ],
  "AudioParam/exponentialRampToValueAtTime(value, endTime)": [
    "endTime",
    "value"
  ],
  "AudioParam/linearRampToValueAtTime()": [
    "endTime",
    "value"
  ],
  "AudioParam/linearRampToValueAtTime(value, endTime)": [
    "endTime",
    "value"
  ],
  "AudioParam/setTargetAtTime()": [
    "startTime",
    "target",
    "timeConstant"
  ],
  "AudioParam/setTargetAtTime(target, startTime, timeConstant)": [
    "startTime",
    "target",
    "timeConstant"
  ],
  "AudioParam/setValueAtTime()": [
    "startTime",
    "value"
  ],
  "AudioParam/setValueAtTime(value, startTime)": [
    "startTime",
    "value"
  ],
  "AudioParam/setValueCurveAtTime()": [
    "duration",
    "startTime",
    "values"
  ],
  "AudioParam/setValueCurveAtTime(values, startTime, duration)": [
    "duration",
    "startTime",
    "values"
  ],
  "AudioParamDescriptor": [
    "automationRate",
    "defaultValue",
    "maxValue",
    "minValue",
    "name"
  ],
  "AudioProcessingEvent": [
    "AudioProcessingEvent(type, eventInitDict)",
    "constructor",
    "constructor(type, eventInitDict)",
    "inputBuffer",
    "outputBuffer",
    "playbackTime"
  ],
  "AudioProcessingEvent/AudioProcessingEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "AudioProcessingEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "AudioProcessingEventInit": [
    "inputBuffer",
    "outputBuffer",
    "playbackTime"
  ],
  "AudioRenderCapacity": [
    "onupdate",
    "start()",
    "start(options)",
    "stop()"
  ],
  "AudioRenderCapacity/start()": [
    "options"
  ],
  "AudioRenderCapacity/start(options)": [
    "options"
  ],
  "AudioRenderCapacityEvent": [
    "AudioRenderCapacityEvent(type)",
    "AudioRenderCapacityEvent(type, eventInitDict)",
    "averageLoad",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "peakLoad",
    "timestamp",
    "underrunRatio"
  ],
  "AudioRenderCapacityEvent/AudioRenderCapacityEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "AudioRenderCapacityEvent/AudioRenderCapacityEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "AudioRenderCapacityEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "AudioRenderCapacityEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "AudioRenderCapacityEventInit": [
    "averageLoad",
    "peakLoad",
    "timestamp",
    "underrunRatio"
  ],
  "AudioRenderCapacityOptions": [
    "updateInterval"
  ],
  "AudioScheduledSourceNode": [
    "[[source started]]",
    "onended",
    "start()",
    "start(when)",
    "stop()",
    "stop(when)"
  ],
  "AudioScheduledSourceNode/start(when)": [
    "when"
  ],
  "AudioScheduledSourceNode/stop(when)": [
    "when"
  ],
  "AudioTimestamp": [
    "contextTime",
    "performanceTime"
  ],
  "AudioTrack": [
    "enabled",
    "id",
    "kind",
    "label",
    "language"
  ],
  "AudioTrackList": [
    "addtrack",
    "change",
    "getTrackById(id)",
    "length",
    "onaddtrack",
    "onchange",
    "onremovetrack",
    "removetrack"
  ],
  "AudioWorkletGlobalScope": [
    "currentFrame",
    "currentTime",
    "registerProcessor(name, processorCtor)",
    "sampleRate"
  ],
  "AudioWorkletGlobalScope/registerProcessor(name, processorCtor)": [
    "name",
    "processorCtor"
  ],
  "AudioWorkletNode": [
    "AudioWorkletNode(context, name)",
    "AudioWorkletNode(context, name, options)",
    "constructor(context, name)",
    "constructor(context, name, options)",
    "onprocessorerror",
    "parameters",
    "port"
  ],
  "AudioWorkletNode/AudioWorkletNode(context, name)": [
    "context",
    "name",
    "options"
  ],
  "AudioWorkletNode/AudioWorkletNode(context, name, options)": [
    "context",
    "name",
    "options"
  ],
  "AudioWorkletNode/constructor()": [
    "context",
    "name",
    "options"
  ],
  "AudioWorkletNode/constructor(context, name)": [
    "context",
    "name",
    "options"
  ],
  "AudioWorkletNode/constructor(context, name, options)": [
    "context",
    "name",
    "options"
  ],
  "AudioWorkletNodeOptions": [
    "numberOfInputs",
    "numberOfOutputs",
    "outputChannelCount",
    "parameterData",
    "processorOptions"
  ],
  "AudioWorkletProcessCallback": [
    "inputs",
    "outputs",
    "parameters"
  ],
  "AudioWorkletProcessor": [
    "AudioWorkletProcessor()",
    "[[callable process]]",
    "[[node reference]]",
    "constructor()",
    "port"
  ],
  "AudioWorkletProcessorConstructor": [
    "options"
  ],
  "AuthenticationExtensionsClientInputs": [
    "appid",
    "appidExclude",
    "credProps",
    "largeBlob",
    "uvm"
  ],
  "AuthenticationExtensionsClientOutputs": [
    "appid",
    "appidExclude",
    "credProps",
    "largeBlob",
    "uvm"
  ],
  "AuthenticationExtensionsLargeBlobInputs": [
    "read",
    "support",
    "write"
  ],
  "AuthenticationExtensionsLargeBlobOutputs": [
    "blob",
    "supported",
    "written"
  ],
  "AuthenticationResponseJSON": [
    "authenticatorAttachment",
    "clientExtensionResults",
    "id",
    "rawId",
    "response",
    "type"
  ],
  "AuthenticatorAssertionResponse": [
    "authenticatorData",
    "signature",
    "userHandle"
  ],
  "AuthenticatorAssertionResponseJSON": [
    "authenticatorData",
    "clientDataJSON",
    "signature",
    "userHandle"
  ],
  "AuthenticatorAttachment": [
    "\"cross-platform\"",
    "\"platform\"",
    "cross-platform",
    "platform"
  ],
  "AuthenticatorAttestationResponse": [
    "[[transports]]",
    "attestationObject",
    "getAuthenticatorData",
    "getAuthenticatorData()",
    "getPublicKey",
    "getPublicKey()",
    "getPublicKeyAlgorithm",
    "getPublicKeyAlgorithm()",
    "getTransports",
    "getTransports()"
  ],
  "AuthenticatorAttestationResponseJSON": [
    "attestationObject",
    "clientDataJSON",
    "transports"
  ],
  "AuthenticatorResponse": [
    "clientDataJSON"
  ],
  "AuthenticatorSelectionCriteria": [
    "authenticatorAttachment",
    "requireResidentKey",
    "residentKey",
    "userVerification"
  ],
  "AuthenticatorTransport": [
    "\"ble\"",
    "\"internal\"",
    "\"nfc\"",
    "\"usb\"",
    "ble",
    "internal",
    "nfc",
    "usb"
  ],
  "AutomationRate": [
    "\"a-rate\"",
    "\"k-rate\"",
    "a-rate",
    "k-rate"
  ],
  "BarProp": [
    "visible"
  ],
  "BaseAudioContext": [
    "[[control thread state]]",
    "[[current frame]]",
    "[[pending promises]]",
    "[[rendering thread state]]",
    "associated task queue",
    "audioWorklet",
    "createAnalyser()",
    "createBiquadFilter()",
    "createBuffer(numberOfChannels, length, sampleRate)",
    "createBufferSource()",
    "createChannelMerger()",
    "createChannelMerger(numberOfInputs)",
    "createChannelSplitter()",
    "createChannelSplitter(numberOfOutputs)",
    "createConstantSource()",
    "createConvolver()",
    "createDelay()",
    "createDelay(maxDelayTime)",
    "createDynamicsCompressor()",
    "createGain()",
    "createIIRFilter(feedforward, feedback)",
    "createOscillator()",
    "createPanner()",
    "createPeriodicWave(real, imag)",
    "createPeriodicWave(real, imag, constraints)",
    "createScriptProcessor()",
    "createScriptProcessor(bufferSize)",
    "createScriptProcessor(bufferSize, numberOfInputChannels)",
    "createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels)",
    "createStereoPanner()",
    "createWaveShaper()",
    "currentTime",
    "decodeAudioData(audioData)",
    "decodeAudioData(audioData, successCallback)",
    "decodeAudioData(audioData, successCallback, errorCallback)",
    "decoding thread",
    "destination",
    "listener",
    "onstatechange",
    "sampleRate",
    "state"
  ],
  "BaseAudioContext/createBuffer()": [
    "length",
    "numberOfChannels",
    "sampleRate"
  ],
  "BaseAudioContext/createBuffer(numberOfChannels, length, sampleRate)": [
    "length",
    "numberOfChannels",
    "sampleRate"
  ],
  "BaseAudioContext/createChannelMerger(numberOfInputs)": [
    "numberOfInputs"
  ],
  "BaseAudioContext/createChannelSplitter(numberOfOutputs)": [
    "numberOfOutputs"
  ],
  "BaseAudioContext/createDelay(maxDelayTime)": [
    "maxDelayTime"
  ],
  "BaseAudioContext/createIIRFilter()": [
    "feedback",
    "feedforward"
  ],
  "BaseAudioContext/createIIRFilter(feedforward, feedback)": [
    "feedback",
    "feedforward"
  ],
  "BaseAudioContext/createPeriodicWave()": [
    "constraints",
    "imag",
    "real"
  ],
  "BaseAudioContext/createPeriodicWave(real, imag)": [
    "constraints",
    "imag",
    "real"
  ],
  "BaseAudioContext/createPeriodicWave(real, imag, constraints)": [
    "constraints",
    "imag",
    "real"
  ],
  "BaseAudioContext/createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels)": [
    "bufferSize",
    "numberOfInputChannels",
    "numberOfOutputChannels"
  ],
  "BaseAudioContext/decodeAudioData()": [
    "audioData",
    "errorCallback",
    "successCallback"
  ],
  "BaseAudioContext/decodeAudioData(audioData)": [
    "audioData",
    "errorCallback",
    "successCallback"
  ],
  "BaseAudioContext/decodeAudioData(audioData, successCallback)": [
    "audioData",
    "errorCallback",
    "successCallback"
  ],
  "BaseAudioContext/decodeAudioData(audioData, successCallback, errorCallback)": [
    "audioData",
    "errorCallback",
    "successCallback"
  ],
  "BaseComputedKeyframe": [
    "composite",
    "computedOffset",
    "easing",
    "offset"
  ],
  "BaseKeyframe": [
    "composite",
    "easing",
    "offset"
  ],
  "BasePropertyIndexedKeyframe": [
    "composite",
    "easing",
    "offset"
  ],
  "Baseline": [
    "name",
    "value"
  ],
  "BeforeUnloadEvent": [
    "returnValue"
  ],
  "BinaryType": [
    "\"arraybuffer\"",
    "\"blob\""
  ],
  "BiquadFilterNode": [
    "BiquadFilterNode(context)",
    "BiquadFilterNode(context, options)",
    "Q",
    "constructor",
    "constructor(context)",
    "constructor(context, options)",
    "detune",
    "frequency",
    "gain",
    "getFrequencyResponse(frequencyHz, magResponse, phaseResponse)",
    "type"
  ],
  "BiquadFilterNode/BiquadFilterNode(context)": [
    "context",
    "options"
  ],
  "BiquadFilterNode/BiquadFilterNode(context, options)": [
    "context",
    "options"
  ],
  "BiquadFilterNode/constructor()": [
    "context",
    "options"
  ],
  "BiquadFilterNode/constructor(context)": [
    "context",
    "options"
  ],
  "BiquadFilterNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "BiquadFilterNode/getFrequencyResponse()": [
    "frequencyHz",
    "magResponse",
    "phaseResponse"
  ],
  "BiquadFilterNode/getFrequencyResponse(frequencyHz, magResponse, phaseResponse)": [
    "frequencyHz",
    "magResponse",
    "phaseResponse"
  ],
  "BiquadFilterOptions": [
    "Q",
    "detune",
    "frequency",
    "gain",
    "type"
  ],
  "BiquadFilterType": [
    "\"allpass\"",
    "\"bandpass\"",
    "\"highpass\"",
    "\"highshelf\"",
    "\"lowpass\"",
    "\"lowshelf\"",
    "\"notch\"",
    "\"peaking\"",
    "allpass",
    "bandpass",
    "highpass",
    "highshelf",
    "lowpass",
    "lowshelf",
    "notch",
    "peaking"
  ],
  "Blob": [
    "Blob()",
    "Blob(blobParts)",
    "Blob(blobParts, options)",
    "arrayBuffer()",
    "constructor",
    "constructor()",
    "constructor(blobParts)",
    "constructor(blobParts, options)",
    "get stream",
    "package data",
    "size",
    "slice()",
    "slice(start)",
    "slice(start, end)",
    "slice(start, end, contentType)",
    "slice(start, end, contentType), slice(start, end), slice(start), slice()",
    "snapshot state",
    "stream()",
    "text()",
    "type"
  ],
  "Blob/Blob()": [
    "options"
  ],
  "Blob/Blob(blobParts)": [
    "options"
  ],
  "Blob/Blob(blobParts, options)": [
    "blobParts",
    "options"
  ],
  "Blob/constructor()": [
    "options"
  ],
  "Blob/constructor(blobParts)": [
    "options"
  ],
  "Blob/constructor(blobParts, options)": [
    "options"
  ],
  "Blob/slice(start, end, contentType)": [
    "contentType",
    "end",
    "start"
  ],
  "BlobPropertyBag": [
    "endings",
    "type"
  ],
  "BlockFragmentationType": [
    "\"column\"",
    "\"none\"",
    "\"page\"",
    "\"region\"",
    "column",
    "none",
    "page",
    "region"
  ],
  "Bluetooth": [
    "[[attributeInstanceMap]]",
    "[[deviceInstanceMap]]",
    "[[referringDevice]]",
    "availabilitychanged",
    "getAvailability()",
    "getDevices()",
    "onavailabilitychanged",
    "referringDevice",
    "requestDevice()",
    "requestDevice(options)"
  ],
  "Bluetooth cache": [
    "bluetooth cache"
  ],
  "Bluetooth tree": [
    "bluetooth tree"
  ],
  "Bluetooth/requestDevice()": [
    "options"
  ],
  "Bluetooth/requestDevice(options)": [
    "options"
  ],
  "BluetoothAdvertisingEvent": [
    "BluetoothAdvertisingEvent(type, init)",
    "appearance",
    "constructor(type, init)",
    "device",
    "manufacturerData",
    "name",
    "rssi",
    "serviceData",
    "txPower",
    "uuids"
  ],
  "BluetoothAdvertisingEvent/BluetoothAdvertisingEvent(type, init)": [
    "init",
    "type"
  ],
  "BluetoothAdvertisingEvent/constructor(type, init)": [
    "init",
    "type"
  ],
  "BluetoothAdvertisingEventInit": [
    "appearance",
    "device",
    "manufacturerData",
    "name",
    "rssi",
    "serviceData",
    "txPower",
    "uuids"
  ],
  "BluetoothCharacteristicProperties": [
    "authenticatedSignedWrites",
    "broadcast",
    "indicate",
    "notify",
    "read",
    "reliableWrite",
    "writableAuxiliaries",
    "write",
    "writeWithoutResponse"
  ],
  "BluetoothDataFilterInit": [
    "canonicalizing",
    "dataPrefix",
    "mask",
    "matches"
  ],
  "BluetoothDevice": [
    "[[allowedManufacturerData]]",
    "[[allowedServices]]",
    "[[context]]",
    "[[gatt]]",
    "[[representedDevice]]",
    "[[watchAdvertisementsState]]",
    "forget()",
    "gatt",
    "id",
    "name",
    "watchAdvertisements()",
    "watchAdvertisements(options)",
    "watchingAdvertisements"
  ],
  "BluetoothDevice/watchAdvertisements()": [
    "options"
  ],
  "BluetoothDevice/watchAdvertisements(options)": [
    "options"
  ],
  "BluetoothDeviceEventHandlers": [
    "advertisementreceived",
    "gattserverdisconnected",
    "onadvertisementreceived",
    "ongattserverdisconnected"
  ],
  "BluetoothLEScanFilterInit": [
    "canonicalizing",
    "manufacturerData",
    "name",
    "namePrefix",
    "serviceData",
    "services"
  ],
  "BluetoothManufacturerDataFilterInit": [
    "companyIdentifier"
  ],
  "BluetoothManufacturerDataMap": [
    "[[BackingMap]]"
  ],
  "BluetoothPermissionDescriptor": [
    "acceptAllDevices",
    "deviceId",
    "filters",
    "optionalManufacturerData",
    "optionalServices"
  ],
  "BluetoothPermissionResult": [
    "devices"
  ],
  "BluetoothPermissionStorage": [
    "allowedDevices"
  ],
  "BluetoothRemoteGATTCharacteristic": [
    "[[representedCharacteristic]]",
    "characteristicvaluechanged",
    "getDescriptor(descriptor)",
    "getDescriptors()",
    "getDescriptors(descriptor)",
    "properties",
    "readValue()",
    "service",
    "startNotifications()",
    "stopNotifications()",
    "uuid",
    "value",
    "writeValue(value)",
    "writeValueWithResponse(value)",
    "writeValueWithoutResponse(value)"
  ],
  "BluetoothRemoteGATTCharacteristic/getDescriptor(descriptor)": [
    "descriptor"
  ],
  "BluetoothRemoteGATTCharacteristic/getDescriptors()": [
    "descriptor"
  ],
  "BluetoothRemoteGATTCharacteristic/getDescriptors(descriptor)": [
    "descriptor"
  ],
  "BluetoothRemoteGATTCharacteristic/writeValue(value)": [
    "value"
  ],
  "BluetoothRemoteGATTCharacteristic/writeValueWithResponse(value)": [
    "value"
  ],
  "BluetoothRemoteGATTCharacteristic/writeValueWithoutResponse(value)": [
    "value"
  ],
  "BluetoothRemoteGATTDescriptor": [
    "[[representedDescriptor]]",
    "characteristic",
    "readValue()",
    "uuid",
    "value",
    "writeValue(value)"
  ],
  "BluetoothRemoteGATTDescriptor/writeValue(value)": [
    "value"
  ],
  "BluetoothRemoteGATTServer": [
    "[[activeAlgorithms]]",
    "connect()",
    "connected",
    "device",
    "disconnect()",
    "getPrimaryService(service)",
    "getPrimaryServices()",
    "getPrimaryServices(service)"
  ],
  "BluetoothRemoteGATTServer/getPrimaryService(service)": [
    "service"
  ],
  "BluetoothRemoteGATTServer/getPrimaryServices()": [
    "service"
  ],
  "BluetoothRemoteGATTServer/getPrimaryServices(service)": [
    "service"
  ],
  "BluetoothRemoteGATTService": [
    "[[representedService]]",
    "device",
    "getCharacteristic(characteristic)",
    "getCharacteristics()",
    "getCharacteristics(characteristic)",
    "getIncludedService(service)",
    "getIncludedServices()",
    "getIncludedServices(service)",
    "isPrimary",
    "serviceadded",
    "servicechanged",
    "serviceremoved",
    "uuid"
  ],
  "BluetoothRemoteGATTService/getCharacteristic(characteristic)": [
    "characteristic"
  ],
  "BluetoothRemoteGATTService/getCharacteristics()": [
    "characteristic"
  ],
  "BluetoothRemoteGATTService/getCharacteristics(characteristic)": [
    "characteristic"
  ],
  "BluetoothRemoteGATTService/getIncludedService(service)": [
    "service"
  ],
  "BluetoothRemoteGATTService/getIncludedServices()": [
    "service"
  ],
  "BluetoothRemoteGATTService/getIncludedServices(service)": [
    "service"
  ],
  "BluetoothServiceDataFilterInit": [
    "service"
  ],
  "BluetoothServiceDataMap": [
    "[[BackingMap]]"
  ],
  "BluetoothUUID": [
    "canonicalUUID(alias)",
    "getCharacteristic(name)",
    "getDescriptor(name)",
    "getService(name)"
  ],
  "BluetoothUUID/canonicalUUID(alias)": [
    "alias"
  ],
  "BluetoothUUID/getCharacteristic(name)": [
    "name"
  ],
  "BluetoothUUID/getDescriptor(name)": [
    "name"
  ],
  "BluetoothUUID/getService(name)": [
    "name"
  ],
  "Body": [
    "arrayBuffer()",
    "blob()",
    "body",
    "bodyUsed",
    "consume body",
    "formData()",
    "json()",
    "mime type",
    "package data",
    "text()",
    "unusable"
  ],
  "BodyInit": [
    "extract",
    "safely extract"
  ],
  "BodyInit/extract": [
    "keepalive"
  ],
  "BoxQuadOptions": [
    "box",
    "relativeTo"
  ],
  "BreakToken": [
    "childBreakTokens",
    "data"
  ],
  "BreakTokenOptions": [
    "childBreakTokens",
    "data"
  ],
  "BreakType": [
    "\"column\"",
    "\"line\"",
    "\"none\"",
    "\"page\"",
    "\"region\"",
    "column",
    "line",
    "none",
    "page",
    "region"
  ],
  "BroadcastChannel": [
    "close()",
    "message",
    "messageerror",
    "name",
    "onmessage",
    "onmessageerror",
    "postMessage(message)"
  ],
  "BufferSource": [
    "byte length",
    "detached",
    "underlying buffer"
  ],
  "ByteLengthQueuingStrategy": [
    "ByteLengthQueuingStrategy(init)",
    "[[highwatermark]]",
    "constructor(init)",
    "highWaterMark",
    "size"
  ],
  "ByteLengthQueuingStrategy/ByteLengthQueuingStrategy(init)": [
    "init"
  ],
  "ByteLengthQueuingStrategy/constructor(init)": [
    "init"
  ],
  "CSPViolationReportBody": [
    "blockedURL",
    "columnNumber",
    "disposition",
    "documentURL",
    "effectiveDirective",
    "lineNumber",
    "originalPolicy",
    "referrer",
    "sample",
    "sourceFile",
    "statusCode",
    "toJSON",
    "toJSON()"
  ],
  "CSS": [
    "()-block",
    "Hz",
    "Hz(value)",
    "Q",
    "Q(value)",
    "[]-block",
    "ambiguous image url",
    "animationWorklet",
    "anonymous",
    "anonymous box",
    "apply to",
    "box",
    "box tree",
    "ch",
    "ch(value)",
    "cm",
    "cm(value)",
    "component value",
    "cqb",
    "cqb(value)",
    "cqh",
    "cqh(value)",
    "cqi",
    "cqi(value)",
    "cqmax",
    "cqmax(value)",
    "cqmin",
    "cqmin(value)",
    "cqw",
    "cqw(value)",
    "css ident",
    "css identifier",
    "declaration",
    "decode bytes",
    "deg",
    "deg(value)",
    "descriptor",
    "descriptor declarations",
    "dpcm",
    "dpcm(value)",
    "dpi",
    "dpi(value)",
    "dppx",
    "dppx(value)",
    "dvb",
    "dvb(value)",
    "dvh",
    "dvh(value)",
    "dvi",
    "dvi(value)",
    "dvmax",
    "dvmax(value)",
    "dvmin",
    "dvmin(value)",
    "dvw",
    "dvw(value)",
    "element",
    "element tree",
    "elementSources",
    "em",
    "em(value)",
    "end",
    "environment variable",
    "escape(ident)",
    "ex",
    "ex(value)",
    "filter code points",
    "filtered code points",
    "fr",
    "fr(value)",
    "function",
    "grad",
    "grad(value)",
    "highlights",
    "ic",
    "ic(value)",
    "ident",
    "identifier",
    "in",
    "in(value)",
    "internal representation",
    "kHz",
    "kHz(value)",
    "keyword",
    "layoutWorklet",
    "legacy value alias",
    "lh",
    "lh(value)",
    "lvb",
    "lvb(value)",
    "lvh",
    "lvh(value)",
    "lvi",
    "lvi(value)",
    "lvmax",
    "lvmax(value)",
    "lvmin",
    "lvmin(value)",
    "lvw",
    "lvw(value)",
    "mm",
    "mm(value)",
    "ms",
    "ms(value)",
    "number",
    "number(value)",
    "paintWorklet",
    "parent box",
    "parse",
    "parse a comma-separated list according to a css grammar",
    "parse a list",
    "parse something according to a css grammar",
    "parsing a list",
    "pc",
    "pc(value)",
    "percent",
    "percent(value)",
    "preserved tokens",
    "property",
    "property declarations",
    "pt",
    "pt(value)",
    "px",
    "px(value)",
    "qualified rule",
    "rad",
    "rad(value)",
    "registerProperty(PropertyDefinition definition)",
    "registerProperty(definition)",
    "reification",
    "reify",
    "rem",
    "rem(value)",
    "rlh",
    "rlh(value)",
    "round to the nearest integer",
    "s",
    "s(value)",
    "simple block",
    "start",
    "support",
    "support a css selector",
    "support a font format",
    "support a font tech",
    "supported syntax component name",
    "supports",
    "supports(conditionText)",
    "supports(property, value)",
    "svb",
    "svb(value)",
    "svh",
    "svh(value)",
    "svi",
    "svi(value)",
    "svmax",
    "svmax(value)",
    "svmin",
    "svmin(value)",
    "svw",
    "svw(value)",
    "text node",
    "text run",
    "textual data types",
    "tokenization",
    "tokenize",
    "tree-scoped name",
    "tree-scoped reference",
    "turn",
    "turn(value)",
    "value definition syntax",
    "vb",
    "vb(value)",
    "vh",
    "vh(value)",
    "vi",
    "vi(value)",
    "vmax",
    "vmax(value)",
    "vmin",
    "vmin(value)",
    "vw",
    "vw(value)",
    "{}-block"
  ],
  "CSS counter": [
    "creator",
    "name",
    "reversed",
    "value"
  ],
  "CSS declaration": [
    "case-sensitive flag",
    "important flag",
    "property name",
    "value"
  ],
  "CSS/Hz(value)": [
    "value"
  ],
  "CSS/Q(value)": [
    "value"
  ],
  "CSS/ch(value)": [
    "value"
  ],
  "CSS/cm(value)": [
    "value"
  ],
  "CSS/cqb(value)": [
    "value"
  ],
  "CSS/cqh(value)": [
    "value"
  ],
  "CSS/cqi(value)": [
    "value"
  ],
  "CSS/cqmax(value)": [
    "value"
  ],
  "CSS/cqmin(value)": [
    "value"
  ],
  "CSS/cqw(value)": [
    "value"
  ],
  "CSS/deg(value)": [
    "value"
  ],
  "CSS/dpcm(value)": [
    "value"
  ],
  "CSS/dpi(value)": [
    "value"
  ],
  "CSS/dppx(value)": [
    "value"
  ],
  "CSS/dvb(value)": [
    "value"
  ],
  "CSS/dvh(value)": [
    "value"
  ],
  "CSS/dvi(value)": [
    "value"
  ],
  "CSS/dvmax(value)": [
    "value"
  ],
  "CSS/dvmin(value)": [
    "value"
  ],
  "CSS/dvw(value)": [
    "value"
  ],
  "CSS/em(value)": [
    "value"
  ],
  "CSS/escape(ident)": [
    "ident"
  ],
  "CSS/ex(value)": [
    "value"
  ],
  "CSS/fr(value)": [
    "value"
  ],
  "CSS/grad(value)": [
    "value"
  ],
  "CSS/ic(value)": [
    "value"
  ],
  "CSS/in(value)": [
    "value"
  ],
  "CSS/kHz(value)": [
    "value"
  ],
  "CSS/lh(value)": [
    "value"
  ],
  "CSS/lvb(value)": [
    "value"
  ],
  "CSS/lvh(value)": [
    "value"
  ],
  "CSS/lvi(value)": [
    "value"
  ],
  "CSS/lvmax(value)": [
    "value"
  ],
  "CSS/lvmin(value)": [
    "value"
  ],
  "CSS/lvw(value)": [
    "value"
  ],
  "CSS/mm(value)": [
    "value"
  ],
  "CSS/ms(value)": [
    "value"
  ],
  "CSS/number(value)": [
    "value"
  ],
  "CSS/pc(value)": [
    "value"
  ],
  "CSS/percent(value)": [
    "value"
  ],
  "CSS/pt(value)": [
    "value"
  ],
  "CSS/px(value)": [
    "value"
  ],
  "CSS/rad(value)": [
    "value"
  ],
  "CSS/registerProperty(definition)": [
    "definition"
  ],
  "CSS/rem(value)": [
    "value"
  ],
  "CSS/rlh(value)": [
    "value"
  ],
  "CSS/s(value)": [
    "value"
  ],
  "CSS/supports(conditionText)": [
    "conditionText"
  ],
  "CSS/supports(property, value)": [
    "property",
    "value"
  ],
  "CSS/svb(value)": [
    "value"
  ],
  "CSS/svh(value)": [
    "value"
  ],
  "CSS/svi(value)": [
    "value"
  ],
  "CSS/svmax(value)": [
    "value"
  ],
  "CSS/svmin(value)": [
    "value"
  ],
  "CSS/svw(value)": [
    "value"
  ],
  "CSS/turn(value)": [
    "value"
  ],
  "CSS/vb(value)": [
    "value"
  ],
  "CSS/vh(value)": [
    "value"
  ],
  "CSS/vi(value)": [
    "value"
  ],
  "CSS/vmax(value)": [
    "value"
  ],
  "CSS/vmin(value)": [
    "value"
  ],
  "CSS/vw(value)": [
    "value"
  ],
  "CSSAnimation": [
    "animationName"
  ],
  "CSSBoxType": [
    "\"border\"",
    "\"content\"",
    "\"margin\"",
    "\"padding\""
  ],
  "CSSColor": [
    "CSSColor(colorSpace, channels)",
    "CSSColor(colorSpace, channels, alpha)",
    "CSSColor(colorSpace, channels, optional alpha)",
    "alpha",
    "channels",
    "colorSpace",
    "constructor",
    "constructor(colorSpace, channels)",
    "constructor(colorSpace, channels, alpha)"
  ],
  "CSSColor/CSSColor(colorSpace, channels)": [
    "alpha",
    "channels",
    "colorSpace"
  ],
  "CSSColor/CSSColor(colorSpace, channels, alpha)": [
    "alpha",
    "channels",
    "colorSpace"
  ],
  "CSSColor/constructor(colorSpace, channels)": [
    "alpha",
    "channels",
    "colorSpace"
  ],
  "CSSColor/constructor(colorSpace, channels, alpha)": [
    "alpha",
    "channels",
    "colorSpace"
  ],
  "CSSColorValue": [
    "parse(cssText)"
  ],
  "CSSColorValue/parse(cssText)": [
    "cssText"
  ],
  "CSSConditionRule": [
    "conditionText"
  ],
  "CSSCounterStyleRule": [
    "additiveSymbols",
    "fallback",
    "name",
    "negative",
    "pad",
    "prefix",
    "range",
    "speakAs",
    "suffix",
    "symbols",
    "system"
  ],
  "CSSFontFaceLoadEvent": [
    "fontfaces"
  ],
  "CSSFontFaceLoadEvent/CSSFontFaceLoadEvent()": [
    "eventInitDict",
    "type"
  ],
  "CSSFontFaceLoadEventInit": [
    "fontfaces"
  ],
  "CSSFontFaceRule": [
    "style"
  ],
  "CSSFontFeatureValuesMap": [
    "set",
    "set(featureValueName, values)"
  ],
  "CSSFontFeatureValuesMap/set(featureValueName, values)": [
    "featureValueName",
    "values"
  ],
  "CSSFontFeatureValuesRule": [
    "annotation",
    "characterVariant",
    "fontFamily",
    "ornaments",
    "styleset",
    "stylistic",
    "swash"
  ],
  "CSSFontPaletteValuesRule": [
    "basePalette",
    "fontFamily",
    "name",
    "overrideColors"
  ],
  "CSSGroupingRule": [
    "cssRules",
    "deleteRule(index)",
    "insertRule(rule)",
    "insertRule(rule, index)",
    "selectorText",
    "style"
  ],
  "CSSGroupingRule/deleteRule(index)": [
    "index"
  ],
  "CSSGroupingRule/insertRule(rule)": [
    "index",
    "rule"
  ],
  "CSSGroupingRule/insertRule(rule, index)": [
    "index",
    "rule"
  ],
  "CSSHSL": [
    "CSSHSL(h, s, l)",
    "CSSHSL(h, s, l, alpha)",
    "CSSHSL(h, s, l, optional alpha)",
    "alpha",
    "constructor",
    "constructor(h, s, l)",
    "constructor(h, s, l, alpha)",
    "h",
    "l",
    "s"
  ],
  "CSSHSL/CSSHSL(h, s, l)": [
    "alpha",
    "h",
    "l",
    "s"
  ],
  "CSSHSL/CSSHSL(h, s, l, alpha)": [
    "alpha",
    "h",
    "l",
    "s"
  ],
  "CSSHSL/constructor(h, s, l)": [
    "alpha",
    "h",
    "l",
    "s"
  ],
  "CSSHSL/constructor(h, s, l, alpha)": [
    "alpha",
    "h",
    "l",
    "s"
  ],
  "CSSHWB": [
    "CSSHWB(h, w, b)",
    "CSSHWB(h, w, b, alpha)",
    "CSSHWB(h, w, b, optional alpha)",
    "alpha",
    "b",
    "constructor",
    "constructor(h, w, b)",
    "constructor(h, w, b, alpha)",
    "h",
    "w"
  ],
  "CSSHWB/CSSHWB(h, w, b)": [
    "alpha",
    "b",
    "h",
    "w"
  ],
  "CSSHWB/CSSHWB(h, w, b, alpha)": [
    "alpha",
    "b",
    "h",
    "w"
  ],
  "CSSHWB/constructor(h, w, b)": [
    "alpha",
    "b",
    "h",
    "w"
  ],
  "CSSHWB/constructor(h, w, b, alpha)": [
    "alpha",
    "b",
    "h",
    "w"
  ],
  "CSSImportRule": [
    "href",
    "layerName",
    "media",
    "styleSheet"
  ],
  "CSSKeyframeRule": [
    "keyText",
    "style"
  ],
  "CSSKeyframesRule": [
    "appendRule",
    "appendRule(rule)",
    "cssRules",
    "deleteRule",
    "deleteRule(select)",
    "findRule",
    "findRule(select)",
    "name"
  ],
  "CSSKeyframesRule/appendRule(rule)": [
    "rule"
  ],
  "CSSKeyframesRule/deleteRule(select)": [
    "select"
  ],
  "CSSKeyframesRule/findRule(select)": [
    "select"
  ],
  "CSSKeywordValue": [
    "CSSKeywordValue(value)",
    "constructor(value)",
    "value"
  ],
  "CSSKeywordValue/CSSKeywordValue(value)": [
    "value"
  ],
  "CSSKeywordValue/constructor(value)": [
    "value"
  ],
  "CSSLCH": [
    "CSSLCH(l, c, h)",
    "CSSLCH(l, c, h, alpha)",
    "CSSLCH(l, c, h, optional alpha)",
    "alpha",
    "c",
    "constructor",
    "constructor(l, c, h)",
    "constructor(l, c, h, alpha)",
    "h",
    "l"
  ],
  "CSSLCH/CSSLCH(l, c, h)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSLCH/CSSLCH(l, c, h, alpha)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSLCH/constructor(l, c, h)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSLCH/constructor(l, c, h, alpha)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSLab": [
    "CSSLab(l, a, b)",
    "CSSLab(l, a, b, alpha)",
    "CSSLab(l, a, b, optional alpha)",
    "a",
    "alpha",
    "b",
    "constructor",
    "constructor(l, a, b)",
    "constructor(l, a, b, alpha)",
    "l"
  ],
  "CSSLab/CSSLab(l, a, b)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSLab/CSSLab(l, a, b, alpha)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSLab/constructor(l, a, b)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSLab/constructor(l, a, b, alpha)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSLayerBlockRule": [
    "name"
  ],
  "CSSLayerStatementRule": [
    "nameList"
  ],
  "CSSMarginRule": [
    "name",
    "style"
  ],
  "CSSMath": [
    "invert",
    "invert a cssnumericvalue",
    "negate",
    "negate a cssnumericvalue"
  ],
  "CSSMathClamp": [
    "CSSMathClamp(lower, value, upper)",
    "constructor(lower, value, upper)",
    "lower",
    "operator",
    "upper",
    "value"
  ],
  "CSSMathClamp/CSSMathClamp(lower, value, upper)": [
    "lower",
    "upper",
    "value"
  ],
  "CSSMathClamp/constructor(lower, value, upper)": [
    "lower",
    "upper",
    "value"
  ],
  "CSSMathInvert": [
    "CSSMathInvert(arg)",
    "constructor(arg)",
    "operator",
    "value"
  ],
  "CSSMathInvert/CSSMathInvert(arg)": [
    "arg"
  ],
  "CSSMathInvert/constructor(arg)": [
    "arg"
  ],
  "CSSMathMax": [
    "CSSMathMax()",
    "CSSMathMax(...args)",
    "constructor()",
    "constructor(...args)",
    "operator",
    "values"
  ],
  "CSSMathMax/CSSMathMax()": [
    "args"
  ],
  "CSSMathMax/CSSMathMax(...args)": [
    "args"
  ],
  "CSSMathMax/CSSMathMax(args)": [
    "args"
  ],
  "CSSMathMax/constructor()": [
    "args"
  ],
  "CSSMathMax/constructor(...args)": [
    "args"
  ],
  "CSSMathMin": [
    "CSSMathMin()",
    "CSSMathMin(...args)",
    "constructor()",
    "constructor(...args)",
    "operator",
    "values"
  ],
  "CSSMathMin/CSSMathMin()": [
    "args"
  ],
  "CSSMathMin/CSSMathMin(...args)": [
    "args"
  ],
  "CSSMathMin/CSSMathMin(args)": [
    "args"
  ],
  "CSSMathMin/constructor()": [
    "args"
  ],
  "CSSMathMin/constructor(...args)": [
    "args"
  ],
  "CSSMathNegate": [
    "CSSMathNegate(arg)",
    "constructor(arg)",
    "operator",
    "value"
  ],
  "CSSMathNegate/CSSMathNegate(arg)": [
    "arg"
  ],
  "CSSMathNegate/constructor(arg)": [
    "arg"
  ],
  "CSSMathOperator": [
    "\"clamp\"",
    "\"invert\"",
    "\"max\"",
    "\"min\"",
    "\"negate\"",
    "\"product\"",
    "\"sum\"",
    "invert",
    "max",
    "min",
    "negate",
    "product",
    "sum"
  ],
  "CSSMathProduct": [
    "CSSMathProduct()",
    "CSSMathProduct(...args)",
    "constructor()",
    "constructor(...args)",
    "operator",
    "values"
  ],
  "CSSMathProduct/CSSMathProduct()": [
    "args"
  ],
  "CSSMathProduct/CSSMathProduct(...args)": [
    "args"
  ],
  "CSSMathProduct/CSSMathProduct(args)": [
    "args"
  ],
  "CSSMathProduct/constructor()": [
    "args"
  ],
  "CSSMathProduct/constructor(...args)": [
    "args"
  ],
  "CSSMathSum": [
    "CSSMathSum()",
    "CSSMathSum(...args)",
    "constructor()",
    "constructor(...args)",
    "operator",
    "values"
  ],
  "CSSMathSum/CSSMathSum()": [
    "args"
  ],
  "CSSMathSum/CSSMathSum(...args)": [
    "args"
  ],
  "CSSMathSum/CSSMathSum(args)": [
    "args"
  ],
  "CSSMathSum/constructor()": [
    "args"
  ],
  "CSSMathSum/constructor(...args)": [
    "args"
  ],
  "CSSMathValue": [
    "operator"
  ],
  "CSSMatrixComponent": [
    "CSSMatrixComponent(matrix)",
    "CSSMatrixComponent(matrix, options)",
    "constructor(matrix)",
    "constructor(matrix, options)",
    "matrix"
  ],
  "CSSMatrixComponent/CSSMatrixComponent(matrix)": [
    "matrix",
    "options"
  ],
  "CSSMatrixComponent/CSSMatrixComponent(matrix, options)": [
    "matrix",
    "options"
  ],
  "CSSMatrixComponent/constructor(matrix)": [
    "matrix",
    "options"
  ],
  "CSSMatrixComponent/constructor(matrix, options)": [
    "matrix",
    "options"
  ],
  "CSSMatrixComponentOptions": [
    "is2D"
  ],
  "CSSMediaRule": [
    "media"
  ],
  "CSSNamespaceRule": [
    "namespaceURI",
    "prefix"
  ],
  "CSSNestingRule": [
    "cssRules",
    "deleteRule(index)",
    "insertRule(rule)",
    "insertRule(rule, index)",
    "selectorText",
    "style"
  ],
  "CSSNestingRule/deleteRule(index)": [
    "index"
  ],
  "CSSNestingRule/insertRule(rule)": [
    "index",
    "rule"
  ],
  "CSSNestingRule/insertRule(rule, index)": [
    "index",
    "rule"
  ],
  "CSSNumericArray": [
    "indexed getter",
    "indexed property getter",
    "length"
  ],
  "CSSNumericArray/__getter__(index)": [
    "index"
  ],
  "CSSNumericBaseType": [
    "\"angle\"",
    "\"flex\"",
    "\"frequency\"",
    "\"length\"",
    "\"percent\"",
    "\"resolution\"",
    "\"time\"",
    "angle",
    "flex",
    "frequency",
    "length",
    "percent",
    "resolution",
    "time"
  ],
  "CSSNumericType": [
    "angle",
    "flex",
    "frequency",
    "length",
    "percent",
    "percentHint",
    "resolution",
    "time"
  ],
  "CSSNumericValue": [
    "add two types",
    "add()",
    "add(...values)",
    "base type",
    "create a type",
    "creating a type",
    "div()",
    "div(...values)",
    "equals()",
    "equals(...value)",
    "equals(...values)",
    "invert a type",
    "match",
    "max()",
    "max(...values)",
    "min()",
    "min(...values)",
    "mul()",
    "mul(...values)",
    "multiply two types",
    "parse(cssText)",
    "percent hint",
    "sub()",
    "sub(...values)",
    "sum value",
    "to(unit)",
    "toSum()",
    "toSum(...units)",
    "type",
    "type()"
  ],
  "CSSNumericValue/add()": [
    "values"
  ],
  "CSSNumericValue/add(...values)": [
    "values"
  ],
  "CSSNumericValue/div()": [
    "values"
  ],
  "CSSNumericValue/div(...values)": [
    "values"
  ],
  "CSSNumericValue/equals()": [
    "value"
  ],
  "CSSNumericValue/equals(...value)": [
    "value"
  ],
  "CSSNumericValue/max()": [
    "values"
  ],
  "CSSNumericValue/max(...values)": [
    "values"
  ],
  "CSSNumericValue/min()": [
    "values"
  ],
  "CSSNumericValue/min(...values)": [
    "values"
  ],
  "CSSNumericValue/mul()": [
    "values"
  ],
  "CSSNumericValue/mul(...values)": [
    "values"
  ],
  "CSSNumericValue/parse(cssText)": [
    "cssText"
  ],
  "CSSNumericValue/sub()": [
    "values"
  ],
  "CSSNumericValue/sub(...values)": [
    "values"
  ],
  "CSSNumericValue/to(unit)": [
    "unit"
  ],
  "CSSNumericValue/toSum()": [
    "units"
  ],
  "CSSNumericValue/toSum(...units)": [
    "units"
  ],
  "CSSOKLCH": [
    "CSSOKLCH(l, c, h)",
    "CSSOKLCH(l, c, h, alpha)",
    "CSSOKLCH(l, c, h, optional alpha)",
    "alpha",
    "c",
    "constructor",
    "constructor(l, c, h)",
    "constructor(l, c, h, alpha)",
    "h",
    "l"
  ],
  "CSSOKLCH/CSSOKLCH(l, c, h)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSOKLCH/CSSOKLCH(l, c, h, alpha)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSOKLCH/constructor(l, c, h)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSOKLCH/constructor(l, c, h, alpha)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSOKLab": [
    "CSSOKLab(l, a, b)",
    "CSSOKLab(l, a, b, alpha)",
    "CSSOKLab(l, a, b, optional alpha)",
    "a",
    "alpha",
    "b",
    "constructor",
    "constructor(l, a, b)",
    "constructor(l, a, b, alpha)",
    "l"
  ],
  "CSSOKLab/CSSOKLab(l, a, b)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSOKLab/CSSOKLab(l, a, b, alpha)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSOKLab/constructor(l, a, b)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSOKLab/constructor(l, a, b, alpha)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSPageRule": [
    "selectorText",
    "style"
  ],
  "CSSPerspective": [
    "CSSPerspective(length)",
    "constructor(length)",
    "is2D",
    "length"
  ],
  "CSSPerspective/CSSPerspective(length)": [
    "length"
  ],
  "CSSPerspective/constructor(length)": [
    "length"
  ],
  "CSSPositionValue": [
    "CSSPositionValue(x, y)",
    "x",
    "y"
  ],
  "CSSPositionValue/CSSPositionValue(x, y)": [
    "x",
    "y"
  ],
  "CSSPropertyRule": [
    "inherits",
    "initialValue",
    "name",
    "syntax"
  ],
  "CSSPseudoElement": [
    "element",
    "parent",
    "pseudo",
    "pseudo()",
    "pseudo(type)",
    "type"
  ],
  "CSSPseudoElement/pseudo(type)": [
    "type"
  ],
  "CSSRGB": [
    "CSSRGB(r, g, b)",
    "CSSRGB(r, g, b, alpha)",
    "CSSRGB(r, g, b, optional alpha)",
    "alpha",
    "b",
    "constructor",
    "constructor(r, g, b)",
    "constructor(r, g, b, alpha)",
    "g",
    "r"
  ],
  "CSSRGB/CSSRGB(r, g, b)": [
    "alpha",
    "b",
    "g",
    "r"
  ],
  "CSSRGB/CSSRGB(r, g, b, alpha)": [
    "alpha",
    "b",
    "g",
    "r"
  ],
  "CSSRGB/constructor(r, g, b)": [
    "alpha",
    "b",
    "g",
    "r"
  ],
  "CSSRGB/constructor(r, g, b, alpha)": [
    "alpha",
    "b",
    "g",
    "r"
  ],
  "CSSRotate": [
    "CSSRotate(angle)",
    "CSSRotate(x, y, z, angle)",
    "angle",
    "constructor(angle)",
    "constructor(x, y, z, angle)",
    "x",
    "y",
    "z"
  ],
  "CSSRotate/CSSRotate(angle)": [
    "angle"
  ],
  "CSSRotate/CSSRotate(x, y, z, angle)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "CSSRotate/constructor(angle)": [
    "angle"
  ],
  "CSSRotate/constructor(x, y, z, angle)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "CSSRule": [
    "CHARSET_RULE",
    "COUNTER_STYLE_RULE",
    "FONT_FACE_RULE",
    "FONT_FEATURE_VALUES_RULE",
    "IMPORT_RULE",
    "KEYFRAMES_RULE",
    "KEYFRAME_RULE",
    "MARGIN_RULE",
    "MEDIA_RULE",
    "NAMESPACE_RULE",
    "PAGE_RULE",
    "STYLE_RULE",
    "SUPPORTS_RULE",
    "VIEWPORT_RULE",
    "child css rules",
    "cssText",
    "parent css rule",
    "parent css style sheet",
    "parentRule",
    "parentStyleSheet",
    "text",
    "type"
  ],
  "CSSRuleList": [
    "item(index)",
    "length"
  ],
  "CSSRuleList/item(index)": [
    "index"
  ],
  "CSSScale": [
    "CSSScale(x, y)",
    "CSSScale(x, y, z)",
    "constructor(x, y)",
    "constructor(x, y, z)",
    "x",
    "y",
    "z"
  ],
  "CSSScale/CSSScale(x, y)": [
    "x",
    "y",
    "z"
  ],
  "CSSScale/CSSScale(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "CSSScale/constructor(x, y)": [
    "x",
    "y",
    "z"
  ],
  "CSSScale/constructor(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "CSSScrollTimelineRule": [
    "name",
    "orientation",
    "scrollOffsets",
    "source"
  ],
  "CSSSkew": [
    "CSSSkew(ax, ay)",
    "ax",
    "ay",
    "constructor(ax, ay)",
    "is2D"
  ],
  "CSSSkew/CSSSkew(ax, ay)": [
    "ax",
    "ay"
  ],
  "CSSSkew/constructor(ax, ay)": [
    "ax",
    "ay"
  ],
  "CSSSkewX": [
    "CSSSkewX(ax)",
    "ax",
    "constructor(ax)",
    "is2D"
  ],
  "CSSSkewX/CSSSkewX(ax)": [
    "ax"
  ],
  "CSSSkewX/constructor(ax)": [
    "ax"
  ],
  "CSSSkewY": [
    "CSSSkewY(ay)",
    "ay",
    "constructor(ay)",
    "is2D"
  ],
  "CSSSkewY/CSSSkewY(ay)": [
    "ay"
  ],
  "CSSSkewY/constructor(ay)": [
    "ay"
  ],
  "CSSStyleDeclaration": [
    "camel-cased attribute",
    "camel_cased_attribute",
    "computed flag",
    "cssFloat",
    "cssText",
    "dashed attribute",
    "dashed_attribute",
    "declarations",
    "getPropertyPriority(property)",
    "getPropertyValue(property)",
    "item(index)",
    "length",
    "owner node",
    "parent css rule",
    "parentRule",
    "removeProperty(property)",
    "setProperty(property, value)",
    "setProperty(property, value, priority)",
    "updating flag",
    "webkit-cased attribute",
    "webkit_cased_attribute"
  ],
  "CSSStyleDeclaration/getPropertyPriority(property)": [
    "property"
  ],
  "CSSStyleDeclaration/getPropertyValue(property)": [
    "property"
  ],
  "CSSStyleDeclaration/item(index)": [
    "index"
  ],
  "CSSStyleDeclaration/removeProperty(property)": [
    "property"
  ],
  "CSSStyleDeclaration/setProperty(property, value)": [
    "priority",
    "property",
    "value"
  ],
  "CSSStyleDeclaration/setProperty(property, value, priority)": [
    "priority",
    "property",
    "value"
  ],
  "CSSStyleRule": [
    "cssRules",
    "deleteRule(index)",
    "insertRule(rule)",
    "insertRule(rule, index)",
    "selectorText",
    "style",
    "styleMap"
  ],
  "CSSStyleRule/deleteRule(index)": [
    "index"
  ],
  "CSSStyleRule/insertRule(rule)": [
    "index",
    "rule"
  ],
  "CSSStyleRule/insertRule(rule, index)": [
    "index",
    "rule"
  ],
  "CSSStyleSheet": [
    "CSSStyleSheet()",
    "CSSStyleSheet(options)",
    "addRule()",
    "addRule(selector)",
    "addRule(selector, block, optionalIndex)",
    "addRule(selector, style)",
    "addRule(selector, style, index)",
    "alternate flag",
    "constructed flag",
    "constructor document",
    "constructor()",
    "constructor(options)",
    "css rules",
    "cssRules",
    "deleteRule(index)",
    "disabled flag",
    "disallow modification flag",
    "insertRule(rule)",
    "insertRule(rule, index)",
    "location",
    "media",
    "origin-clean flag",
    "owner css rule",
    "owner node",
    "ownerRule",
    "parent css style sheet",
    "referrer policy",
    "removeRule()",
    "removeRule(index)",
    "replace(text)",
    "replaceSync(text)",
    "rules",
    "stylesheet base url",
    "title",
    "type"
  ],
  "CSSStyleSheet/CSSStyleSheet()": [
    "options"
  ],
  "CSSStyleSheet/CSSStyleSheet(options)": [
    "options"
  ],
  "CSSStyleSheet/addRule()": [
    "index",
    "selector",
    "style"
  ],
  "CSSStyleSheet/addRule(selector)": [
    "index",
    "selector",
    "style"
  ],
  "CSSStyleSheet/addRule(selector, style)": [
    "index",
    "selector",
    "style"
  ],
  "CSSStyleSheet/addRule(selector, style, index)": [
    "index",
    "selector",
    "style"
  ],
  "CSSStyleSheet/constructor()": [
    "options"
  ],
  "CSSStyleSheet/constructor(options)": [
    "options"
  ],
  "CSSStyleSheet/deleteRule(index)": [
    "index"
  ],
  "CSSStyleSheet/insertRule(rule)": [
    "index",
    "rule"
  ],
  "CSSStyleSheet/insertRule(rule, index)": [
    "index",
    "rule"
  ],
  "CSSStyleSheet/removeRule()": [
    "index"
  ],
  "CSSStyleSheet/removeRule(index)": [
    "index"
  ],
  "CSSStyleSheet/replace(text)": [
    "text"
  ],
  "CSSStyleSheet/replaceSync(text)": [
    "text"
  ],
  "CSSStyleSheetInit": [
    "baseURL",
    "disabled",
    "media"
  ],
  "CSSStyleValue": [
    "[[associatedProperty]]",
    "match a grammar",
    "match the grammar",
    "parse(property, cssText)",
    "parseAll(property, cssText)",
    "stringification behavior"
  ],
  "CSSStyleValue/parse(property, cssText)": [
    "cssText",
    "property"
  ],
  "CSSStyleValue/parseAll(property, cssText)": [
    "cssText",
    "property"
  ],
  "CSSTransformComponent": [
    "is2D",
    "stringification behavior",
    "toMatrix()"
  ],
  "CSSTransformValue": [
    "CSSTransformValue(transforms)",
    "[[values]]",
    "constructor(transforms)",
    "is2D",
    "length",
    "toMatrix()"
  ],
  "CSSTransformValue/CSSTransformValue(transforms)": [
    "transforms"
  ],
  "CSSTransformValue/__getter__(index)": [
    "index"
  ],
  "CSSTransformValue/__setter__(index, val)": [
    "index",
    "val"
  ],
  "CSSTransformValue/constructor(transforms)": [
    "transforms"
  ],
  "CSSTransition": [
    "transitionProperty"
  ],
  "CSSTranslate": [
    "CSSTranslate(x, y)",
    "CSSTranslate(x, y, z)",
    "constructor(x, y)",
    "constructor(x, y, z)",
    "x",
    "y",
    "z"
  ],
  "CSSTranslate/CSSTranslate(x, y)": [
    "x",
    "y",
    "z"
  ],
  "CSSTranslate/CSSTranslate(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "CSSTranslate/constructor(x, y)": [
    "x",
    "y",
    "z"
  ],
  "CSSTranslate/constructor(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "CSSUnitValue": [
    "CSSUnitValue(value, unit)",
    "constructor(value, unit)",
    "unit",
    "value"
  ],
  "CSSUnitValue/CSSUnitValue(value, unit)": [
    "unit",
    "value"
  ],
  "CSSUnitValue/constructor(value, unit)": [
    "unit",
    "value"
  ],
  "CSSUnparsedValue": [
    "CSSUnparsedValue(members)",
    "Constructor",
    "[[tokens]]",
    "constructor",
    "constructor(members)",
    "length"
  ],
  "CSSUnparsedValue/CSSUnparsedValue(members)": [
    "members"
  ],
  "CSSUnparsedValue/__getter__(index)": [
    "index"
  ],
  "CSSUnparsedValue/__setter__(index, val)": [
    "index",
    "val"
  ],
  "CSSUnparsedValue/constructor(members)": [
    "members"
  ],
  "CSSVariableReferenceValue": [
    "CSSVariableReferenceValue(variable)",
    "CSSVariableReferenceValue(variable, fallback)",
    "constructor(variable)",
    "constructor(variable, fallback)",
    "fallback",
    "variable"
  ],
  "CSSVariableReferenceValue/CSSVariableReferenceValue(variable)": [
    "fallback",
    "variable"
  ],
  "CSSVariableReferenceValue/CSSVariableReferenceValue(variable, fallback)": [
    "fallback",
    "variable"
  ],
  "CSSVariableReferenceValue/constructor(variable)": [
    "fallback",
    "variable"
  ],
  "CSSVariableReferenceValue/constructor(variable, fallback)": [
    "fallback",
    "variable"
  ],
  "CSSViewportRule": [
    "style"
  ],
  "Cache": [
    "add(request)",
    "addAll(requests)",
    "delete(request)",
    "delete(request, options)",
    "keys()",
    "keys(request)",
    "keys(request, options)",
    "match(request)",
    "match(request, options)",
    "matchAll()",
    "matchAll(request)",
    "matchAll(request, options)",
    "put(request, response)"
  ],
  "Cache/add(request)": [
    "request"
  ],
  "Cache/addAll(requests)": [
    "requests"
  ],
  "Cache/delete(request)": [
    "options",
    "request"
  ],
  "Cache/delete(request, options)": [
    "options",
    "request"
  ],
  "Cache/keys()": [
    "options",
    "request"
  ],
  "Cache/keys(request)": [
    "options",
    "request"
  ],
  "Cache/keys(request, options)": [
    "options",
    "request"
  ],
  "Cache/match(request)": [
    "options",
    "request"
  ],
  "Cache/match(request, options)": [
    "options",
    "request"
  ],
  "Cache/matchAll()": [
    "options",
    "request"
  ],
  "Cache/matchAll(request)": [
    "options",
    "request"
  ],
  "Cache/matchAll(request, options)": [
    "options",
    "request"
  ],
  "Cache/put(request, response)": [
    "request",
    "response"
  ],
  "CacheQueryOptions": [
    "ignoreMethod",
    "ignoreSearch",
    "ignoreVary"
  ],
  "CacheStorage": [
    "delete(cacheName)",
    "global object",
    "has(cacheName)",
    "keys()",
    "match(request)",
    "match(request, options)",
    "open(cacheName)"
  ],
  "CacheStorage/delete(cacheName)": [
    "cacheName"
  ],
  "CacheStorage/has(cacheName)": [
    "cacheName"
  ],
  "CacheStorage/match(request)": [
    "options",
    "request"
  ],
  "CacheStorage/match(request, options)": [
    "options",
    "request"
  ],
  "CacheStorage/open(cacheName)": [
    "cacheName"
  ],
  "CameraDevicePermissionDescriptor": [
    "panTiltZoom"
  ],
  "CanPlayTypeResult": [
    "maybe",
    "probably"
  ],
  "CanvasCompositing": [
    "globalAlpha",
    "globalCompositeOperation"
  ],
  "CanvasDirection": [
    "inherit",
    "ltr",
    "rtl"
  ],
  "CanvasDrawImage": [
    "drawImage",
    "drawImage(image, dx, dy, dw, dh)",
    "drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)"
  ],
  "CanvasDrawPath": [
    "beginPath()",
    "clip()",
    "clip(path)",
    "fill()",
    "fill(path)",
    "isPointInPath(path, x, y)",
    "isPointInPath(x, y)",
    "isPointInStroke(path, x, y)",
    "isPointInStroke(x, y)",
    "stroke()",
    "stroke(path)"
  ],
  "CanvasFillRule": [
    "evenodd",
    "nonzero"
  ],
  "CanvasFillStrokeStyles": [
    "createConicGradient(startAngle, x, y)",
    "createLinearGradient(x0, y0, x1, y1)",
    "createPattern(image, repetition)",
    "createRadialGradient(x0, y0, r0, x1, y1, r1)",
    "fillStyle",
    "strokeStyle"
  ],
  "CanvasFilter": [
    "new CanvasFilter(filters)"
  ],
  "CanvasFilters": [
    "filter"
  ],
  "CanvasFontKerning": [
    "auto",
    "none",
    "normal"
  ],
  "CanvasFontStretch": [
    "condensed",
    "expanded",
    "extra-condensed",
    "extra-expanded",
    "normal",
    "semi-condensed",
    "semi-expanded",
    "ultra-condensed",
    "ultra-expanded"
  ],
  "CanvasFontVariantCaps": [
    "all-petite-caps",
    "all-small-caps",
    "normal",
    "petite-caps",
    "small-caps",
    "titling-caps",
    "unicase"
  ],
  "CanvasGradient": [
    "addColorStop(offset, color)"
  ],
  "CanvasImageData": [
    "createImageData(imagedata)",
    "createImageData(sw, sh)",
    "getImageData(sx, sy, sw, sh)",
    "putImageData()"
  ],
  "CanvasImageSmoothing": [
    "imageSmoothingEnabled",
    "imageSmoothingQuality"
  ],
  "CanvasPath": [
    "arc(x, y, radius, startAngle, endAngle)",
    "arcTo(x1, y1, x2, y2, radius)",
    "bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)",
    "closePath()",
    "ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle)",
    "lineTo(x, y)",
    "moveTo(x, y)",
    "quadraticCurveTo(cpx, cpy, x, y)",
    "rect(x, y, w, h)",
    "roundRect(x, y, w, h)"
  ],
  "CanvasPathDrawingStyles": [
    "getLineDash()",
    "lineCap",
    "lineDashOffset",
    "lineJoin",
    "lineWidth",
    "miterLimit",
    "setLineDash(segments)"
  ],
  "CanvasPattern": [
    "setTransform()"
  ],
  "CanvasRect": [
    "clearRect(x, y, w, h)",
    "fillRect(x, y, w, h)",
    "strokeRect(x, y, w, h)"
  ],
  "CanvasRenderingContext2D": [
    "canvas",
    "getContextAttributes()"
  ],
  "CanvasRenderingContext2DSettings": [
    "alpha",
    "colorSpace",
    "desynchronized",
    "willReadFrequently"
  ],
  "CanvasShadowStyles": [
    "shadowBlur",
    "shadowColor",
    "shadowOffsetX",
    "shadowOffsetY"
  ],
  "CanvasState": [
    "isContextLost()",
    "reset()",
    "restore()",
    "save()"
  ],
  "CanvasText": [
    "fillText(text, x, y)",
    "measureText(text)",
    "strokeText(text, x, y)"
  ],
  "CanvasTextAlign": [
    "center",
    "end",
    "left",
    "right",
    "start"
  ],
  "CanvasTextBaseline": [
    "alphabetic",
    "bottom",
    "hanging",
    "ideographic",
    "middle",
    "top"
  ],
  "CanvasTextDrawingStyles": [
    "direction",
    "font",
    "fontKerning",
    "fontStretch",
    "fontVariantCaps",
    "letterSpacing",
    "textAlign",
    "textBaseline",
    "textRendering",
    "wordSpacing"
  ],
  "CanvasTextRendering": [
    "auto",
    "geometricPrecision",
    "optimizeLegibility",
    "optimizeSpeed"
  ],
  "CanvasTransform": [
    "getTransform()",
    "resetTransform()",
    "rotate(angle)",
    "scale(x, y)",
    "setTransform()",
    "setTransform(a, b, c, d, e, f)",
    "transform(a, b, c, d, e, f)",
    "translate(x, y)"
  ],
  "CanvasUserInterface": [
    "drawFocusIfNeeded(element)",
    "scrollPathIntoView()"
  ],
  "CaretPosition": [
    "getClientRect()",
    "offset",
    "offsetNode"
  ],
  "ChannelCountMode": [
    "\"clamped-max\"",
    "\"explicit\"",
    "\"max\"",
    "clamped-max",
    "explicit",
    "max"
  ],
  "ChannelInterpretation": [
    "\"discrete\"",
    "\"speakers\"",
    "discrete",
    "speakers"
  ],
  "ChannelMergerNode": [
    "ChannelMergerNode(context)",
    "ChannelMergerNode(context, options)",
    "constructor",
    "constructor(context)",
    "constructor(context, options)"
  ],
  "ChannelMergerNode/ChannelMergerNode(context)": [
    "context",
    "options"
  ],
  "ChannelMergerNode/ChannelMergerNode(context, options)": [
    "context",
    "options"
  ],
  "ChannelMergerNode/constructor": [
    "ChannelMergerNode(context, options)"
  ],
  "ChannelMergerNode/constructor()": [
    "context",
    "options"
  ],
  "ChannelMergerNode/constructor(context)": [
    "context",
    "options"
  ],
  "ChannelMergerNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "ChannelMergerOptions": [
    "numberOfInputs"
  ],
  "ChannelSplitterNode": [
    "ChannelSplitterNode(context)",
    "ChannelSplitterNode(context, options)",
    "constructor",
    "constructor(context)",
    "constructor(context, options)"
  ],
  "ChannelSplitterNode/ChannelSplitterNode(context)": [
    "context",
    "options"
  ],
  "ChannelSplitterNode/ChannelSplitterNode(context, options)": [
    "context",
    "options"
  ],
  "ChannelSplitterNode/constructor()": [
    "ChannelSplitterNode(context, options)",
    "context",
    "options"
  ],
  "ChannelSplitterNode/constructor(context)": [
    "context",
    "options"
  ],
  "ChannelSplitterNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "ChannelSplitterOptions": [
    "numberOfOutputs"
  ],
  "CharacterData": [
    "appendData(data)",
    "data",
    "deleteData(offset, count)",
    "insertData(offset, data)",
    "length",
    "replaceData(offset, count, data)",
    "substring data",
    "substringData(offset, count)"
  ],
  "CharacterData/appendData(data)": [
    "data"
  ],
  "CharacterData/deleteData(offset, count)": [
    "count",
    "offset"
  ],
  "CharacterData/insertData(offset, data)": [
    "data",
    "offset"
  ],
  "CharacterData/replaceData(offset, count, data)": [
    "count",
    "data",
    "offset"
  ],
  "CharacterData/substringData(offset, count)": [
    "count",
    "offset"
  ],
  "CharacteristicEventHandlers": [
    "oncharacteristicvaluechanged"
  ],
  "CheckVisibilityOptions": [
    "checkOpacity",
    "checkVisibilityCSS"
  ],
  "ChildBreakToken": [
    "[[unique id]]",
    "breakType",
    "child"
  ],
  "ChildDisplayType": [
    "\"block\"",
    "\"normal\"",
    "block",
    "normal"
  ],
  "ChildNode": [
    "after()",
    "after(...nodes)",
    "after(nodes)",
    "before()",
    "before(...nodes)",
    "before(nodes)",
    "remove()",
    "replaceWith()",
    "replaceWith(...nodes)",
    "replaceWith(nodes)"
  ],
  "ChildNode/after()": [
    "nodes"
  ],
  "ChildNode/after(...nodes)": [
    "nodes"
  ],
  "ChildNode/before()": [
    "nodes"
  ],
  "ChildNode/before(...nodes)": [
    "nodes"
  ],
  "ChildNode/replaceWith()": [
    "nodes"
  ],
  "ChildNode/replaceWith(...nodes)": [
    "nodes"
  ],
  "Client": [
    "frame type",
    "frameType",
    "id",
    "postMessage(message)",
    "postMessage(message, options)",
    "postMessage(message, transfer)",
    "service worker client",
    "type",
    "url"
  ],
  "Client/postMessage(message)": [
    "message",
    "options",
    "transfer"
  ],
  "Client/postMessage(message, options)": [
    "message",
    "options"
  ],
  "Client/postMessage(message, transfer)": [
    "message",
    "transfer"
  ],
  "ClientQueryOptions": [
    "includeUncontrolled",
    "type"
  ],
  "ClientType": [
    "\"all\"",
    "\"sharedworker\"",
    "\"window\"",
    "\"worker\""
  ],
  "Clients": [
    "claim()",
    "get(id)",
    "matchAll()",
    "matchAll(options)",
    "openWindow(url)"
  ],
  "Clients/get(id)": [
    "id"
  ],
  "Clients/matchAll()": [
    "options"
  ],
  "Clients/matchAll(options)": [
    "options"
  ],
  "Clients/openWindow(url)": [
    "url"
  ],
  "CloseEvent": [
    "CloseEvent(type)",
    "CloseEvent(type, eventInitDict)",
    "code",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "reason",
    "wasClean"
  ],
  "CloseEvent/CloseEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "CloseEvent/CloseEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CloseEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "CloseEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CloseEventInit": [
    "code",
    "reason",
    "wasClean"
  ],
  "CollectedClientData": [
    "challenge",
    "crossOrigin",
    "hash of the serialized client data",
    "json-compatible serialization of client data",
    "origin",
    "tokenBinding",
    "tokenbinding",
    "type"
  ],
  "ColorSpaceConversion": [
    "default",
    "none"
  ],
  "Comment": [
    "Comment()",
    "Comment(data)",
    "constructor()",
    "constructor(data)",
    "substring data"
  ],
  "Comment/Comment()": [
    "data"
  ],
  "Comment/Comment(data)": [
    "data"
  ],
  "Comment/constructor()": [
    "data"
  ],
  "Comment/constructor(data)": [
    "data"
  ],
  "CompositeOperation": [
    "\"accumulate\"",
    "\"add\"",
    "\"replace\"",
    "accumulate",
    "add",
    "replace"
  ],
  "CompositeOperationOrAuto": [
    "\"accumulate\"",
    "\"add\"",
    "\"auto\"",
    "\"replace\"",
    "accumulate",
    "add",
    "auto",
    "replace"
  ],
  "CompositionEvent": [
    "CompositionEvent(type)",
    "CompositionEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "data",
    "initCompositionEvent(typeArg)",
    "initCompositionEvent(typeArg, bubblesArg)",
    "initCompositionEvent(typeArg, bubblesArg, cancelableArg)",
    "initCompositionEvent(typeArg, bubblesArg, cancelableArg, viewArg)",
    "initCompositionEvent(typeArg, bubblesArg, cancelableArg, viewArg, dataArg)"
  ],
  "CompositionEvent/CompositionEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "CompositionEvent/CompositionEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CompositionEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "CompositionEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CompositionEvent/initCompositionEvent(typeArg)": [
    "bubblesArg",
    "cancelableArg",
    "dataArg",
    "typeArg",
    "viewArg"
  ],
  "CompositionEvent/initCompositionEvent(typeArg, bubblesArg)": [
    "bubblesArg",
    "cancelableArg",
    "dataArg",
    "typeArg",
    "viewArg"
  ],
  "CompositionEvent/initCompositionEvent(typeArg, bubblesArg, cancelableArg)": [
    "bubblesArg",
    "cancelableArg",
    "dataArg",
    "typeArg",
    "viewArg"
  ],
  "CompositionEvent/initCompositionEvent(typeArg, bubblesArg, cancelableArg, viewArg)": [
    "bubblesArg",
    "cancelableArg",
    "dataArg",
    "typeArg",
    "viewArg"
  ],
  "CompositionEvent/initCompositionEvent(typeArg, bubblesArg, cancelableArg, viewArg, dataArg)": [
    "bubblesArg",
    "cancelableArg",
    "dataArg",
    "typeArg",
    "viewArg"
  ],
  "CompositionEventInit": [
    "data"
  ],
  "ComputedEffectTiming": [
    "activeDuration",
    "currentIteration",
    "endTime",
    "localTime",
    "progress",
    "startTime"
  ],
  "ConstantSourceNode": [
    "ConstantSourceNode(context)",
    "ConstantSourceNode(context, options)",
    "constructor",
    "constructor(context)",
    "constructor(context, options)",
    "offset"
  ],
  "ConstantSourceNode/ConstantSourceNode(context)": [
    "context",
    "options"
  ],
  "ConstantSourceNode/ConstantSourceNode(context, options)": [
    "context",
    "options"
  ],
  "ConstantSourceNode/constructor()": [
    "ConstantSourceNode(context, options)",
    "context",
    "options"
  ],
  "ConstantSourceNode/constructor(context)": [
    "context",
    "options"
  ],
  "ConstantSourceNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "ConstantSourceOptions": [
    "offset"
  ],
  "ConstrainBooleanParameters": [
    "exact",
    "ideal"
  ],
  "ConstrainDOMStringParameters": [
    "exact",
    "ideal"
  ],
  "ConstrainDoubleRange": [
    "exact",
    "ideal"
  ],
  "ConstrainULongRange": [
    "exact",
    "ideal"
  ],
  "ConstrainablePattern": [
    "applyConstraints",
    "applyConstraints()",
    "applyConstraints(constraints)",
    "applyconstraints algorithm",
    "applyconstraints template method",
    "fitness distance",
    "getCapabilities()",
    "getConstraints()",
    "getSettings()",
    "required",
    "selectsettings",
    "settings dictionary"
  ],
  "Constraints": [
    "advanced"
  ],
  "ConvertCoordinateOptions": [
    "fromBox",
    "toBox"
  ],
  "ConvolverNode": [
    "ConvolverNode(context)",
    "ConvolverNode(context, options)",
    "buffer",
    "buffer attribute",
    "constructor",
    "constructor(context)",
    "constructor(context, options)",
    "normalize"
  ],
  "ConvolverNode/ConvolverNode(context)": [
    "context",
    "options"
  ],
  "ConvolverNode/ConvolverNode(context, options)": [
    "context",
    "options"
  ],
  "ConvolverNode/constructor()": [
    "ConvolverNode(context, options)",
    "context",
    "options"
  ],
  "ConvolverNode/constructor(context)": [
    "context",
    "options"
  ],
  "ConvolverNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "ConvolverOptions": [
    "buffer",
    "disableNormalization"
  ],
  "CountQueuingStrategy": [
    "CountQueuingStrategy(init)",
    "[[highwatermark]]",
    "constructor(init)",
    "highWaterMark",
    "size"
  ],
  "CountQueuingStrategy/CountQueuingStrategy(init)": [
    "init"
  ],
  "CountQueuingStrategy/constructor(init)": [
    "init"
  ],
  "Credential": [
    "[[CollectFromCredentialStore]](origin, options, sameOriginWithAncestors)",
    "[[Create]](origin, options, sameOriginWithAncestors)",
    "[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)",
    "[[Store]](credential, sameOriginWithAncestors)",
    "[[discovery]]",
    "[[origin]]",
    "[[type]]",
    "credential type",
    "id",
    "isConditionalMediationAvailable()",
    "origin bound",
    "type"
  ],
  "Credential/[[discovery]]": [
    "credential store",
    "remote"
  ],
  "Credential/[[type]]": [
    "password"
  ],
  "CredentialCreationOptions": [
    "federated",
    "password",
    "publicKey",
    "relevant credential interface objects",
    "signal"
  ],
  "CredentialData": [
    "id"
  ],
  "CredentialMediationRequirement": [
    "\"conditional\"",
    "\"optional\"",
    "\"required\"",
    "\"silent\"",
    "conditional",
    "optional",
    "required",
    "silent"
  ],
  "CredentialPropertiesOutput": [
    "client-side discoverable credential property",
    "resident key credential property",
    "rk"
  ],
  "CredentialRequestOptions": [
    "federated",
    "matchable a priori",
    "mediation",
    "password",
    "publicKey",
    "relevant credential interface objects",
    "signal"
  ],
  "CredentialUserData": [
    "iconURL",
    "name"
  ],
  "CredentialsContainer": [
    "create()",
    "create(options)",
    "get()",
    "get(options)",
    "preventSilentAccess()",
    "store()",
    "store(credential)"
  ],
  "CredentialsContainer/create(options)": [
    "options"
  ],
  "CredentialsContainer/get(options)": [
    "options"
  ],
  "CredentialsContainer/store(credential)": [
    "credential"
  ],
  "Crypto": [
    "getRandomValues",
    "getRandomValues()",
    "getRandomValues(array)",
    "randomUUID",
    "randomUUID()",
    "subtle"
  ],
  "CryptoKey": [
    "Found definition for \"[[algorithm_cached]]\", but nothing links to it. This is usually a spec bug!",
    "Found definition for \"[[usages_cached]]\", but nothing links to it. This is usually a spec bug!",
    "[[algorithm]]",
    "[[extractable]]",
    "[[handle]]",
    "[[type]]",
    "[[usages]]",
    "algorithm",
    "extractable",
    "type",
    "usages"
  ],
  "CryptoKeyPair": [
    "privateKey",
    "publicKey"
  ],
  "CustomElementRegistry": [
    "define(name, constructor)",
    "get(name)",
    "upgrade(root)",
    "whenDefined(name)"
  ],
  "CustomEvent": [
    "CustomEvent(type)",
    "CustomEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "detail",
    "initCustomEvent(type)",
    "initCustomEvent(type, bubbles)",
    "initCustomEvent(type, bubbles, cancelable)",
    "initCustomEvent(type, bubbles, cancelable, detail)"
  ],
  "CustomEvent/CustomEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "CustomEvent/CustomEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CustomEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "CustomEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CustomEvent/initCustomEvent(type)": [
    "bubbles",
    "cancelable",
    "detail",
    "type"
  ],
  "CustomEvent/initCustomEvent(type, bubbles)": [
    "bubbles",
    "cancelable",
    "detail",
    "type"
  ],
  "CustomEvent/initCustomEvent(type, bubbles, cancelable)": [
    "bubbles",
    "cancelable",
    "detail",
    "type"
  ],
  "CustomEvent/initCustomEvent(type, bubbles, cancelable, detail)": [
    "bubbles",
    "cancelable",
    "detail",
    "type"
  ],
  "CustomEventInit": [
    "detail"
  ],
  "DOMException": [
    "ABORT_ERR",
    "DATA_CLONE_ERR",
    "DOMException()",
    "DOMException(message)",
    "DOMException(message, name)",
    "DOMSTRING_SIZE_ERR",
    "HIERARCHY_REQUEST_ERR",
    "INDEX_SIZE_ERR",
    "INUSE_ATTRIBUTE_ERR",
    "INVALID_ACCESS_ERR",
    "INVALID_CHARACTER_ERR",
    "INVALID_MODIFICATION_ERR",
    "INVALID_NODE_TYPE_ERR",
    "INVALID_STATE_ERR",
    "NAMESPACE_ERR",
    "NETWORK_ERR",
    "NOT_FOUND_ERR",
    "NOT_SUPPORTED_ERR",
    "NO_DATA_ALLOWED_ERR",
    "NO_MODIFICATION_ALLOWED_ERR",
    "QUOTA_EXCEEDED_ERR",
    "SECURITY_ERR",
    "SYNTAX_ERR",
    "TIMEOUT_ERR",
    "TYPE_MISMATCH_ERR",
    "URL_MISMATCH_ERR",
    "VALIDATION_ERR",
    "WRONG_DOCUMENT_ERR",
    "code",
    "constructor()",
    "constructor(message)",
    "constructor(message, name)",
    "message",
    "name"
  ],
  "DOMException/DOMException()": [
    "message",
    "name"
  ],
  "DOMException/DOMException(message)": [
    "message",
    "name"
  ],
  "DOMException/DOMException(message, name)": [
    "message",
    "name"
  ],
  "DOMException/constructor()": [
    "message",
    "name"
  ],
  "DOMException/constructor(message)": [
    "message",
    "name"
  ],
  "DOMException/constructor(message, name)": [
    "message",
    "name"
  ],
  "DOMImplementation": [
    "createDocument(namespace, qualifiedName)",
    "createDocument(namespace, qualifiedName, doctype)",
    "createDocumentType(qualifiedName, publicId, systemId)",
    "createHTMLDocument()",
    "createHTMLDocument(title)",
    "getFeature()",
    "hasFeature()"
  ],
  "DOMImplementation/createDocument(namespace, qualifiedName)": [
    "doctype",
    "namespace",
    "qualifiedName"
  ],
  "DOMImplementation/createDocument(namespace, qualifiedName, doctype)": [
    "doctype",
    "namespace",
    "qualifiedName"
  ],
  "DOMImplementation/createDocumentType(qualifiedName, publicId, systemId)": [
    "publicId",
    "qualifiedName",
    "systemId"
  ],
  "DOMImplementation/createHTMLDocument()": [
    "title"
  ],
  "DOMImplementation/createHTMLDocument(title)": [
    "title"
  ],
  "DOMMatrix": [
    "DOMMatrix()",
    "DOMMatrix(init)",
    "a",
    "b",
    "c",
    "constructor()",
    "constructor(init)",
    "d",
    "e",
    "f",
    "fromFloat32Array(array32)",
    "fromFloat64Array(array64)",
    "fromMatrix()",
    "fromMatrix(other)",
    "invertSelf()",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m41",
    "m42",
    "m43",
    "m44",
    "multiplySelf()",
    "multiplySelf(other)",
    "preMultiplySelf()",
    "preMultiplySelf(other)",
    "rotateAxisAngleSelf()",
    "rotateAxisAngleSelf(x)",
    "rotateAxisAngleSelf(x, y)",
    "rotateAxisAngleSelf(x, y, z)",
    "rotateAxisAngleSelf(x, y, z, angle)",
    "rotateFromVectorSelf()",
    "rotateFromVectorSelf(x)",
    "rotateFromVectorSelf(x, y)",
    "rotateSelf()",
    "rotateSelf(rotX)",
    "rotateSelf(rotX, rotY)",
    "rotateSelf(rotX, rotY, rotZ)",
    "scale3dSelf()",
    "scale3dSelf(scale)",
    "scale3dSelf(scale, originX)",
    "scale3dSelf(scale, originX, originY)",
    "scale3dSelf(scale, originX, originY, originZ)",
    "scaleSelf()",
    "scaleSelf(scaleX)",
    "scaleSelf(scaleX, scaleY)",
    "scaleSelf(scaleX, scaleY, scaleZ)",
    "scaleSelf(scaleX, scaleY, scaleZ, originX)",
    "scaleSelf(scaleX, scaleY, scaleZ, originX, originY)",
    "scaleSelf(scaleX, scaleY, scaleZ, originX, originY, originZ)",
    "setMatrixValue(transformList)",
    "skewXSelf()",
    "skewXSelf(sx)",
    "skewYSelf()",
    "skewYSelf(sy)",
    "translateSelf()",
    "translateSelf(tx)",
    "translateSelf(tx, ty)",
    "translateSelf(tx, ty, tz)"
  ],
  "DOMMatrix/DOMMatrix()": [
    "init"
  ],
  "DOMMatrix/DOMMatrix(init)": [
    "init"
  ],
  "DOMMatrix/constructor()": [
    "init"
  ],
  "DOMMatrix/constructor(init)": [
    "init"
  ],
  "DOMMatrix/fromFloat32Array(array32)": [
    "array32"
  ],
  "DOMMatrix/fromFloat64Array(array64)": [
    "array64"
  ],
  "DOMMatrix/fromMatrix()": [
    "other"
  ],
  "DOMMatrix/fromMatrix(other)": [
    "other"
  ],
  "DOMMatrix/multiplySelf()": [
    "other"
  ],
  "DOMMatrix/multiplySelf(other)": [
    "other"
  ],
  "DOMMatrix/preMultiplySelf()": [
    "other"
  ],
  "DOMMatrix/preMultiplySelf(other)": [
    "other"
  ],
  "DOMMatrix/rotateAxisAngleSelf()": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrix/rotateAxisAngleSelf(x)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrix/rotateAxisAngleSelf(x, y)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrix/rotateAxisAngleSelf(x, y, z)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrix/rotateAxisAngleSelf(x, y, z, angle)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrix/rotateFromVectorSelf()": [
    "x",
    "y"
  ],
  "DOMMatrix/rotateFromVectorSelf(x)": [
    "x",
    "y"
  ],
  "DOMMatrix/rotateFromVectorSelf(x, y)": [
    "x",
    "y"
  ],
  "DOMMatrix/rotateSelf()": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrix/rotateSelf(rotX)": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrix/rotateSelf(rotX, rotY)": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrix/rotateSelf(rotX, rotY, rotZ)": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrix/scale3dSelf()": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrix/scale3dSelf(scale)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrix/scale3dSelf(scale, originX)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrix/scale3dSelf(scale, originX, originY)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrix/scale3dSelf(scale, originX, originY, originZ)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrix/scaleSelf()": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/scaleSelf(scaleX)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/scaleSelf(scaleX, scaleY)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/scaleSelf(scaleX, scaleY, scaleZ)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/scaleSelf(scaleX, scaleY, scaleZ, originX)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/scaleSelf(scaleX, scaleY, scaleZ, originX, originY)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/scaleSelf(scaleX, scaleY, scaleZ, originX, originY, originZ)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/setMatrixValue(transformList)": [
    "transformList"
  ],
  "DOMMatrix/skewXSelf()": [
    "sx"
  ],
  "DOMMatrix/skewXSelf(sx)": [
    "sx"
  ],
  "DOMMatrix/skewYSelf()": [
    "sy"
  ],
  "DOMMatrix/skewYSelf(sy)": [
    "sy"
  ],
  "DOMMatrix/translateSelf()": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrix/translateSelf(tx)": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrix/translateSelf(tx, ty)": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrix/translateSelf(tx, ty, tz)": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrix2DInit": [
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "m11",
    "m12",
    "m21",
    "m22",
    "m41",
    "m42"
  ],
  "DOMMatrixInit": [
    "is2D",
    "m13",
    "m14",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m43",
    "m44"
  ],
  "DOMMatrixReadOnly": [
    "DOMMatrixReadOnly()",
    "DOMMatrixReadOnly(init)",
    "a",
    "b",
    "c",
    "constructor()",
    "constructor(init)",
    "d",
    "e",
    "f",
    "flipX()",
    "flipY()",
    "fromFloat32Array(array32)",
    "fromFloat64Array(array64)",
    "fromMatrix()",
    "fromMatrix(other)",
    "inverse()",
    "is2D",
    "isIdentity",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m41",
    "m42",
    "m43",
    "m44",
    "multiply()",
    "multiply(other)",
    "rotate()",
    "rotate(rotX)",
    "rotate(rotX, rotY)",
    "rotate(rotX, rotY, rotZ)",
    "rotateAxisAngle()",
    "rotateAxisAngle(x)",
    "rotateAxisAngle(x, y)",
    "rotateAxisAngle(x, y, z)",
    "rotateAxisAngle(x, y, z, angle)",
    "rotateFromVector()",
    "rotateFromVector(x)",
    "rotateFromVector(x, y)",
    "scale()",
    "scale(scaleX)",
    "scale(scaleX, scaleY)",
    "scale(scaleX, scaleY, scaleZ)",
    "scale(scaleX, scaleY, scaleZ, originX)",
    "scale(scaleX, scaleY, scaleZ, originX, originY)",
    "scale(scaleX, scaleY, scaleZ, originX, originY, originZ)",
    "scale3d()",
    "scale3d(scale)",
    "scale3d(scale, originX)",
    "scale3d(scale, originX, originY)",
    "scale3d(scale, originX, originY, originZ)",
    "scaleNonUniform()",
    "scaleNonUniform(scaleX)",
    "scaleNonUniform(scaleX, scaleY)",
    "skewX()",
    "skewX(sx)",
    "skewY()",
    "skewY(sy)",
    "stringification behavior",
    "stringificationbehavior",
    "toFloat32Array()",
    "toFloat64Array()",
    "toJSON",
    "toJSON()",
    "transformPoint()",
    "transformPoint(point)",
    "translate()",
    "translate(tx)",
    "translate(tx, ty)",
    "translate(tx, ty, tz)"
  ],
  "DOMMatrixReadOnly/DOMMatrixReadOnly()": [
    "init"
  ],
  "DOMMatrixReadOnly/DOMMatrixReadOnly(init)": [
    "init"
  ],
  "DOMMatrixReadOnly/constructor()": [
    "init"
  ],
  "DOMMatrixReadOnly/constructor(init)": [
    "init"
  ],
  "DOMMatrixReadOnly/fromFloat32Array(array32)": [
    "array32"
  ],
  "DOMMatrixReadOnly/fromFloat64Array(array64)": [
    "array64"
  ],
  "DOMMatrixReadOnly/fromMatrix()": [
    "other"
  ],
  "DOMMatrixReadOnly/fromMatrix(other)": [
    "other"
  ],
  "DOMMatrixReadOnly/multiply()": [
    "other"
  ],
  "DOMMatrixReadOnly/multiply(other)": [
    "other"
  ],
  "DOMMatrixReadOnly/rotate()": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrixReadOnly/rotate(rotX)": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrixReadOnly/rotate(rotX, rotY)": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrixReadOnly/rotate(rotX, rotY, rotZ)": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrixReadOnly/rotateAxisAngle()": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrixReadOnly/rotateAxisAngle(x)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrixReadOnly/rotateAxisAngle(x, y)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrixReadOnly/rotateAxisAngle(x, y, z)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrixReadOnly/rotateAxisAngle(x, y, z, angle)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrixReadOnly/rotateFromVector()": [
    "x",
    "y"
  ],
  "DOMMatrixReadOnly/rotateFromVector(x)": [
    "x",
    "y"
  ],
  "DOMMatrixReadOnly/rotateFromVector(x, y)": [
    "x",
    "y"
  ],
  "DOMMatrixReadOnly/scale()": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale(scaleX)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale(scaleX, scaleY)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale(scaleX, scaleY, scaleZ)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale(scaleX, scaleY, scaleZ, originX)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale(scaleX, scaleY, scaleZ, originX, originY)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale(scaleX, scaleY, scaleZ, originX, originY, originZ)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale3d()": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrixReadOnly/scale3d(scale)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrixReadOnly/scale3d(scale, originX)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrixReadOnly/scale3d(scale, originX, originY)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrixReadOnly/scale3d(scale, originX, originY, originZ)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrixReadOnly/scaleNonUniform()": [
    "scaleX",
    "scaleY"
  ],
  "DOMMatrixReadOnly/scaleNonUniform(scaleX)": [
    "scaleX",
    "scaleY"
  ],
  "DOMMatrixReadOnly/scaleNonUniform(scaleX, scaleY)": [
    "scaleX",
    "scaleY"
  ],
  "DOMMatrixReadOnly/skewX()": [
    "sx"
  ],
  "DOMMatrixReadOnly/skewX(sx)": [
    "sx"
  ],
  "DOMMatrixReadOnly/skewY()": [
    "sy"
  ],
  "DOMMatrixReadOnly/skewY(sy)": [
    "sy"
  ],
  "DOMMatrixReadOnly/transformPoint()": [
    "point"
  ],
  "DOMMatrixReadOnly/transformPoint(point)": [
    "point"
  ],
  "DOMMatrixReadOnly/translate()": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrixReadOnly/translate(tx)": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrixReadOnly/translate(tx, ty)": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrixReadOnly/translate(tx, ty, tz)": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMParser": [
    "parseFromString(string, type)"
  ],
  "DOMParserSupportedType": [
    "text/html\""
  ],
  "DOMPoint": [
    "DOMPoint()",
    "DOMPoint(x)",
    "DOMPoint(x, y)",
    "DOMPoint(x, y, z)",
    "DOMPoint(x, y, z, w)",
    "constructor()",
    "constructor(x)",
    "constructor(x, y)",
    "constructor(x, y, z)",
    "constructor(x, y, z, w)",
    "fromPoint()",
    "fromPoint(other)",
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/DOMPoint()": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/DOMPoint(x)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/DOMPoint(x, y)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/DOMPoint(x, y, z)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/DOMPoint(x, y, z, w)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/constructor()": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/constructor(x)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/constructor(x, y)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/constructor(x, y, z)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/constructor(x, y, z, w)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/fromPoint()": [
    "other"
  ],
  "DOMPoint/fromPoint(other)": [
    "other"
  ],
  "DOMPointInit": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly": [
    "DOMPointReadOnly()",
    "DOMPointReadOnly(x)",
    "DOMPointReadOnly(x, y)",
    "DOMPointReadOnly(x, y, z)",
    "DOMPointReadOnly(x, y, z, w)",
    "constructor()",
    "constructor(x)",
    "constructor(x, y)",
    "constructor(x, y, z)",
    "constructor(x, y, z, w)",
    "fromPoint()",
    "fromPoint(other)",
    "matrixTransform()",
    "matrixTransform(matrix)",
    "toJSON",
    "toJSON()",
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/DOMPointReadOnly()": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/DOMPointReadOnly(x)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/DOMPointReadOnly(x, y)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/DOMPointReadOnly(x, y, z)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/DOMPointReadOnly(x, y, z, w)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/constructor()": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/constructor(x)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/constructor(x, y)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/constructor(x, y, z)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/constructor(x, y, z, w)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/fromPoint()": [
    "other"
  ],
  "DOMPointReadOnly/fromPoint(other)": [
    "other"
  ],
  "DOMPointReadOnly/matrixTransform()": [
    "matrix"
  ],
  "DOMPointReadOnly/matrixTransform(matrix)": [
    "matrix"
  ],
  "DOMQuad": [
    "DOMQuad()",
    "DOMQuad(p1)",
    "DOMQuad(p1, p2)",
    "DOMQuad(p1, p2, p3)",
    "DOMQuad(p1, p2, p3, p4)",
    "constructor()",
    "constructor(p1)",
    "constructor(p1, p2)",
    "constructor(p1, p2, p3)",
    "constructor(p1, p2, p3, p4)",
    "fromQuad()",
    "fromQuad(other)",
    "fromRect()",
    "fromRect(other)",
    "getBounds()",
    "p1",
    "p2",
    "p3",
    "p4",
    "toJSON",
    "toJSON()"
  ],
  "DOMQuad/DOMQuad()": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/DOMQuad(p1)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/DOMQuad(p1, p2)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/DOMQuad(p1, p2, p3)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/DOMQuad(p1, p2, p3, p4)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/constructor()": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/constructor(p1)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/constructor(p1, p2)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/constructor(p1, p2, p3)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/constructor(p1, p2, p3, p4)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/fromQuad()": [
    "other"
  ],
  "DOMQuad/fromQuad(other)": [
    "other"
  ],
  "DOMQuad/fromRect()": [
    "other"
  ],
  "DOMQuad/fromRect(other)": [
    "other"
  ],
  "DOMQuadInit": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMRect": [
    "DOMRect()",
    "DOMRect(x)",
    "DOMRect(x, y)",
    "DOMRect(x, y, width)",
    "DOMRect(x, y, width, height)",
    "constructor()",
    "constructor(x)",
    "constructor(x, y)",
    "constructor(x, y, width)",
    "constructor(x, y, width, height)",
    "fromRect()",
    "fromRect(other)",
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/DOMRect()": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/DOMRect(x)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/DOMRect(x, y)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/DOMRect(x, y, width)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/DOMRect(x, y, width, height)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/constructor()": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/constructor(x)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/constructor(x, y)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/constructor(x, y, width)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/constructor(x, y, width, height)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/fromRect()": [
    "other"
  ],
  "DOMRect/fromRect(other)": [
    "other"
  ],
  "DOMRectInit": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectList": [
    "item(index)",
    "length"
  ],
  "DOMRectList/item(index)": [
    "index"
  ],
  "DOMRectReadOnly": [
    "DOMRectReadOnly()",
    "DOMRectReadOnly(x)",
    "DOMRectReadOnly(x, y)",
    "DOMRectReadOnly(x, y, width)",
    "DOMRectReadOnly(x, y, width, height)",
    "bottom",
    "constructor()",
    "constructor(x)",
    "constructor(x, y)",
    "constructor(x, y, width)",
    "constructor(x, y, width, height)",
    "fromRect()",
    "fromRect(other)",
    "height",
    "left",
    "right",
    "toJSON",
    "toJSON()",
    "top",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly DOMRect": [
    "bottom",
    "height",
    "left",
    "right",
    "top",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/DOMRectReadOnly()": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/DOMRectReadOnly(x)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/DOMRectReadOnly(x, y)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/DOMRectReadOnly(x, y, width)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/DOMRectReadOnly(x, y, width, height)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/constructor()": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/constructor(x)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/constructor(x, y)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/constructor(x, y, width)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/constructor(x, y, width, height)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/fromRect()": [
    "other"
  ],
  "DOMRectReadOnly/fromRect(other)": [
    "other"
  ],
  "DOMStringList": [
    "contains(string)",
    "item(index)",
    "length"
  ],
  "DOMTokenList": [
    "add()",
    "add(...tokens)",
    "add(tokens)",
    "contains(token)",
    "item(index)",
    "length",
    "remove()",
    "remove(...tokens)",
    "remove(tokens)",
    "replace(token, newToken)",
    "serialize steps",
    "stringification behavior",
    "supports(token)",
    "toggle(token)",
    "toggle(token, force)",
    "token set",
    "update steps",
    "validation steps",
    "value"
  ],
  "DOMTokenList/add()": [
    "tokens"
  ],
  "DOMTokenList/add(...tokens)": [
    "tokens"
  ],
  "DOMTokenList/contains(token)": [
    "token"
  ],
  "DOMTokenList/item(index)": [
    "index"
  ],
  "DOMTokenList/remove()": [
    "tokens"
  ],
  "DOMTokenList/remove(...tokens)": [
    "tokens"
  ],
  "DOMTokenList/replace(token, newToken)": [
    "newToken",
    "token"
  ],
  "DOMTokenList/supports(token)": [
    "token"
  ],
  "DOMTokenList/toggle(token)": [
    "force",
    "token"
  ],
  "DOMTokenList/toggle(token, force)": [
    "force",
    "token"
  ],
  "DataTransfer": [
    "DataTransfer()",
    "clearData()",
    "dropEffect",
    "effectAllowed",
    "files",
    "getData(format)",
    "items",
    "setData(format, data)",
    "setDragImage(image, x, y)",
    "types"
  ],
  "DataTransferItem": [
    "getAsFile()",
    "getAsString(callback)",
    "kind",
    "type"
  ],
  "DataTransferItemList": [
    "add()",
    "clear()",
    "length",
    "remove(index)"
  ],
  "DeadFragmentInformation": [
    "children",
    "height",
    "isOverflowed",
    "left",
    "nextInBox",
    "nextSibling",
    "node",
    "previousInBox",
    "previousSibling",
    "top",
    "width"
  ],
  "DecodeErrorCallback": [
    "error"
  ],
  "DecodeSuccessCallback": [
    "decodedData"
  ],
  "DedicatedWorkerGlobalScope": [
    "close()",
    "message",
    "messageerror",
    "name",
    "onmessage",
    "onmessageerror",
    "postMessage(message)",
    "postMessage(message, transfer)"
  ],
  "DelayNode": [
    "DelayNode(context)",
    "DelayNode(context, options)",
    "constructor",
    "constructor(context)",
    "constructor(context, options)",
    "delayTime"
  ],
  "DelayNode/DelayNode(context)": [
    "context",
    "options"
  ],
  "DelayNode/DelayNode(context, options)": [
    "context",
    "options"
  ],
  "DelayNode/constructor()": [
    "DelayNode(context, options)",
    "context",
    "options"
  ],
  "DelayNode/constructor(context)": [
    "context",
    "options"
  ],
  "DelayNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "DelayOptions": [
    "delayTime",
    "maxDelayTime"
  ],
  "DevicePermissionDescriptor": [
    "deviceId"
  ],
  "DiscoverableCredentialMetadata": [
    "id",
    "otherui",
    "type"
  ],
  "DistanceModelType": [
    "\"exponential\"",
    "\"inverse\"",
    "\"linear\"",
    "exponential",
    "inverse",
    "linear"
  ],
  "Document": [
    "DOMContentLoaded",
    "Document()",
    "URL",
    "[[defaultOrientation]]",
    "[[orientationLock]]",
    "[[orientationPendingPromise]]",
    "[[resizeObservers]]",
    "active sandboxing flag set",
    "adoptNode(node)",
    "alinkColor",
    "all",
    "anchors",
    "applets",
    "bgColor",
    "body",
    "browsing context",
    "captureEvents()",
    "caretPositionFromPoint(x, y)",
    "characterSet",
    "charset",
    "clear()",
    "close()",
    "compatMode",
    "constructor()",
    "content type",
    "contentType",
    "cookie",
    "createAttribute(localName)",
    "createAttributeNS(namespace, qualifiedName)",
    "createCDATASection(data)",
    "createComment(data)",
    "createDocumentFragment()",
    "createElement(localName)",
    "createElement(localName, options)",
    "createElementNS(namespace, qualifiedName)",
    "createElementNS(namespace, qualifiedName, options)",
    "createEntityReference()",
    "createEvent(interface)",
    "createNodeIterator(root)",
    "createNodeIterator(root, whatToShow)",
    "createNodeIterator(root, whatToShow, filter)",
    "createProcessingInstruction(target, data)",
    "createRange()",
    "createTextNode(data)",
    "createTreeWalker(root)",
    "createTreeWalker(root, whatToShow)",
    "createTreeWalker(root, whatToShow, filter)",
    "currentScript",
    "defaultView",
    "designMode",
    "dir",
    "doctype",
    "document.write(...)",
    "document.writeln(...)",
    "documentElement",
    "documentURI",
    "domConfig",
    "domain",
    "elementFromPoint(x, y)",
    "elementsFromPoint(x, y)",
    "embeds",
    "encoding",
    "exitFullscreen()",
    "fgColor",
    "forms",
    "fullscreen",
    "fullscreenEnabled",
    "fullscreenchange",
    "fullscreenerror",
    "fully active",
    "getElementsByClassName(classNames)",
    "getElementsByName(elementName)",
    "getElementsByTagName(qualifiedName)",
    "getElementsByTagNameNS(namespace, localName)",
    "hasFocus()",
    "head",
    "hidden",
    "images",
    "implementation",
    "importNode(node)",
    "importNode(node, deep)",
    "inputEncoding",
    "intersectionobservertaskqueued",
    "lastModified",
    "layoutNow",
    "layoutNow()",
    "linkColor",
    "links",
    "load timing info",
    "location",
    "measureElement",
    "measureElement(element)",
    "measureText",
    "measureText(text, styleMap)",
    "mode",
    "namedFlows",
    "navigation timing entry",
    "normalizeDocument()",
    "onabort",
    "onanimationcancel",
    "onanimationend",
    "onanimationiteration",
    "onanimationstart",
    "onauxclick",
    "onbeforeinput",
    "onbeforematch",
    "oncancel",
    "oncanplay",
    "oncanplaythrough",
    "onchange",
    "onclick",
    "onclose",
    "oncontextlost",
    "oncontextmenu",
    "oncontextrestored",
    "oncuechange",
    "ondblclick",
    "ondrag",
    "ondragend",
    "ondragenter",
    "ondragleave",
    "ondragover",
    "ondragstart",
    "ondrop",
    "ondurationchange",
    "onemptied",
    "onended",
    "onformdata",
    "onfullscreenchange",
    "onfullscreenerror",
    "oninput",
    "oninvalid",
    "onkeydown",
    "onkeypress",
    "onkeyup",
    "onloadeddata",
    "onloadedmetadata",
    "onloadstart",
    "onmousedown",
    "onmouseenter",
    "onmouseleave",
    "onmousemove",
    "onmouseout",
    "onmouseover",
    "onmouseup",
    "onpause",
    "onplay",
    "onplaying",
    "onprogress",
    "onratechange",
    "onreadystatechange",
    "onreset",
    "onsecuritypolicyviolation",
    "onseeked",
    "onseeking",
    "onselect",
    "onslotchange",
    "onstalled",
    "onsubmit",
    "onsuspend",
    "ontimeupdate",
    "ontoggle",
    "onvisibilitychange",
    "onvolumechange",
    "onwaiting",
    "onwebkitanimationend",
    "onwebkitanimationiteration",
    "onwebkitanimationstart",
    "onwebkittransitionend",
    "onwheel",
    "open(unused1, unused2)",
    "open(url, name, features)",
    "origin",
    "pending scroll event targets",
    "permissions policy",
    "permissionsPolicy",
    "plugins",
    "policy container",
    "policy object",
    "previous document unload timing",
    "processed manifest",
    "queryCommandEnabled()",
    "queryCommandIndeterm()",
    "queryCommandState()",
    "queryCommandSupported()",
    "queryCommandValue()",
    "readyState",
    "readystatechange",
    "referrer",
    "releaseEvents()",
    "renameNode()",
    "resizeObservers",
    "run the resize steps",
    "run the scroll steps",
    "scripts",
    "scroll",
    "scrollend",
    "scrollingElement",
    "strictErrorChecking",
    "timeline",
    "title",
    "type",
    "url",
    "visibility state",
    "visibility states",
    "visibilityState",
    "visibilitychange",
    "visible",
    "vlinkColor",
    "will declaratively refresh",
    "xmlEncoding",
    "xmlStandalone",
    "xmlVersion"
  ],
  "Document/adoptNode(node)": [
    "node"
  ],
  "Document/caretPositionFromPoint(x, y)": [
    "x",
    "y"
  ],
  "Document/createAttribute(localName)": [
    "localName"
  ],
  "Document/createAttributeNS(namespace, qualifiedName)": [
    "namespace",
    "qualifiedName"
  ],
  "Document/createCDATASection(data)": [
    "data"
  ],
  "Document/createComment(data)": [
    "data"
  ],
  "Document/createElement(localName)": [
    "localName",
    "options"
  ],
  "Document/createElement(localName, options)": [
    "localName",
    "options"
  ],
  "Document/createElementNS(namespace, qualifiedName)": [
    "namespace",
    "options",
    "qualifiedName"
  ],
  "Document/createElementNS(namespace, qualifiedName, options)": [
    "namespace",
    "options",
    "qualifiedName"
  ],
  "Document/createEvent(interface)": [
    "interface"
  ],
  "Document/createNodeIterator(root)": [
    "filter",
    "root",
    "whatToShow"
  ],
  "Document/createNodeIterator(root, whatToShow)": [
    "filter",
    "root",
    "whatToShow"
  ],
  "Document/createNodeIterator(root, whatToShow, filter)": [
    "filter",
    "root",
    "whatToShow"
  ],
  "Document/createProcessingInstruction(target, data)": [
    "data",
    "target"
  ],
  "Document/createTextNode(data)": [
    "data"
  ],
  "Document/createTreeWalker(root)": [
    "filter",
    "root",
    "whatToShow"
  ],
  "Document/createTreeWalker(root, whatToShow)": [
    "filter",
    "root",
    "whatToShow"
  ],
  "Document/createTreeWalker(root, whatToShow, filter)": [
    "filter",
    "root",
    "whatToShow"
  ],
  "Document/elementFromPoint(x, y)": [
    "x",
    "y"
  ],
  "Document/elementsFromPoint(x, y)": [
    "x",
    "y"
  ],
  "Document/getElementsByClassName(classNames)": [
    "classNames"
  ],
  "Document/getElementsByTagName(qualifiedName)": [
    "qualifiedName"
  ],
  "Document/getElementsByTagNameNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "Document/importNode(node)": [
    "deep",
    "node"
  ],
  "Document/importNode(node, deep)": [
    "deep",
    "node"
  ],
  "Document/measureElement(element)": [
    "element"
  ],
  "Document/measureText(text, styleMap)": [
    "styleMap",
    "text"
  ],
  "DocumentAndElementEventHandlers": [
    "oncopy",
    "oncut",
    "onpaste"
  ],
  "DocumentFragment": [
    "DocumentFragment()",
    "constructor()",
    "host"
  ],
  "DocumentOrShadowRoot": [
    "activeElement",
    "adoptedStyleSheets",
    "document or shadow root css style sheets",
    "final css style sheets",
    "fullscreenElement",
    "getAnimations()",
    "styleSheets"
  ],
  "DocumentTimeline": [
    "DocumentTimeline (options)",
    "DocumentTimeline()",
    "DocumentTimeline(options)",
    "constructor()",
    "constructor(options)"
  ],
  "DocumentTimeline/DocumentTimeline(options)": [
    "options"
  ],
  "DocumentTimelineOptions": [
    "originTime"
  ],
  "DocumentType": [
    "entities",
    "internalSubset",
    "name",
    "notations",
    "public id",
    "publicId",
    "system id",
    "systemId"
  ],
  "DoubleRange": [
    "max",
    "min"
  ],
  "DragEvent": [
    "dataTransfer"
  ],
  "DynamicsCompressorNode": [
    "DynamicsCompressorNode(context)",
    "DynamicsCompressorNode(context, options)",
    "[[compressor gain]]",
    "[[detector average]]",
    "[[internal reduction]]",
    "attack",
    "constructor",
    "constructor(context)",
    "constructor(context, options)",
    "knee",
    "ratio",
    "reduction",
    "release",
    "threshold"
  ],
  "DynamicsCompressorNode/DynamicsCompressorNode(context)": [
    "context",
    "options"
  ],
  "DynamicsCompressorNode/DynamicsCompressorNode(context, options)": [
    "context",
    "options"
  ],
  "DynamicsCompressorNode/constructor()": [
    "DynamicsCompressorNode(context, options)",
    "context",
    "options"
  ],
  "DynamicsCompressorNode/constructor(context)": [
    "context",
    "options"
  ],
  "DynamicsCompressorNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "DynamicsCompressorOptions": [
    "attack",
    "knee",
    "ratio",
    "release",
    "threshold"
  ],
  "ECMAScript": [
    "ecmascript throw"
  ],
  "EcKeyAlgorithm": [
    "namedCurve"
  ],
  "EcKeyGenParams": [
    "namedCurve"
  ],
  "EcKeyImportParams": [
    "namedCurve"
  ],
  "EcdhKeyDeriveParams": [
    "public"
  ],
  "EcdsaParams": [
    "hash"
  ],
  "Edge": [
    "\"end\"",
    "\"start\""
  ],
  "EffectCallback": [
    "animation",
    "currentTarget",
    "progress"
  ],
  "EffectTiming": [
    "delay",
    "direction",
    "duration",
    "easing",
    "endDelay",
    "fill",
    "iterationStart",
    "iterations",
    "playbackRate"
  ],
  "Element": [
    "[[RegisteredIntersectionObservers]]",
    "[[computedStyleMapCache]]",
    "attachShadow(init)",
    "attr-associated element",
    "attr-associated elements",
    "attribute list",
    "attributes",
    "checkVisibility()",
    "checkVisibility(options)",
    "class",
    "classList",
    "className",
    "clientHeight",
    "clientLeft",
    "clientTop",
    "clientWidth",
    "closest(selectors)",
    "computedStyleMap()",
    "custom",
    "custom element definition",
    "custom element state",
    "defined",
    "focusableAreas()",
    "focusableAreas(option)",
    "fullscreenchange",
    "fullscreenerror",
    "getAttribute(qualifiedName)",
    "getAttributeNS(namespace, localName)",
    "getAttributeNames()",
    "getAttributeNode(qualifiedName)",
    "getAttributeNodeNS(namespace, localName)",
    "getBoundingClientRect()",
    "getClientRects()",
    "getElementsByClassName(classNames)",
    "getElementsByTagName(qualifiedName)",
    "getElementsByTagNameNS(namespace, localName)",
    "getFragmentInformation",
    "getFragmentInformation(filter)",
    "getSpatialNavigationContainer()",
    "hasAttribute(qualifiedName)",
    "hasAttributeNS(namespace, localName)",
    "hasAttributes()",
    "hasPointerCapture",
    "hasPointerCapture()",
    "hasPointerCapture(pointerId)",
    "html-uppercased qualified name",
    "id",
    "insertAdjacentElement(where, element)",
    "insertAdjacentText(where, data)",
    "is value",
    "local name",
    "localName",
    "matches(selectors)",
    "namespace",
    "namespace prefix",
    "namespaceURI",
    "onfullscreenchange",
    "onfullscreenerror",
    "part",
    "prefix",
    "pseudo(CSSOMString type)",
    "pseudo(type)",
    "qualified name",
    "releasePointerCapture()",
    "releasePointerCapture(pointerId)",
    "removeAttribute(qualifiedName)",
    "removeAttributeNS(namespace, localName)",
    "removeAttributeNode(attr)",
    "requestFullscreen()",
    "requestFullscreen(options)",
    "schemaTypeInfo",
    "scroll",
    "scroll()",
    "scroll(options)",
    "scroll(x, y)",
    "scrollBy()",
    "scrollBy(options)",
    "scrollBy(x, y)",
    "scrollHeight",
    "scrollIntoView()",
    "scrollIntoView(arg)",
    "scrollLeft",
    "scrollTo()",
    "scrollTo(options)",
    "scrollTo(x, y)",
    "scrollTop",
    "scrollWidth",
    "scrollend",
    "setAttribute(qualifiedName, value)",
    "setAttributeNS(namespace, qualifiedName, value)",
    "setAttributeNode(attr)",
    "setAttributeNodeNS(attr)",
    "setIdAttribute()",
    "setIdAttributeNS()",
    "setIdAttributeNode()",
    "setPointerCapture()",
    "setPointerCapture(pointerId)",
    "shadow host",
    "shadow root",
    "shadowRoot",
    "slot",
    "spatialNavigationSearch",
    "spatialNavigationSearch(dir)",
    "spatialNavigationSearch(dir, options)",
    "spatialNavigationSearch(options)",
    "tagName",
    "toggleAttribute(qualifiedName)",
    "toggleAttribute(qualifiedName, force)",
    "webkitMatchesSelector(selectors)"
  ],
  "Element/attachShadow(init)": [
    "init"
  ],
  "Element/checkVisibility()": [
    "options"
  ],
  "Element/checkVisibility(options)": [
    "options"
  ],
  "Element/closest(selectors)": [
    "selectors"
  ],
  "Element/focusableAreas()": [
    "option"
  ],
  "Element/focusableAreas(option)": [
    "option"
  ],
  "Element/getAttribute(qualifiedName)": [
    "qualifiedName"
  ],
  "Element/getAttributeNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "Element/getAttributeNode(qualifiedName)": [
    "qualifiedName"
  ],
  "Element/getAttributeNodeNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "Element/getElementsByClassName(classNames)": [
    "classNames"
  ],
  "Element/getElementsByTagName(qualifiedName)": [
    "qualifiedName"
  ],
  "Element/getElementsByTagNameNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "Element/getFragmentInformation(filter)": [
    "filter"
  ],
  "Element/hasAttribute(qualifiedName)": [
    "qualifiedName"
  ],
  "Element/hasAttributeNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "Element/insertAdjacentElement(where, element)": [
    "element",
    "where"
  ],
  "Element/insertAdjacentText(where, data)": [
    "data",
    "where"
  ],
  "Element/matches(selectors)": [
    "selectors"
  ],
  "Element/pseudo(type)": [
    "type"
  ],
  "Element/removeAttribute(qualifiedName)": [
    "qualifiedName"
  ],
  "Element/removeAttributeNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "Element/removeAttributeNode(attr)": [
    "attr"
  ],
  "Element/requestFullscreen()": [
    "options"
  ],
  "Element/requestFullscreen(options)": [
    "options"
  ],
  "Element/scroll()": [
    "options"
  ],
  "Element/scroll(options)": [
    "options"
  ],
  "Element/scroll(x, y)": [
    "x",
    "y"
  ],
  "Element/scrollBy()": [
    "options"
  ],
  "Element/scrollBy(options)": [
    "options"
  ],
  "Element/scrollBy(x, y)": [
    "x",
    "y"
  ],
  "Element/scrollIntoView()": [
    "arg"
  ],
  "Element/scrollIntoView(arg)": [
    "arg"
  ],
  "Element/scrollTo()": [
    "options"
  ],
  "Element/scrollTo(options)": [
    "options"
  ],
  "Element/scrollTo(x, y)": [
    "x",
    "y"
  ],
  "Element/setAttribute(qualifiedName, value)": [
    "qualifiedName",
    "value"
  ],
  "Element/setAttributeNS(namespace, qualifiedName, value)": [
    "namespace",
    "qualifiedName",
    "value"
  ],
  "Element/setAttributeNode(attr)": [
    "attr"
  ],
  "Element/setAttributeNodeNS(attr)": [
    "attr"
  ],
  "Element/spatialNavigationSearch(dir)": [
    "dir",
    "options"
  ],
  "Element/spatialNavigationSearch(dir, options)": [
    "dir",
    "options"
  ],
  "Element/toggleAttribute(qualifiedName)": [
    "force",
    "qualifiedName"
  ],
  "Element/toggleAttribute(qualifiedName, force)": [
    "force",
    "qualifiedName"
  ],
  "Element/webkitMatchesSelector(selectors)": [
    "selectors"
  ],
  "ElementBasedOffset": [
    "edge",
    "target",
    "threshold"
  ],
  "ElementCSSInlineStyle": [
    "attributeStyleMap",
    "style"
  ],
  "ElementContentEditable": [
    "contentEditable",
    "enterKeyHint",
    "inputMode",
    "isContentEditable"
  ],
  "ElementCreationOptions": [
    "is"
  ],
  "ElementInternals": [
    "checkValidity()",
    "form",
    "labels",
    "reportValidity()",
    "setFormValue(value, state)",
    "setValidity(flags, message, anchor)",
    "shadowRoot",
    "validationMessage",
    "validity",
    "willValidate"
  ],
  "EndingType": [
    "\"native\"",
    "\"transparent\""
  ],
  "Environment": [
    "ready promise"
  ],
  "ErrorEvent": [
    "colno",
    "error",
    "filename",
    "lineno",
    "message"
  ],
  "Event": [
    "AT_TARGET",
    "BUBBLING_PHASE",
    "CAPTURING_PHASE",
    "Event(type)",
    "Event(type, eventInitDict)",
    "NONE",
    "bubbles",
    "cancelBubble",
    "cancelable",
    "canceled flag",
    "composed",
    "composed flag",
    "composedPath()",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "currentTarget",
    "defaultPrevented",
    "dispatch flag",
    "eventPhase",
    "flatten",
    "flatten more",
    "in passive listener flag",
    "initEvent(type)",
    "initEvent(type, bubbles)",
    "initEvent(type, bubbles, cancelable)",
    "initialize",
    "initialized flag",
    "isTrusted",
    "path",
    "preventDefault()",
    "relatedtarget",
    "returnValue",
    "srcElement",
    "stop immediate propagation flag",
    "stop propagation flag",
    "stopImmediatePropagation()",
    "stopPropagation()",
    "target",
    "timeStamp",
    "touch target list",
    "type"
  ],
  "Event/Event(type)": [
    "eventInitDict",
    "type"
  ],
  "Event/Event(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "Event/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "Event/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "Event/initEvent(type)": [
    "bubbles",
    "cancelable",
    "type"
  ],
  "Event/initEvent(type, bubbles)": [
    "bubbles",
    "cancelable",
    "type"
  ],
  "Event/initEvent(type, bubbles, cancelable)": [
    "bubbles",
    "cancelable",
    "type"
  ],
  "Event/path": [
    "invocation target",
    "invocation-target-in-shadow-tree",
    "relatedtarget",
    "root-of-closed-tree",
    "shadow-adjusted target",
    "slot-in-closed-tree",
    "touch target list"
  ],
  "EventInit": [
    "bubbles",
    "cancelable",
    "composed"
  ],
  "EventListener": [
    "handleEvent",
    "handleEvent(event)"
  ],
  "EventListener/handleEvent(event)": [
    "event"
  ],
  "EventListenerOptions": [
    "capture"
  ],
  "EventModifierInit": [
    "altKey",
    "ctrlKey",
    "metaKey",
    "modifierAltGraph",
    "modifierCapsLock",
    "modifierFn",
    "modifierFnLock",
    "modifierHyper",
    "modifierNumLock",
    "modifierScrollLock",
    "modifierSuper",
    "modifierSymbol",
    "modifierSymbolLock",
    "shiftKey"
  ],
  "EventSource": [
    "CLOSED",
    "CONNECTING",
    "EventSource(url, eventSourceInitDict)",
    "OPEN",
    "close()",
    "error",
    "message",
    "onerror",
    "onmessage",
    "onopen",
    "open",
    "readyState",
    "url",
    "withCredentials"
  ],
  "EventSourceInit": [
    "withCredentials"
  ],
  "EventTarget": [
    "EventTarget()",
    "activation behavior",
    "addEventListener(type, callback)",
    "addEventListener(type, callback, options)",
    "constructor()",
    "dispatchEvent(event)",
    "event listener list",
    "legacy-canceled-activation behavior",
    "legacy-pre-activation behavior",
    "removeEventListener(type, callback)",
    "removeEventListener(type, callback, options)"
  ],
  "EventTarget/addEventListener(type, callback)": [
    "callback",
    "options",
    "type"
  ],
  "EventTarget/addEventListener(type, callback, options)": [
    "callback",
    "options",
    "type"
  ],
  "EventTarget/dispatchEvent(event)": [
    "event"
  ],
  "EventTarget/removeEventListener(type, callback)": [
    "callback",
    "options",
    "type"
  ],
  "EventTarget/removeEventListener(type, callback, options)": [
    "callback",
    "options",
    "type"
  ],
  "ExtendableEvent": [
    "ExtendableEvent(type)",
    "ExtendableEvent(type, eventInitDict)",
    "active",
    "add lifetime promise",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "extend lifetime promises",
    "pending promises count",
    "timed out flag",
    "waitUntil(f)"
  ],
  "ExtendableEvent/ExtendableEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableEvent/ExtendableEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableEvent/waitUntil(f)": [
    "f"
  ],
  "ExtendableMessageEvent": [
    "ExtendableMessageEvent(type)",
    "ExtendableMessageEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "data",
    "lastEventId",
    "origin",
    "ports",
    "source"
  ],
  "ExtendableMessageEvent/ExtendableMessageEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableMessageEvent/ExtendableMessageEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableMessageEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableMessageEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableMessageEventInit": [
    "data",
    "lastEventId",
    "origin",
    "ports",
    "source"
  ],
  "External": [
    "AddSearchProvider()",
    "IsSearchProviderInstalled()"
  ],
  "FakeWorkletGlobalScope": [
    "registerFake(type, classConstructor)"
  ],
  "FederatedCredential": [
    "FederatedCredential(data)",
    "[[CollectFromCredentialStore]](origin, options, sameOriginWithAncestors)",
    "[[Create]](origin, options, sameOriginWithAncestors)",
    "[[Store]](credential, sameOriginWithAncestors)",
    "constructor(data)",
    "federated",
    "protocol",
    "provider"
  ],
  "FederatedCredential/FederatedCredential(data)": [
    "data"
  ],
  "FederatedCredential/constructor(data)": [
    "data"
  ],
  "FederatedCredentialInit": [
    "iconURL",
    "name",
    "origin",
    "protocol",
    "provider"
  ],
  "FederatedCredentialRequestOptions": [
    "protocols",
    "providers"
  ],
  "FetchEvent": [
    "FetchEvent(type, eventInitDict)",
    "clientId",
    "constructor",
    "constructor(type, eventInitDict)",
    "handled",
    "potential response",
    "preloadResponse",
    "replacesClientId",
    "request",
    "respond-with entered flag",
    "respond-with error flag",
    "respondWith(r)",
    "resultingClientId",
    "wait to respond flag"
  ],
  "FetchEvent/FetchEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "FetchEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "FetchEvent/respondWith(r)": [
    "r"
  ],
  "FetchEventInit": [
    "clientId",
    "handled",
    "preloadResponse",
    "replacesClientId",
    "request",
    "resultingClientId"
  ],
  "File": [
    "File(fileBits, fileName)",
    "File(fileBits, fileName, options)",
    "constructor",
    "constructor(fileBits, fileName)",
    "constructor(fileBits, fileName, options)",
    "lastModified",
    "name"
  ],
  "File/File(fileBits, fileName)": [
    "options"
  ],
  "File/File(fileBits, fileName, options)": [
    "fileBits",
    "fileName",
    "options"
  ],
  "File/constructor(fileBits, fileName)": [
    "options"
  ],
  "File/constructor(fileBits, fileName, options)": [
    "options"
  ],
  "FileList": [
    "item(index)",
    "length"
  ],
  "FileList/item(index)": [
    "index"
  ],
  "FilePropertyBag": [
    "lastModified"
  ],
  "FileReader": [
    "DONE",
    "EMPTY",
    "FileReader()",
    "LOADING",
    "abort",
    "abort()",
    "constructor()",
    "error",
    "load",
    "loadend",
    "loadstart",
    "onabort",
    "onerror",
    "onload",
    "onloadend",
    "onloadstart",
    "onprogress",
    "progress",
    "readAsArrayBuffer(blob)",
    "readAsBinaryString(blob)",
    "readAsDataURL(blob)",
    "readAsText(blob)",
    "readAsText(blob, encoding)",
    "readyState",
    "result",
    "state"
  ],
  "FileReader/readAsArrayBuffer(blob)": [
    "blob"
  ],
  "FileReader/readAsBinaryString(blob)": [
    "blob"
  ],
  "FileReader/readAsDataURL(blob)": [
    "blob"
  ],
  "FileReader/readAsText(blob)": [
    "blob",
    "encoding"
  ],
  "FileReader/readAsText(blob, encoding)": [
    "blob",
    "encoding"
  ],
  "FileReaderSync": [
    "FileReaderSync()",
    "constructor",
    "constructor()",
    "readAsArrayBuffer(blob)",
    "readAsBinaryString(blob)",
    "readAsDataURL(blob)",
    "readAsText(blob)",
    "readAsText(blob, encoding)"
  ],
  "FileReaderSync/readAsArrayBuffer(blob)": [
    "blob"
  ],
  "FileReaderSync/readAsBinaryString(blob)": [
    "blob"
  ],
  "FileReaderSync/readAsDataURL(blob)": [
    "blob"
  ],
  "FileReaderSync/readAsText(blob)": [
    "blob",
    "encoding"
  ],
  "FileReaderSync/readAsText(blob, encoding)": [
    "blob",
    "encoding"
  ],
  "FileSystemCreateWritableOptions": [
    "keepExistingData"
  ],
  "FileSystemDirectoryHandle": [
    "getDirectoryHandle(name)",
    "getDirectoryHandle(name, options)",
    "getFileHandle(name)",
    "getFileHandle(name, options)",
    "removeEntry(name)",
    "removeEntry(name, options)",
    "resolve(possibleDescendant)"
  ],
  "FileSystemDirectoryHandle-iterator": [
    "past results"
  ],
  "FileSystemDirectoryHandle/getDirectoryHandle(name)": [
    "name",
    "options"
  ],
  "FileSystemDirectoryHandle/getDirectoryHandle(name, options)": [
    "name",
    "options"
  ],
  "FileSystemDirectoryHandle/getFileHandle(name)": [
    "name",
    "options"
  ],
  "FileSystemDirectoryHandle/getFileHandle(name, options)": [
    "name",
    "options"
  ],
  "FileSystemDirectoryHandle/removeEntry(name)": [
    "name",
    "options"
  ],
  "FileSystemDirectoryHandle/removeEntry(name, options)": [
    "name",
    "options"
  ],
  "FileSystemDirectoryHandle/resolve(possibleDescendant)": [
    "possibleDescendant"
  ],
  "FileSystemFileHandle": [
    "createWritable()",
    "createWritable(options)",
    "getFile()"
  ],
  "FileSystemFileHandle/createWritable()": [
    "options"
  ],
  "FileSystemFileHandle/createWritable(options)": [
    "options"
  ],
  "FileSystemGetDirectoryOptions": [
    "create"
  ],
  "FileSystemGetFileOptions": [
    "create"
  ],
  "FileSystemHandle": [
    "entry",
    "isSameEntry(other)",
    "kind",
    "name"
  ],
  "FileSystemHandle/isSameEntry(other)": [
    "other"
  ],
  "FileSystemHandleKind": [
    "\"directory\"",
    "\"file\""
  ],
  "FileSystemRemoveOptions": [
    "recursive"
  ],
  "FileSystemWritableFileStream": [
    "[[buffer]]",
    "[[file]]",
    "[[seekoffset]]",
    "seek(position)",
    "truncate(size)",
    "write(data)"
  ],
  "FileSystemWritableFileStream/seek(position)": [
    "position"
  ],
  "FileSystemWritableFileStream/truncate(size)": [
    "size"
  ],
  "FileSystemWritableFileStream/write(data)": [
    "data"
  ],
  "FillMode": [
    "\"auto\"",
    "\"backwards\"",
    "\"both\"",
    "\"forwards\"",
    "\"none\""
  ],
  "FlowControlType": [
    "hardware",
    "none"
  ],
  "FocusEvent": [
    "FocusEvent(type)",
    "FocusEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "relatedTarget"
  ],
  "FocusEvent/FocusEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "FocusEvent/FocusEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "FocusEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "FocusEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "FocusEventInit": [
    "relatedTarget"
  ],
  "FocusOptions": [
    "preventScroll"
  ],
  "FocusableAreaSearchMode": [
    "\"all\"",
    "\"visible\""
  ],
  "FocusableAreasOption": [
    "mode"
  ],
  "Font": [
    "glyphsRendered",
    "name"
  ],
  "FontFace": [
    "FontFace",
    "FontFace()",
    "FontFace(family, source)",
    "FontFace(family, source, descriptors)",
    "[[Data]]",
    "[[FontStatusPromise]]",
    "[[Urls]]",
    "ascentOverride",
    "constructor(family, source)",
    "constructor(family, source, descriptors)",
    "descentOverride",
    "display",
    "family",
    "featureSettings",
    "features",
    "lineGapOverride",
    "load()",
    "loaded",
    "palettes",
    "status",
    "stretch",
    "style",
    "unicodeRange",
    "variant",
    "variationSettings",
    "variations",
    "weight"
  ],
  "FontFace/FontFace()": [
    "descriptors",
    "family",
    "source"
  ],
  "FontFace/FontFace(family, source)": [
    "descriptors",
    "family",
    "source"
  ],
  "FontFace/FontFace(family, source, descriptors)": [
    "descriptors",
    "family",
    "source"
  ],
  "FontFace/constructor(family, source)": [
    "descriptors",
    "family",
    "source"
  ],
  "FontFace/constructor(family, source, descriptors)": [
    "descriptors",
    "family",
    "source"
  ],
  "FontFaceDescriptors": [
    "ascentOverride",
    "descentOverride",
    "display",
    "featureSettings",
    "lineGapOverride",
    "stretch",
    "style",
    "unicodeRange",
    "variant",
    "variationSettings",
    "weight"
  ],
  "FontFaceLoadStatus": [
    "\"error\"",
    "\"loaded\"",
    "\"loading\"",
    "\"unloaded\""
  ],
  "FontFacePalette": [
    "length",
    "usableWithDarkBackground",
    "usableWithLightBackground"
  ],
  "FontFacePalette/__getter__(index)": [
    "index"
  ],
  "FontFacePalettes": [
    "length"
  ],
  "FontFacePalettes/__getter__(index)": [
    "index"
  ],
  "FontFaceSet": [
    "FontFaceSet(initialFaces)",
    "[[FailedFonts]]",
    "[[LoadedFonts]]",
    "[[LoadingFonts]]",
    "[[PendingReadyPromises]]",
    "[[ReadyPromise]]",
    "add(font)",
    "check",
    "check()",
    "check(font)",
    "check(font, text)",
    "clear()",
    "constructor(initialFaces)",
    "delete(font)",
    "iteration order",
    "load",
    "load()",
    "load(font)",
    "load(font, text)",
    "loading",
    "loadingdone",
    "loadingerror",
    "onloading",
    "onloadingdone",
    "onloadingerror",
    "pending on the environment",
    "ready",
    "ready()",
    "set entries",
    "status",
    "stuck on the environment"
  ],
  "FontFaceSet/FontFaceSet(initialFaces)": [
    "initialFaces"
  ],
  "FontFaceSet/add(font)": [
    "font"
  ],
  "FontFaceSet/check()": [
    "font",
    "text"
  ],
  "FontFaceSet/check(font, text)": [
    "font",
    "text"
  ],
  "FontFaceSet/constructor(initialFaces)": [
    "initialFaces"
  ],
  "FontFaceSet/delete(font)": [
    "font"
  ],
  "FontFaceSet/load()": [
    "font",
    "text"
  ],
  "FontFaceSet/load(font, text)": [
    "font",
    "text"
  ],
  "FontFaceSetLoadEvent": [
    "FontFaceSetLoadEvent(type)",
    "FontFaceSetLoadEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "fontfaces"
  ],
  "FontFaceSetLoadEvent/FontFaceSetLoadEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "FontFaceSetLoadEvent/FontFaceSetLoadEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "FontFaceSetLoadEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "FontFaceSetLoadEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "FontFaceSetLoadEventInit": [
    "fontfaces"
  ],
  "FontFaceSetLoadStatus": [
    "\"loaded\"",
    "\"loading\""
  ],
  "FontFaceSource": [
    "fonts"
  ],
  "FontFaceVariationAxis": [
    "axisTag",
    "defaultValue",
    "maximumValue",
    "minimumValue",
    "name"
  ],
  "FontMetrics": [
    "advances",
    "baselines",
    "boundingBoxAscent",
    "boundingBoxDescent",
    "boundingBoxLeft",
    "boundingBoxRight",
    "dominantBaseline",
    "emHeightAscent",
    "emHeightDescent",
    "fontBoundingBoxAscent",
    "fontBoundingBoxDescent",
    "fonts",
    "height",
    "width"
  ],
  "FormData": [
    "FormData()",
    "FormData(form)",
    "append(name, blobValue)",
    "append(name, blobValue, filename)",
    "append(name, value)",
    "constructor()",
    "constructor(form)",
    "delete(name)",
    "entry list",
    "get(name)",
    "getAll(name)",
    "has(name)",
    "set(name, blobValue)",
    "set(name, blobValue, filename)",
    "set(name, value)"
  ],
  "FormData/FormData()": [
    "form"
  ],
  "FormData/FormData(form)": [
    "form"
  ],
  "FormData/append(name, blobValue)": [
    "blobValue",
    "filename",
    "name"
  ],
  "FormData/append(name, blobValue, filename)": [
    "blobValue",
    "filename",
    "name"
  ],
  "FormData/append(name, value)": [
    "name",
    "value"
  ],
  "FormData/constructor()": [
    "form"
  ],
  "FormData/constructor(form)": [
    "form"
  ],
  "FormData/delete(name)": [
    "name"
  ],
  "FormData/get(name)": [
    "name"
  ],
  "FormData/getAll(name)": [
    "name"
  ],
  "FormData/has(name)": [
    "name"
  ],
  "FormData/set(name, blobValue)": [
    "blobValue",
    "filename",
    "name"
  ],
  "FormData/set(name, blobValue, filename)": [
    "blobValue",
    "filename",
    "name"
  ],
  "FormData/set(name, value)": [
    "name",
    "value"
  ],
  "FormDataEvent": [
    "formData"
  ],
  "FragmentFilter": [
    "\"direct-fragments-only\"",
    "\"fragment-hierarchy\""
  ],
  "FragmentResult": [
    "FragmentResult()",
    "FragmentResult(options)",
    "[[block size]]",
    "[[box]]",
    "[[child fragments]]",
    "[[data]]",
    "[[inline size]]",
    "[[internal break token]]",
    "[[unique id]]",
    "blockSize",
    "constructor()",
    "constructor(options)",
    "inlineSize"
  ],
  "FragmentResult/FragmentResult()": [
    "options"
  ],
  "FragmentResult/FragmentResult(options)": [
    "options"
  ],
  "FragmentResult/constructor()": [
    "options"
  ],
  "FragmentResult/constructor(options)": [
    "options"
  ],
  "FragmentResultOptions": [
    "autoBlockSize",
    "blockSize",
    "breakToken",
    "childFragments",
    "data",
    "inlineSize"
  ],
  "FrameType": [
    "\"auxiliary\"",
    "\"nested\"",
    "\"none\"",
    "\"top-level\""
  ],
  "FullscreenNavigationUI": [
    "\"auto\"",
    "\"hide\"",
    "\"show\"",
    "auto",
    "hide",
    "show"
  ],
  "FullscreenOptions": [
    "navigationUI"
  ],
  "Function": [
    "arguments"
  ],
  "GainNode": [
    "GainNode(context)",
    "GainNode(context, options)",
    "constructor",
    "constructor(context)",
    "constructor(context, options)",
    "gain"
  ],
  "GainNode/GainNode(context)": [
    "context",
    "options"
  ],
  "GainNode/GainNode(context, options)": [
    "context",
    "options"
  ],
  "GainNode/constructor()": [
    "GainNode(context, options)",
    "context",
    "options"
  ],
  "GainNode/constructor(context)": [
    "context",
    "options"
  ],
  "GainNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "GainOptions": [
    "gain"
  ],
  "GenerateTestReportParameters": [
    "group",
    "message"
  ],
  "GenericTransformStream": [
    "readable",
    "transform",
    "writable"
  ],
  "GeometryUtils": [
    "convertPointFromNode(point, from)",
    "convertPointFromNode(point, from, options)",
    "convertQuadFromNode(quad, from)",
    "convertQuadFromNode(quad, from, options)",
    "convertRectFromNode(rect, from)",
    "convertRectFromNode(rect, from, options)",
    "getBoxQuads()",
    "getBoxQuads(options)"
  ],
  "GeometryUtils/convertPointFromNode(point, from)": [
    "from",
    "options",
    "point"
  ],
  "GeometryUtils/convertPointFromNode(point, from, options)": [
    "from",
    "options",
    "point"
  ],
  "GeometryUtils/convertQuadFromNode(quad, from)": [
    "from",
    "options",
    "quad"
  ],
  "GeometryUtils/convertQuadFromNode(quad, from, options)": [
    "from",
    "options",
    "quad"
  ],
  "GeometryUtils/convertRectFromNode(rect, from)": [
    "from",
    "options",
    "rect"
  ],
  "GeometryUtils/convertRectFromNode(rect, from, options)": [
    "from",
    "options",
    "rect"
  ],
  "GeometryUtils/getBoxQuads()": [
    "options"
  ],
  "GeometryUtils/getBoxQuads(options)": [
    "options"
  ],
  "GetAnimationsOptions": [
    "subtree"
  ],
  "GetNotificationOptions": [
    "tag"
  ],
  "GetRootNodeOptions": [
    "composed"
  ],
  "Global": [
    "Global(descriptor)",
    "Global(descriptor, v)",
    "constructor(descriptor)",
    "constructor(descriptor, v)",
    "value",
    "valueOf()"
  ],
  "Global/Global(descriptor)": [
    "descriptor",
    "v"
  ],
  "Global/Global(descriptor, v)": [
    "descriptor",
    "v"
  ],
  "Global/constructor(descriptor)": [
    "descriptor",
    "v"
  ],
  "Global/constructor(descriptor, v)": [
    "descriptor",
    "v"
  ],
  "GlobalDescriptor": [
    "mutable",
    "value"
  ],
  "GlobalEventHandlers": [
    "animationcancel",
    "animationend",
    "animationiteration",
    "animationstart",
    "drag",
    "dragend",
    "dragenter",
    "dragleave",
    "dragover",
    "dragstart",
    "drop",
    "gotpointercapture",
    "lostpointercapture",
    "onabort",
    "onanimationcancel",
    "onanimationend",
    "onanimationiteration",
    "onanimationstart",
    "onauxclick",
    "onbeforeinput",
    "onbeforematch",
    "onbeforexrselect",
    "onblur",
    "oncancel",
    "oncanplay",
    "oncanplaythrough",
    "onchange",
    "onclick",
    "onclose",
    "oncontextlost",
    "oncontextmenu",
    "oncontextrestored",
    "oncuechange",
    "ondblclick",
    "ondrag",
    "ondragend",
    "ondragenter",
    "ondragleave",
    "ondragover",
    "ondragstart",
    "ondrop",
    "ondurationchange",
    "onemptied",
    "onended",
    "onerror",
    "onfocus",
    "onformdata",
    "ongotpointercapture",
    "oninput",
    "oninvalid",
    "onkeydown",
    "onkeypress",
    "onkeyup",
    "onload",
    "onloadeddata",
    "onloadedmetadata",
    "onloadstart",
    "onlostpointercapture",
    "onmousedown",
    "onmouseenter",
    "onmouseleave",
    "onmousemove",
    "onmouseout",
    "onmouseover",
    "onmouseup",
    "onpause",
    "onplay",
    "onplaying",
    "onpointercancel",
    "onpointerdown",
    "onpointerenter",
    "onpointerleave",
    "onpointermove",
    "onpointerout",
    "onpointerover",
    "onpointerrawupdate",
    "onpointerup",
    "onprogress",
    "onratechange",
    "onreset",
    "onresize",
    "onscroll",
    "onsecuritypolicyviolation",
    "onseeked",
    "onseeking",
    "onselect",
    "onslotchange",
    "onstalled",
    "onsubmit",
    "onsuspend",
    "ontimeupdate",
    "ontoggle",
    "ontransitioncancel",
    "ontransitionend",
    "ontransitionrun",
    "ontransitionstart",
    "onvolumechange",
    "onwaiting",
    "onwebkitanimationend",
    "onwebkitanimationiteration",
    "onwebkitanimationstart",
    "onwebkittransitionend",
    "onwheel",
    "pointercancel",
    "pointerdown",
    "pointerenter",
    "pointerleave",
    "pointermove",
    "pointerout",
    "pointerover",
    "pointerrawupdate",
    "pointerup",
    "transitioncancel",
    "transitionend",
    "transitionrun",
    "transitionstart"
  ],
  "GroupEffect": [
    "",
    "GroupEffect ()",
    "GroupEffect clone ()",
    "GroupEffect(children)",
    "GroupEffect(children, timing)",
    "append()",
    "append(...effects)",
    "children",
    "clone()",
    "constructor(children)",
    "constructor(children, timing)",
    "firstChild",
    "lastChild",
    "prepend()",
    "prepend(...effects)",
    "undefined append (AnimationEffect... effects)"
  ],
  "GroupEffect/GroupEffect(children, timing)": [
    "children",
    "timing"
  ],
  "GroupEffect/append()": [
    "effects"
  ],
  "GroupEffect/append(...effects)": [
    "effects"
  ],
  "GroupEffect/prepend()": [
    "effects"
  ],
  "GroupEffect/prepend(...effects)": [
    "effects"
  ],
  "HTMLAllCollection": [
    "item()",
    "length",
    "namedItem(name)"
  ],
  "HTMLAnchorElement": [
    "charset",
    "coords",
    "download",
    "hreflang",
    "name",
    "ping",
    "referrerPolicy",
    "rel",
    "relList",
    "rev",
    "shape",
    "target",
    "text",
    "type"
  ],
  "HTMLAreaElement": [
    "alt",
    "coords",
    "download",
    "noHref",
    "ping",
    "referrerPolicy",
    "rel",
    "relList",
    "shape",
    "target"
  ],
  "HTMLAudioElement": [
    "Audio(src)"
  ],
  "HTMLBRElement": [
    "clear"
  ],
  "HTMLBaseElement": [
    "href",
    "target"
  ],
  "HTMLBodyElement": [
    "aLink",
    "background",
    "bgColor",
    "link",
    "onorientationchange",
    "text",
    "vLink"
  ],
  "HTMLButtonElement": [
    "checkValidity()",
    "disabled",
    "form",
    "formAction",
    "formEnctype",
    "formMethod",
    "formNoValidate",
    "formTarget",
    "labels",
    "name",
    "reportValidity()",
    "setCustomValidity(error)",
    "type",
    "validationMessage",
    "validity",
    "value",
    "willValidate"
  ],
  "HTMLCanvasElement": [
    "getContext(contextId)",
    "height",
    "toBlob(callback)",
    "toBlob(callback, type)",
    "toDataURL()",
    "toDataURL(type)",
    "transferControlToOffscreen()",
    "width"
  ],
  "HTMLCollection": [
    "item(index)",
    "length",
    "namedItem",
    "namedItem(key)",
    "namedItem(name)"
  ],
  "HTMLCollection/item(index)": [
    "index"
  ],
  "HTMLCollection/namedItem(name)": [
    "name"
  ],
  "HTMLDListElement": [
    "compact"
  ],
  "HTMLDataElement": [
    "value"
  ],
  "HTMLDataListElement": [
    "options"
  ],
  "HTMLDetailsElement": [
    "open"
  ],
  "HTMLDialogElement": [
    "close()",
    "open",
    "returnValue",
    "show()",
    "showModal()"
  ],
  "HTMLDirectoryElement": [
    "compact"
  ],
  "HTMLDivElement": [
    "align"
  ],
  "HTMLElement": [
    "accessKey",
    "accessKeyLabel",
    "attachInternals()",
    "autocapitalize",
    "beforematch",
    "blur",
    "cancel",
    "change",
    "click()",
    "close",
    "contextlost",
    "contextrestored",
    "copy",
    "cut",
    "dir",
    "draggable",
    "error",
    "focus",
    "formdata",
    "hidden",
    "inert",
    "innerText",
    "invalid",
    "lang",
    "load",
    "offsetHeight",
    "offsetLeft",
    "offsetParent",
    "offsetTop",
    "offsetWidth",
    "onabort",
    "onauxclick",
    "onbeforeinput",
    "onbeforematch",
    "oncancel",
    "oncanplay",
    "oncanplaythrough",
    "onchange",
    "onclick",
    "onclose",
    "oncontextlost",
    "oncontextmenu",
    "oncontextrestored",
    "oncuechange",
    "ondblclick",
    "ondrag",
    "ondragend",
    "ondragenter",
    "ondragleave",
    "ondragover",
    "ondragstart",
    "ondrop",
    "ondurationchange",
    "onemptied",
    "onended",
    "onformdata",
    "oninput",
    "oninvalid",
    "onkeydown",
    "onkeypress",
    "onkeyup",
    "onloadeddata",
    "onloadedmetadata",
    "onloadstart",
    "onmousedown",
    "onmouseenter",
    "onmouseleave",
    "onmousemove",
    "onmouseout",
    "onmouseover",
    "onmouseup",
    "onpause",
    "onplay",
    "onplaying",
    "onprogress",
    "onratechange",
    "onreset",
    "onsecuritypolicyviolation",
    "onseeked",
    "onseeking",
    "onselect",
    "onslotchange",
    "onstalled",
    "onsubmit",
    "onsuspend",
    "ontimeupdate",
    "ontoggle",
    "onvolumechange",
    "onwaiting",
    "onwebkitanimationend",
    "onwebkitanimationiteration",
    "onwebkitanimationstart",
    "onwebkittransitionend",
    "onwheel",
    "outerText",
    "paste",
    "reset",
    "securitypolicyviolation",
    "select",
    "spellcheck",
    "submit",
    "title",
    "toggle",
    "translate"
  ],
  "HTMLEmbedElement": [
    "align",
    "getSVGDocument()",
    "height",
    "name",
    "src",
    "type",
    "width"
  ],
  "HTMLFieldSetElement": [
    "checkValidity()",
    "disabled",
    "elements",
    "form",
    "name",
    "reportValidity()",
    "setCustomValidity(error)",
    "type",
    "validationMessage",
    "validity",
    "willValidate"
  ],
  "HTMLFontElement": [
    "color",
    "face",
    "size"
  ],
  "HTMLFormControlsCollection": [
    "namedItem(name)"
  ],
  "HTMLFormElement": [
    "acceptCharset",
    "action",
    "autocomplete",
    "checkValidity()",
    "elements",
    "encoding",
    "enctype",
    "length",
    "method",
    "name",
    "noValidate",
    "rel",
    "relList",
    "reportValidity()",
    "requestSubmit()",
    "reset()",
    "submit()",
    "target"
  ],
  "HTMLFrameElement": [
    "contentDocument",
    "contentWindow",
    "frameBorder",
    "longDesc",
    "marginHeight",
    "marginWidth",
    "name",
    "noResize",
    "scrolling",
    "src"
  ],
  "HTMLFrameSetElement": [
    "cols",
    "rows"
  ],
  "HTMLHRElement": [
    "align",
    "color",
    "noShade",
    "size",
    "width"
  ],
  "HTMLHeadElement": [
    "profile"
  ],
  "HTMLHeadingElement": [
    "align"
  ],
  "HTMLHtmlElement": [
    "version"
  ],
  "HTMLHyperlinkElementUtils": [
    "hash",
    "host",
    "hostname",
    "href",
    "origin",
    "password",
    "pathname",
    "port",
    "protocol",
    "search",
    "username"
  ],
  "HTMLIFrameElement": [
    "align",
    "allow",
    "allowFullscreen",
    "contentDocument",
    "contentWindow",
    "frameBorder",
    "getSVGDocument()",
    "height",
    "loading",
    "longDesc",
    "marginHeight",
    "marginWidth",
    "name",
    "permissionsPolicy",
    "referrerPolicy",
    "sandbox",
    "scrolling",
    "src",
    "srcdoc",
    "width"
  ],
  "HTMLImageElement": [
    "Image(width, height)",
    "align",
    "alt",
    "border",
    "complete",
    "crossOrigin",
    "currentSrc",
    "decode()",
    "decoding",
    "height",
    "hspace",
    "isMap",
    "loading",
    "longDesc",
    "lowsrc",
    "name",
    "naturalHeight",
    "naturalWidth",
    "referrerPolicy",
    "sizes",
    "src",
    "srcset",
    "useMap",
    "vspace",
    "width",
    "x",
    "y"
  ],
  "HTMLInputElement": [
    "accept",
    "align",
    "alt",
    "autocomplete",
    "checkValidity()",
    "checked",
    "defaultChecked",
    "defaultValue",
    "dirName",
    "disabled",
    "files",
    "form",
    "formAction",
    "formEnctype",
    "formMethod",
    "formNoValidate",
    "formTarget",
    "height",
    "indeterminate",
    "labels",
    "list",
    "max",
    "maxLength",
    "min",
    "minLength",
    "multiple",
    "name",
    "pattern",
    "placeholder",
    "readOnly",
    "reportValidity()",
    "required",
    "select()",
    "selectionDirection",
    "selectionEnd",
    "selectionStart",
    "setCustomValidity(error)",
    "setRangeText(replacement, start, end, selectMode)",
    "setSelectionRange(start, end, direction)",
    "showPicker()",
    "size",
    "src",
    "step",
    "stepDown()",
    "stepUp()",
    "type",
    "useMap",
    "validationMessage",
    "validity",
    "value",
    "valueAsDate",
    "valueAsNumber",
    "width",
    "willValidate"
  ],
  "HTMLLIElement": [
    "type",
    "value"
  ],
  "HTMLLabelElement": [
    "control",
    "form",
    "htmlFor"
  ],
  "HTMLLegendElement": [
    "align",
    "form"
  ],
  "HTMLLinkElement": [
    "as",
    "blocking",
    "charset",
    "crossOrigin",
    "disabled",
    "href",
    "hreflang",
    "imageSizes",
    "imageSrcset",
    "integrity",
    "media",
    "referrerPolicy",
    "rel",
    "relList",
    "rev",
    "sizes",
    "target",
    "type"
  ],
  "HTMLMapElement": [
    "areas",
    "name"
  ],
  "HTMLMarqueeElement": [
    "behavior",
    "bgColor",
    "direction",
    "height",
    "hspace",
    "loop",
    "scrollAmount",
    "scrollDelay",
    "start()",
    "stop()",
    "trueSpeed",
    "vspace",
    "width"
  ],
  "HTMLMediaElement": [
    "HAVE_CURRENT_DATA",
    "HAVE_ENOUGH_DATA",
    "HAVE_FUTURE_DATA",
    "HAVE_METADATA",
    "HAVE_NOTHING",
    "NETWORK_EMPTY",
    "NETWORK_IDLE",
    "NETWORK_LOADING",
    "NETWORK_NO_SOURCE",
    "abort",
    "addTextTrack(kind)",
    "addTextTrack(kind, label)",
    "audioTracks",
    "autoplay",
    "buffered",
    "canPlayType(type)",
    "canplay",
    "canplaythrough",
    "controls",
    "crossOrigin",
    "currentSrc",
    "currentTime",
    "defaultMuted",
    "defaultPlaybackRate",
    "duration",
    "durationchange",
    "effective media volume",
    "emptied",
    "ended",
    "error",
    "fastSeek(time)",
    "getStartDate()",
    "load()",
    "loadeddata",
    "loadedmetadata",
    "loadstart",
    "loop",
    "media data",
    "muted",
    "networkState",
    "pause",
    "pause()",
    "paused",
    "play",
    "play()",
    "playbackRate",
    "played",
    "playing",
    "preload",
    "preservesPitch",
    "progress",
    "ratechange",
    "readyState",
    "resize",
    "seekable",
    "seeked",
    "seeking",
    "src",
    "srcObject",
    "stalled",
    "suspend",
    "textTracks",
    "timeupdate",
    "videoTracks",
    "volume",
    "volumechange",
    "waiting"
  ],
  "HTMLMenuElement": [
    "compact"
  ],
  "HTMLMetaElement": [
    "content",
    "httpEquiv",
    "media",
    "name",
    "scheme"
  ],
  "HTMLMeterElement": [
    "high",
    "labels",
    "low",
    "max",
    "min",
    "optimum",
    "value"
  ],
  "HTMLModElement": [
    "cite",
    "dateTime"
  ],
  "HTMLOListElement": [
    "compact",
    "reversed",
    "start",
    "type"
  ],
  "HTMLObjectElement": [
    "align",
    "archive",
    "border",
    "checkValidity()",
    "code",
    "codeBase",
    "codeType",
    "contentDocument",
    "contentWindow",
    "data",
    "declare",
    "form",
    "getSVGDocument()",
    "height",
    "hspace",
    "name",
    "reportValidity()",
    "setCustomValidity(error)",
    "standby",
    "type",
    "useMap",
    "validationMessage",
    "validity",
    "vspace",
    "width",
    "willValidate"
  ],
  "HTMLOptGroupElement": [
    "disabled",
    "label"
  ],
  "HTMLOptionElement": [
    "Option(text, value, defaultSelected, selected)",
    "defaultSelected",
    "disabled",
    "form",
    "index",
    "label",
    "selected",
    "text",
    "value"
  ],
  "HTMLOptionsCollection": [
    "add(element)",
    "length",
    "remove(index)",
    "selectedIndex"
  ],
  "HTMLOrSVGElement": [
    "[[CryptographicNonce]]",
    "autofocus",
    "blur()",
    "dataset",
    "focus()",
    "nonce",
    "tabIndex"
  ],
  "HTMLOutputElement": [
    "checkValidity()",
    "defaultValue",
    "form",
    "htmlFor",
    "labels",
    "name",
    "reportValidity()",
    "setCustomValidity(error)",
    "type",
    "validationMessage",
    "validity",
    "value",
    "willValidate"
  ],
  "HTMLParagraphElement": [
    "align"
  ],
  "HTMLParamElement": [
    "name",
    "type",
    "value",
    "valueType"
  ],
  "HTMLPreElement": [
    "width"
  ],
  "HTMLProgressElement": [
    "labels",
    "max",
    "position",
    "value"
  ],
  "HTMLQuoteElement": [
    "cite"
  ],
  "HTMLScriptElement": [
    "async",
    "blocking",
    "charset",
    "crossOrigin",
    "defer",
    "event",
    "htmlFor",
    "integrity",
    "noModule",
    "referrerPolicy",
    "src",
    "supports(type)",
    "text",
    "type"
  ],
  "HTMLSelectElement": [
    "add(element)",
    "autocomplete",
    "checkValidity()",
    "disabled",
    "form",
    "item(index)",
    "labels",
    "length",
    "multiple",
    "name",
    "namedItem(name)",
    "options",
    "remove()",
    "reportValidity()",
    "required",
    "selectedIndex",
    "selectedOptions",
    "setCustomValidity(error)",
    "size",
    "type",
    "validationMessage",
    "validity",
    "value",
    "willValidate"
  ],
  "HTMLSlotElement": [
    "assign(...nodes)",
    "assignedElements()",
    "assignedNodes()",
    "manually assigned nodes",
    "name",
    "slotchange"
  ],
  "HTMLSourceElement": [
    "error",
    "height",
    "media",
    "sizes",
    "src",
    "srcset",
    "type",
    "width"
  ],
  "HTMLStyleElement": [
    "blocking",
    "disabled",
    "media",
    "type"
  ],
  "HTMLTableCaptionElement": [
    "align"
  ],
  "HTMLTableCellElement": [
    "abbr",
    "align",
    "axis",
    "bgColor",
    "cellIndex",
    "ch",
    "chOff",
    "colSpan",
    "headers",
    "height",
    "noWrap",
    "rowSpan",
    "scope",
    "vAlign",
    "width"
  ],
  "HTMLTableColElement": [
    "align",
    "ch",
    "chOff",
    "span",
    "vAlign",
    "width"
  ],
  "HTMLTableElement": [
    "align",
    "bgColor",
    "border",
    "caption",
    "cellPadding",
    "cellSpacing",
    "createCaption()",
    "createTBody()",
    "createTFoot()",
    "createTHead()",
    "deleteCaption()",
    "deleteRow(index)",
    "deleteTFoot()",
    "deleteTHead()",
    "frame",
    "insertRow()",
    "rows",
    "rules",
    "summary",
    "tBodies",
    "tFoot",
    "tHead",
    "width"
  ],
  "HTMLTableRowElement": [
    "align",
    "bgColor",
    "cells",
    "ch",
    "chOff",
    "deleteCell(index)",
    "insertCell()",
    "rowIndex",
    "sectionRowIndex",
    "vAlign"
  ],
  "HTMLTableSectionElement": [
    "align",
    "ch",
    "chOff",
    "deleteRow(index)",
    "insertRow()",
    "rows",
    "vAlign"
  ],
  "HTMLTemplateElement": [
    "content"
  ],
  "HTMLTextAreaElement": [
    "autocomplete",
    "checkValidity()",
    "cols",
    "defaultValue",
    "dirName",
    "disabled",
    "form",
    "labels",
    "maxLength",
    "minLength",
    "name",
    "placeholder",
    "readOnly",
    "reportValidity()",
    "required",
    "rows",
    "select()",
    "selectionDirection",
    "selectionEnd",
    "selectionStart",
    "setCustomValidity(error)",
    "setRangeText(replacement, start, end, selectMode)",
    "setSelectionRange(start, end, direction)",
    "textLength",
    "type",
    "validationMessage",
    "validity",
    "value",
    "willValidate",
    "wrap"
  ],
  "HTMLTimeElement": [
    "dateTime"
  ],
  "HTMLTitleElement": [
    "text"
  ],
  "HTMLTrackElement": [
    "ERROR",
    "LOADED",
    "LOADING",
    "NONE",
    "cuechange",
    "default",
    "error",
    "kind",
    "label",
    "load",
    "readyState",
    "src",
    "srclang",
    "track"
  ],
  "HTMLUListElement": [
    "compact",
    "type"
  ],
  "HTMLVideoElement": [
    "height",
    "playsInline",
    "poster",
    "videoHeight",
    "videoWidth",
    "width"
  ],
  "HashChangeEvent": [
    "newURL",
    "oldURL"
  ],
  "Headers": [
    "Headers()",
    "Headers(init)",
    "append",
    "append(name, value)",
    "constructor()",
    "constructor(init)",
    "delete(name)",
    "fill",
    "get(name)",
    "guard",
    "has(name)",
    "header list",
    "remove privileged no-cors request headers",
    "set(name, value)"
  ],
  "Headers/Headers()": [
    "init"
  ],
  "Headers/Headers(init)": [
    "init"
  ],
  "Headers/append(name, value)": [
    "name",
    "value"
  ],
  "Headers/constructor()": [
    "init"
  ],
  "Headers/constructor(init)": [
    "init"
  ],
  "Headers/delete(name)": [
    "name"
  ],
  "Headers/get(name)": [
    "name"
  ],
  "Headers/has(name)": [
    "name"
  ],
  "Headers/set(name, value)": [
    "name",
    "value"
  ],
  "Highlight": [
    "Highlight()",
    "Highlight(...initialRanges)",
    "Highlight(AbstractRange... initialRanges)",
    "constructor()",
    "constructor(...initialRanges)",
    "priority",
    "type"
  ],
  "Highlight/Highlight()": [
    "initialRanges"
  ],
  "Highlight/Highlight(...initialRanges)": [
    "initialRanges"
  ],
  "Highlight/constructor()": [
    "initialRanges"
  ],
  "Highlight/constructor(...initialRanges)": [
    "initialRanges"
  ],
  "HighlightType": [
    "\"grammar-error\"",
    "\"highlight\"",
    "\"spelling-error\""
  ],
  "History": [
    "back()",
    "forward()",
    "go()",
    "length",
    "pushState(data, unused)",
    "replaceState(data, unused)",
    "scrollRestoration",
    "state"
  ],
  "HkdfParams": [
    "hash",
    "info",
    "salt"
  ],
  "HmacImportParams": [
    "hash",
    "length"
  ],
  "HmacKeyAlgorithm": [
    "hash",
    "length"
  ],
  "HmacKeyGenParams": [
    "hash",
    "length"
  ],
  "I/O queue": [
    "peek",
    "prepend",
    "push",
    "read"
  ],
  "IDBCursor": [
    "advance(count)",
    "continue()",
    "continue(key)",
    "continuePrimaryKey(key, primaryKey)",
    "delete()",
    "direction",
    "key",
    "primaryKey",
    "request",
    "source",
    "update(value)"
  ],
  "IDBCursor/advance(count)": [
    "count"
  ],
  "IDBCursor/continue()": [
    "key"
  ],
  "IDBCursor/continue(key)": [
    "key"
  ],
  "IDBCursor/continuePrimaryKey(key, primaryKey)": [
    "key",
    "primaryKey"
  ],
  "IDBCursor/update(value)": [
    "value"
  ],
  "IDBCursorDirection": [
    "\"next\"",
    "\"nextunique\"",
    "\"prev\"",
    "\"prevunique\""
  ],
  "IDBCursorWithValue": [
    "value"
  ],
  "IDBDatabase": [
    "close",
    "close()",
    "createObjectStore(name)",
    "createObjectStore(name, options)",
    "deleteObjectStore(name)",
    "name",
    "objectStoreNames",
    "onabort",
    "onclose",
    "onerror",
    "onversionchange",
    "transaction(storeNames)",
    "transaction(storeNames, mode)",
    "transaction(storeNames, mode, options)",
    "version",
    "versionchange"
  ],
  "IDBDatabase/createObjectStore(name)": [
    "name",
    "options"
  ],
  "IDBDatabase/createObjectStore(name, options)": [
    "name",
    "options"
  ],
  "IDBDatabase/deleteObjectStore(name)": [
    "name"
  ],
  "IDBDatabase/transaction(storeNames)": [
    "mode",
    "options",
    "storeNames"
  ],
  "IDBDatabase/transaction(storeNames, mode)": [
    "mode",
    "options",
    "storeNames"
  ],
  "IDBDatabase/transaction(storeNames, mode, options)": [
    "mode",
    "options",
    "storeNames"
  ],
  "IDBDatabaseInfo": [
    "name",
    "version"
  ],
  "IDBFactory": [
    "cmp(first, second)",
    "databases()",
    "deleteDatabase(name)",
    "open(name)",
    "open(name, version)"
  ],
  "IDBFactory/cmp(first, second)": [
    "first",
    "second"
  ],
  "IDBFactory/deleteDatabase(name)": [
    "name"
  ],
  "IDBFactory/open(name)": [
    "name",
    "version"
  ],
  "IDBFactory/open(name, version)": [
    "name",
    "version"
  ],
  "IDBIndex": [
    "count()",
    "count(query)",
    "get(query)",
    "getAll()",
    "getAll(query)",
    "getAll(query, count)",
    "getAllKeys()",
    "getAllKeys(query)",
    "getAllKeys(query, count)",
    "getKey(query)",
    "keyPath",
    "multiEntry",
    "name",
    "objectStore",
    "openCursor()",
    "openCursor(query)",
    "openCursor(query, direction)",
    "openKeyCursor()",
    "openKeyCursor(query)",
    "openKeyCursor(query, direction)",
    "unique"
  ],
  "IDBIndex/count()": [
    "query"
  ],
  "IDBIndex/count(query)": [
    "query"
  ],
  "IDBIndex/get(query)": [
    "query"
  ],
  "IDBIndex/getAll()": [
    "count",
    "query"
  ],
  "IDBIndex/getAll(query)": [
    "count",
    "query"
  ],
  "IDBIndex/getAll(query, count)": [
    "count",
    "query"
  ],
  "IDBIndex/getAllKeys()": [
    "count",
    "query"
  ],
  "IDBIndex/getAllKeys(query)": [
    "count",
    "query"
  ],
  "IDBIndex/getAllKeys(query, count)": [
    "count",
    "query"
  ],
  "IDBIndex/getKey(query)": [
    "query"
  ],
  "IDBIndex/openCursor()": [
    "direction",
    "query"
  ],
  "IDBIndex/openCursor(query)": [
    "direction",
    "query"
  ],
  "IDBIndex/openCursor(query, direction)": [
    "direction",
    "query"
  ],
  "IDBIndex/openKeyCursor()": [
    "direction",
    "query"
  ],
  "IDBIndex/openKeyCursor(query)": [
    "direction",
    "query"
  ],
  "IDBIndex/openKeyCursor(query, direction)": [
    "direction",
    "query"
  ],
  "IDBIndexParameters": [
    "multiEntry",
    "unique"
  ],
  "IDBKeyRange": [
    "bound(lower, upper)",
    "bound(lower, upper, lowerOpen)",
    "bound(lower, upper, lowerOpen, upperOpen)",
    "includes(key)",
    "lower",
    "lowerBound(lower)",
    "lowerBound(lower, open)",
    "lowerOpen",
    "only(value)",
    "upper",
    "upperBound(upper)",
    "upperBound(upper, open)",
    "upperOpen"
  ],
  "IDBKeyRange/bound(lower, upper)": [
    "lower",
    "lowerOpen",
    "upper",
    "upperOpen"
  ],
  "IDBKeyRange/bound(lower, upper, lowerOpen)": [
    "lower",
    "lowerOpen",
    "upper",
    "upperOpen"
  ],
  "IDBKeyRange/bound(lower, upper, lowerOpen, upperOpen)": [
    "lower",
    "lowerOpen",
    "upper",
    "upperOpen"
  ],
  "IDBKeyRange/includes(key)": [
    "key"
  ],
  "IDBKeyRange/lowerBound(lower)": [
    "lower",
    "open"
  ],
  "IDBKeyRange/lowerBound(lower, open)": [
    "lower",
    "open"
  ],
  "IDBKeyRange/only(value)": [
    "value"
  ],
  "IDBKeyRange/upperBound(upper)": [
    "open",
    "upper"
  ],
  "IDBKeyRange/upperBound(upper, open)": [
    "open",
    "upper"
  ],
  "IDBObjectStore": [
    "add(value)",
    "add(value, key)",
    "autoIncrement",
    "clear()",
    "count()",
    "count(query)",
    "createIndex(name, keyPath)",
    "createIndex(name, keyPath, options)",
    "delete(query)",
    "deleteIndex(name)",
    "get(query)",
    "getAll()",
    "getAll(query)",
    "getAll(query, count)",
    "getAllKeys()",
    "getAllKeys(query)",
    "getAllKeys(query, count)",
    "getKey(query)",
    "index(name)",
    "indexNames",
    "keyPath",
    "name",
    "openCursor()",
    "openCursor(query)",
    "openCursor(query, direction)",
    "openKeyCursor()",
    "openKeyCursor(query)",
    "openKeyCursor(query, direction)",
    "put(value)",
    "put(value, key)",
    "transaction"
  ],
  "IDBObjectStore/add(value)": [
    "key",
    "value"
  ],
  "IDBObjectStore/add(value, key)": [
    "key",
    "value"
  ],
  "IDBObjectStore/count()": [
    "query"
  ],
  "IDBObjectStore/count(query)": [
    "query"
  ],
  "IDBObjectStore/createIndex(name, keyPath)": [
    "keyPath",
    "name",
    "options"
  ],
  "IDBObjectStore/createIndex(name, keyPath, options)": [
    "keyPath",
    "name",
    "options"
  ],
  "IDBObjectStore/delete(query)": [
    "query"
  ],
  "IDBObjectStore/deleteIndex(name)": [
    "name"
  ],
  "IDBObjectStore/get(query)": [
    "query"
  ],
  "IDBObjectStore/getAll()": [
    "count",
    "query"
  ],
  "IDBObjectStore/getAll(query)": [
    "count",
    "query"
  ],
  "IDBObjectStore/getAll(query, count)": [
    "count",
    "query"
  ],
  "IDBObjectStore/getAllKeys()": [
    "count",
    "query"
  ],
  "IDBObjectStore/getAllKeys(query)": [
    "count",
    "query"
  ],
  "IDBObjectStore/getAllKeys(query, count)": [
    "count",
    "query"
  ],
  "IDBObjectStore/getKey(query)": [
    "query"
  ],
  "IDBObjectStore/index(name)": [
    "name"
  ],
  "IDBObjectStore/openCursor()": [
    "direction",
    "query"
  ],
  "IDBObjectStore/openCursor(query)": [
    "direction",
    "query"
  ],
  "IDBObjectStore/openCursor(query, direction)": [
    "direction",
    "query"
  ],
  "IDBObjectStore/openKeyCursor()": [
    "direction",
    "query"
  ],
  "IDBObjectStore/openKeyCursor(query)": [
    "direction",
    "query"
  ],
  "IDBObjectStore/openKeyCursor(query, direction)": [
    "direction",
    "query"
  ],
  "IDBObjectStore/put(value)": [
    "key",
    "value"
  ],
  "IDBObjectStore/put(value, key)": [
    "key",
    "value"
  ],
  "IDBObjectStoreParameters": [
    "autoIncrement",
    "keyPath"
  ],
  "IDBOpenDBRequest": [
    "blocked",
    "onblocked",
    "onupgradeneeded",
    "upgradeneeded"
  ],
  "IDBRequest": [
    "error",
    "onerror",
    "onsuccess",
    "readyState",
    "result",
    "source",
    "success",
    "transaction"
  ],
  "IDBRequestReadyState": [
    "\"done\"",
    "\"pending\""
  ],
  "IDBTransaction": [
    "abort",
    "abort()",
    "commit()",
    "complete",
    "db",
    "durability",
    "error",
    "mode",
    "objectStore(name)",
    "objectStoreNames",
    "onabort",
    "oncomplete",
    "onerror"
  ],
  "IDBTransaction/objectStore(name)": [
    "name"
  ],
  "IDBTransactionDurability": [
    "\"default\"",
    "\"relaxed\"",
    "\"strict\""
  ],
  "IDBTransactionMode": [
    "\"readonly\"",
    "\"readwrite\"",
    "\"versionchange\""
  ],
  "IDBTransactionOptions": [
    "durability"
  ],
  "IDBVersionChangeEvent": [
    "IDBVersionChangeEvent(type)",
    "IDBVersionChangeEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "newVersion",
    "oldVersion"
  ],
  "IDBVersionChangeEvent/IDBVersionChangeEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "IDBVersionChangeEvent/IDBVersionChangeEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "IDBVersionChangeEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "IDBVersionChangeEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "IDBVersionChangeEventInit": [
    "newVersion",
    "oldVersion"
  ],
  "IDL type": [
    "extended attribute associated with",
    "extended attributes associated with"
  ],
  "IIRFilterNode": [
    "IIRFilterNode(context, options)",
    "constructor",
    "constructor(context, options)",
    "getFrequencyResponse(frequencyHz, magResponse, phaseResponse)"
  ],
  "IIRFilterNode/IIRFilterNode(context, options)": [
    "context",
    "options"
  ],
  "IIRFilterNode/constructor()": [
    "IIRFilterNode(context, options)",
    "context",
    "options"
  ],
  "IIRFilterNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "IIRFilterNode/getFrequencyResponse()": [
    "frequencyHz",
    "magResponse",
    "phaseResponse"
  ],
  "IIRFilterNode/getFrequencyResponse(frequencyHz, magResponse, phaseResponse)": [
    "frequencyHz",
    "magResponse",
    "phaseResponse"
  ],
  "IIRFilterOptions": [
    "feedback",
    "feedforward"
  ],
  "ImageBitmap": [
    "close()",
    "height",
    "width"
  ],
  "ImageBitmapOptions": [
    "colorSpaceConversion",
    "imageOrientation",
    "premultiplyAlpha",
    "resizeHeight",
    "resizeQuality",
    "resizeWidth"
  ],
  "ImageBitmapRenderingContext": [
    "canvas",
    "transferFromImageBitmap(bitmap)"
  ],
  "ImageBitmapRenderingContextSettings": [
    "alpha"
  ],
  "ImageData": [
    "colorSpace",
    "data",
    "height",
    "new ImageData(data, sw, sh, settings)",
    "new ImageData(sw, sh, settings)",
    "width"
  ],
  "ImageDataSettings": [
    "colorSpace"
  ],
  "ImageOrientation": [
    "flipY",
    "none"
  ],
  "ImageResource": [
    "external label",
    "label",
    "sizes",
    "src",
    "type"
  ],
  "ImageSmoothingQuality": [
    "high",
    "low",
    "medium"
  ],
  "ImportExportKind": [
    "\"function\"",
    "\"global\"",
    "\"memory\"",
    "\"table\""
  ],
  "InputDeviceInfo": [
    "getCapabilities",
    "getCapabilities()"
  ],
  "InputEvent": [
    "InputEvent(type)",
    "InputEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "data",
    "inputType",
    "isComposing"
  ],
  "InputEvent/InputEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "InputEvent/InputEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "InputEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "InputEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "InputEventInit": [
    "data",
    "inputType",
    "isComposing"
  ],
  "Instance": [
    "Instance(module)",
    "Instance(module, importObject)",
    "constructor(module)",
    "constructor(module, importObject)",
    "exports"
  ],
  "Instance/Instance(module)": [
    "importObject",
    "module"
  ],
  "Instance/Instance(module, importObject)": [
    "importObject",
    "module"
  ],
  "Instance/constructor(module)": [
    "importObject",
    "module"
  ],
  "Instance/constructor(module, importObject)": [
    "importObject",
    "module"
  ],
  "IntersectionObserver": [
    "IntersectionObserver(callback)",
    "IntersectionObserver(callback, options = {})",
    "IntersectionObserver(callback, options)",
    "[[ObservationTargets]]",
    "[[QueuedEntries]]",
    "[[callback]]",
    "[[rootMargin]]",
    "constructor",
    "constructor(callback)",
    "constructor(callback, options)",
    "content clip",
    "cross-origin-domain target",
    "disconnect()",
    "explicit root observer",
    "implicit root",
    "implicit root observer",
    "intersection root",
    "observe(target)",
    "root",
    "root intersection rectangle",
    "rootMargin",
    "same-origin-domain target",
    "takeRecords()",
    "target",
    "thresholds",
    "unobserve(target)"
  ],
  "IntersectionObserver/IntersectionObserver(callback)": [
    "callback",
    "options"
  ],
  "IntersectionObserver/IntersectionObserver(callback, options)": [
    "callback",
    "options"
  ],
  "IntersectionObserver/constructor(callback)": [
    "callback",
    "options"
  ],
  "IntersectionObserver/constructor(callback, options)": [
    "callback",
    "options"
  ],
  "IntersectionObserver/observe(target)": [
    "target"
  ],
  "IntersectionObserver/unobserve(target)": [
    "target"
  ],
  "IntersectionObserverCallback": [
    "entries",
    "observer"
  ],
  "IntersectionObserverEntry": [
    "IntersectionObserverEntry(intersectionObserverEntryInit)",
    "boundingClientRect",
    "constructor",
    "constructor(intersectionObserverEntryInit)",
    "intersectionRatio",
    "intersectionRect",
    "isIntersecting",
    "rootBounds",
    "target",
    "time"
  ],
  "IntersectionObserverEntry/IntersectionObserverEntry(intersectionObserverEntryInit)": [
    "intersectionObserverEntryInit"
  ],
  "IntersectionObserverEntry/constructor(intersectionObserverEntryInit)": [
    "intersectionObserverEntryInit"
  ],
  "IntersectionObserverEntryInit": [
    "boundingClientRect",
    "intersectionRatio",
    "intersectionRect",
    "isIntersecting",
    "rootBounds",
    "target",
    "time"
  ],
  "IntersectionObserverInit": [
    "root",
    "rootMargin",
    "threshold"
  ],
  "IntersectionObserverRegistration": [
    "observer",
    "previousIsIntersecting",
    "previousThresholdIndex"
  ],
  "IntrinsicSizes": [
    "[[intrinsicSizesRequest]]",
    "maxContentSize",
    "minContentSize"
  ],
  "IntrinsicSizesRequest": [
    "[[layoutChild]]"
  ],
  "IntrinsicSizesResultOptions": [
    "maxContentSize",
    "minContentSize"
  ],
  "Issuing a credential request to an authenticator": [
    "authenticator",
    "authenticatorExtensions",
    "clientDataHash",
    "options",
    "rpId",
    "savedCredentialIds"
  ],
  "IterationCompositeOperation": [
    "\"accumulate\"",
    "\"replace\""
  ],
  "JavaScript string": [
    "code point length",
    "convert",
    "length"
  ],
  "JsonLd": [
    "JsonLd"
  ],
  "JsonLdError": [
    "code",
    "message"
  ],
  "JsonLdErrorCode": [
    "IRI confused with prefix",
    "colliding keywords",
    "conflicting indexes",
    "context overflow",
    "cyclic IRI mapping",
    "invalid @id value",
    "invalid @import value",
    "invalid @included value",
    "invalid @index value",
    "invalid @nest value",
    "invalid @prefix value",
    "invalid @propagate value",
    "invalid @protected value",
    "invalid @reverse value",
    "invalid @version value",
    "invalid IRI mapping",
    "invalid JSON literal",
    "invalid base IRI",
    "invalid base direction",
    "invalid container mapping",
    "invalid context entry",
    "invalid context nullification",
    "invalid default language",
    "invalid keyword alias",
    "invalid language map value",
    "invalid language mapping",
    "invalid language-tagged string",
    "invalid language-tagged value",
    "invalid local context",
    "invalid remote context",
    "invalid reverse property",
    "invalid reverse property map",
    "invalid reverse property value",
    "invalid scoped context",
    "invalid script element",
    "invalid set or list object",
    "invalid term definition",
    "invalid type mapping",
    "invalid type value",
    "invalid typed value",
    "invalid value object",
    "invalid value object value",
    "invalid vocab mapping",
    "keyword redefinition",
    "loading document failed",
    "loading remote context failed",
    "multiple context link headers",
    "processing mode conflict",
    "protected term redefinition"
  ],
  "JsonLdOptions": [
    "base",
    "compactArrays",
    "compactToRelative",
    "documentLoader",
    "expandContext",
    "extractAllScripts",
    "frameExpansion",
    "ordered",
    "processingMode",
    "produceGeneralizedRdf",
    "rdfDirection",
    "useNativeTypes",
    "useRdfType"
  ],
  "JsonLdProcessor": [
    "compact()",
    "compact(input)",
    "compact(input, context)",
    "compact(input, context, options)",
    "constructor",
    "constructor()",
    "expand()",
    "expand(input)",
    "expand(input, options)",
    "flatten()",
    "flatten(input)",
    "flatten(input, context)",
    "flatten(input, context, options)",
    "fromRdf()",
    "fromRdf(input)",
    "fromRdf(input, options)",
    "toRdf()",
    "toRdf(input)",
    "toRdf(input, options)"
  ],
  "JsonWebKey": [
    "alg",
    "crv",
    "d",
    "dp",
    "dq",
    "e",
    "ext",
    "k",
    "key_ops",
    "kty",
    "n",
    "oth",
    "p",
    "q",
    "qi",
    "use",
    "x",
    "y"
  ],
  "KeyAlgorithm": [
    "name"
  ],
  "KeyFormat": [
    "jwk",
    "pkcs8",
    "raw",
    "spki"
  ],
  "KeyType": [
    "found definition for \"recognized key type values\", but nothing links to it. this is usually a spec bug!",
    "private",
    "public",
    "secret"
  ],
  "KeyUsage": [
    "decrypt",
    "deriveBits",
    "deriveKey",
    "encrypt",
    "recognized key usage values",
    "sign",
    "unwrapKey",
    "verify",
    "wrapKey"
  ],
  "Keyboard": [
    "enable keyboard lock",
    "getLayoutMap",
    "getLayoutMap()",
    "getlayoutmap()",
    "keyboard lock task queue",
    "layoutchange",
    "lock",
    "lock()",
    "lock(keyCodes)",
    "onlayoutchange",
    "reserved key codes",
    "unlock",
    "unlock()"
  ],
  "Keyboard/lock()": [
    "keyCodes"
  ],
  "Keyboard/lock(keyCodes)": [
    "keyCodes"
  ],
  "KeyboardEvent": [
    "DOM_KEY_LOCATION_LEFT",
    "DOM_KEY_LOCATION_NUMPAD",
    "DOM_KEY_LOCATION_RIGHT",
    "DOM_KEY_LOCATION_STANDARD",
    "KeyboardEvent(type)",
    "KeyboardEvent(type, eventInitDict)",
    "altKey",
    "charCode",
    "code",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "ctrlKey",
    "getModifierState(keyArg)",
    "in",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg)",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey)",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey, altKey)",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey, altKey, shiftKey)",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey, altKey, shiftKey, metaKey)",
    "isComposing",
    "key",
    "keyCode",
    "location",
    "metaKey",
    "repeat",
    "shiftKey"
  ],
  "KeyboardEvent/KeyboardEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "KeyboardEvent/KeyboardEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "KeyboardEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "KeyboardEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "KeyboardEvent/getModifierState(keyArg)": [
    "keyArg"
  ],
  "KeyboardEvent/initKeyboardEven": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey, altKey)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey, altKey, shiftKey)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey, altKey, shiftKey, metaKey)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEventInit": [
    "charCode",
    "code",
    "isComposing",
    "key",
    "keyCode",
    "location",
    "repeat"
  ],
  "KeyframeAnimationOptions": [
    "id",
    "timeline"
  ],
  "KeyframeEffect": [
    "KeyframeEffect (source)",
    "KeyframeEffect (target, keyframes, options)",
    "KeyframeEffect(source)",
    "KeyframeEffect(target, keyframes)",
    "KeyframeEffect(target, keyframes, options)",
    "composite",
    "constructor(source)",
    "constructor(target, keyframes)",
    "constructor(target, keyframes, options)",
    "getKeyframes()",
    "iterationComposite",
    "pseudoElement",
    "setKeyframes(keyframes)",
    "target",
    "void setKeyframes(object? keyframes)"
  ],
  "KeyframeEffect/KeyframeEffect(source)": [
    "source"
  ],
  "KeyframeEffect/KeyframeEffect(target, keyframes, options)": [
    "keyframes",
    "options",
    "target"
  ],
  "KeyframeEffect/setKeyframes": [
    "keyframes"
  ],
  "KeyframeEffect/setKeyframes(keyframes)": [
    "keyframes"
  ],
  "KeyframeEffectOptions": [
    "composite",
    "iterationComposite",
    "pseudoElement"
  ],
  "LargeBlobSupport": [
    "\"preferred\"",
    "\"required\""
  ],
  "LayoutChild": [
    "[[box]]",
    "[[styleMap]]",
    "[[unique id]]",
    "intrinsicSizes()",
    "layoutNextFragment(constraints, breakToken)",
    "styleMap"
  ],
  "LayoutChild/layoutNextFragment(constraints, breakToken)": [
    "breakToken",
    "constraints"
  ],
  "LayoutConstraints": [
    "Constructor",
    "LayoutConstraints()",
    "LayoutConstraints(options)",
    "availableBlockSize",
    "availableInlineSize",
    "blockFragmentationOffset",
    "blockFragmentationType",
    "data",
    "fixedBlockSize",
    "fixedInlineSize",
    "percentageBlockSize",
    "percentageInlineSize"
  ],
  "LayoutConstraints/LayoutConstraints(options)": [
    "options"
  ],
  "LayoutConstraintsOptions": [
    "availableBlockSize",
    "availableInlineSize",
    "blockFragmentationOffset",
    "blockFragmentationType",
    "data",
    "fixedBlockSize",
    "fixedInlineSize",
    "percentageBlockSize",
    "percentageInlineSize"
  ],
  "LayoutEdgeSizes": [
    "block",
    "blockEnd",
    "blockStart",
    "inline",
    "inlineEnd",
    "inlineStart"
  ],
  "LayoutEdges": [
    "all",
    "block",
    "blockEnd",
    "blockStart",
    "border",
    "inline",
    "inlineEnd",
    "inlineStart",
    "padding",
    "scrollbar"
  ],
  "LayoutFragment": [
    "[[generator]]",
    "[[layoutFragmentRequest]]",
    "[[unique id]]",
    "blockOffset",
    "blockSize",
    "breakToken",
    "data",
    "inlineOffset",
    "inlineSize"
  ],
  "LayoutFragmentRequest": [
    "[[breakToken]]",
    "[[layoutChild]]",
    "[[layoutConstraints]]"
  ],
  "LayoutOptions": [
    "childDisplay",
    "sizing"
  ],
  "LayoutSizingMode": [
    "\"block-like\"",
    "\"manual\"",
    "block-like",
    "manual"
  ],
  "LayoutWorkletGlobalScope": [
    "registerLayout(name, layoutCtor)"
  ],
  "LayoutWorkletGlobalScope/registerLayout(name, layoutCtor)": [
    "layoutCtor",
    "name"
  ],
  "LinkStyle": [
    "sheet"
  ],
  "LoadDocumentCallback": [
    "url"
  ],
  "LoadDocumentOptions": [
    "extractAllScripts",
    "profile",
    "requestProfile"
  ],
  "Location": [
    "ancestorOrigins",
    "assign(url)",
    "hash",
    "host",
    "hostname",
    "href",
    "origin",
    "pathname",
    "port",
    "protocol",
    "reload()",
    "replace(url)",
    "search"
  ],
  "MIME type": [
    "essence",
    "parameters",
    "subtype",
    "type"
  ],
  "MediaDeviceInfo": [
    "deviceId",
    "deviceid",
    "groupId",
    "groupid",
    "kind",
    "label",
    "toJSON",
    "toJSON()"
  ],
  "MediaDeviceKind": [
    "audioinput",
    "audiooutput",
    "videoinput"
  ],
  "MediaDevices": [
    "[[canExposeCameraInfo]]",
    "[[canExposeMicrophoneInfo]]",
    "[[devicesAccessibleMap]]",
    "[[devicesLiveMap]]",
    "[[kindsAccessibleMap]]",
    "[[mediaStreamTrackSources]]",
    "[[storedDeviceList]]",
    "candidate",
    "creating a list of device info objects",
    "creating-a-list-of-device-info-objects",
    "enumerateDevices",
    "enumerateDevices()",
    "getSupportedConstraints",
    "getSupportedConstraints()",
    "getUserMedia()",
    "getUserMedia(constraints)",
    "ondevicechange",
    "same-permission"
  ],
  "MediaElementAudioSourceNode": [
    "MediaElementAudioSourceNode(context, options)",
    "constructor(context, options)",
    "mediaElement"
  ],
  "MediaElementAudioSourceNode/MediaElementAudioSourceNode(context, options)": [
    "context",
    "options"
  ],
  "MediaElementAudioSourceNode/constructor()": [
    "context",
    "options"
  ],
  "MediaElementAudioSourceNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "MediaElementAudioSourceOptions": [
    "mediaElement"
  ],
  "MediaError": [
    "MEDIA_ERR_ABORTED",
    "MEDIA_ERR_DECODE",
    "MEDIA_ERR_NETWORK",
    "MEDIA_ERR_SRC_NOT_SUPPORTED",
    "code",
    "message"
  ],
  "MediaList": [
    "appendMedium(medium)",
    "collection of media queries",
    "deleteMedium(medium)",
    "item(index)",
    "length",
    "mediaText",
    "stringification behavior"
  ],
  "MediaList/appendMedium(medium)": [
    "medium"
  ],
  "MediaList/deleteMedium(medium)": [
    "medium"
  ],
  "MediaList/item(index)": [
    "index"
  ],
  "MediaQueryList": [
    "addListener(callback)",
    "addListener(listener)",
    "change",
    "document",
    "matches",
    "matches state",
    "media",
    "media query list",
    "onchange",
    "removeListener(callback)",
    "removeListener(listener)"
  ],
  "MediaQueryList/addListener(callback)": [
    "callback"
  ],
  "MediaQueryList/addListener(listener)": [
    "listener"
  ],
  "MediaQueryList/removeListener(callback)": [
    "callback"
  ],
  "MediaQueryList/removeListener(listener)": [
    "listener"
  ],
  "MediaQueryListEvent": [
    "Constructor",
    "MediaQueryListEvent(type)",
    "MediaQueryListEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "matches",
    "media"
  ],
  "MediaQueryListEvent/MediaQueryListEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "MediaQueryListEvent/MediaQueryListEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "MediaQueryListEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "MediaQueryListEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "MediaQueryListEventInit": [
    "matches",
    "media"
  ],
  "MediaStream": [
    "active",
    "add a track",
    "addTrack()",
    "addTrack(track)",
    "clone()",
    "constructor",
    "constructor!overload-1()",
    "constructor!overload-1(stream)",
    "constructor!overload-2()",
    "constructor!overload-2(tracks)",
    "constructor()",
    "getAudioTracks()",
    "getTrackById()",
    "getTrackById(trackId)",
    "getTracks()",
    "getVideoTracks()",
    "id",
    "onaddtrack",
    "onremovetrack",
    "remove a track",
    "removeTrack()",
    "removeTrack(track)"
  ],
  "MediaStreamAudioDestinationNode": [
    "MediaStreamAudioDestinationNode(context)",
    "MediaStreamAudioDestinationNode(context, options)",
    "constructor(context)",
    "constructor(context, options)",
    "stream"
  ],
  "MediaStreamAudioDestinationNode/MediaStreamAudioDestinationNode(context)": [
    "context",
    "options"
  ],
  "MediaStreamAudioDestinationNode/MediaStreamAudioDestinationNode(context, options)": [
    "context",
    "options"
  ],
  "MediaStreamAudioDestinationNode/constructor()": [
    "context",
    "options"
  ],
  "MediaStreamAudioDestinationNode/constructor(context)": [
    "context",
    "options"
  ],
  "MediaStreamAudioDestinationNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "MediaStreamAudioSourceNode": [
    "MediaStreamAudioSourceNode(context, options)",
    "[[input track]]",
    "constructor(context, options)",
    "mediaStream"
  ],
  "MediaStreamAudioSourceNode/MediaStreamAudioSourceNode(context, options)": [
    "context",
    "options"
  ],
  "MediaStreamAudioSourceNode/constructor()": [
    "context",
    "options"
  ],
  "MediaStreamAudioSourceNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "MediaStreamAudioSourceOptions": [
    "mediaStream"
  ],
  "MediaStreamConstraints": [
    "audio",
    "video"
  ],
  "MediaStreamTrack": [
    "\"audio\"",
    "\"video\"",
    "[[Enabled]]",
    "[[Id]]",
    "[[Kind]]",
    "[[Label]]",
    "[[Muted]]",
    "[[ReadyState]]",
    "[[Source]]",
    "applyConstraints",
    "applyConstraints()",
    "applyConstraints(constraints)",
    "clone",
    "clone()",
    "enabled",
    "getCapabilities",
    "getCapabilities()",
    "getConstraints",
    "getConstraints()",
    "getSettings",
    "getSettings()",
    "id",
    "kind",
    "label",
    "must not be exposed",
    "muted",
    "onended",
    "onmute",
    "onunmute",
    "readyState",
    "stop()"
  ],
  "MediaStreamTrackAudioSourceNode": [
    "MediaStreamTrackAudioSourceNode(context, options)",
    "constructor(context, options)"
  ],
  "MediaStreamTrackAudioSourceNode/MediaStreamTrackAudioSourceNode(context, options)": [
    "context",
    "options"
  ],
  "MediaStreamTrackAudioSourceNode/constructor()": [
    "context",
    "options"
  ],
  "MediaStreamTrackAudioSourceNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "MediaStreamTrackAudioSourceOptions": [
    "mediaStreamTrack"
  ],
  "MediaStreamTrackEvent": [
    "constructor()",
    "constructor(type, eventInitDict)",
    "track"
  ],
  "MediaStreamTrackEventInit": [
    "track"
  ],
  "MediaStreamTrackState": [
    "ended",
    "live"
  ],
  "MediaTrackCapabilities": [
    "aspectRatio",
    "autoGainControl",
    "channelCount",
    "deviceId",
    "echoCancellation",
    "facingMode",
    "frameRate",
    "groupId",
    "height",
    "latency",
    "noiseSuppression",
    "resizeMode",
    "sampleRate",
    "sampleSize",
    "width"
  ],
  "MediaTrackConstraintSet": [
    "aspectRatio",
    "autoGainControl",
    "channelCount",
    "deviceId",
    "echoCancellation",
    "facingMode",
    "frameRate",
    "groupId",
    "height",
    "latency",
    "noiseSuppression",
    "resizeMode",
    "sampleRate",
    "sampleSize",
    "width"
  ],
  "MediaTrackConstraints": [
    "advanced"
  ],
  "MediaTrackSettings": [
    "aspectRatio",
    "autoGainControl",
    "channelCount",
    "deviceId",
    "echoCancellation",
    "facingMode",
    "frameRate",
    "groupId",
    "height",
    "latency",
    "noiseSuppression",
    "resizeMode",
    "sampleRate",
    "sampleSize",
    "width"
  ],
  "MediaTrackSupportedConstraints": [
    "aspectRatio",
    "autoGainControl",
    "channelCount",
    "deviceId",
    "echoCancellation",
    "facingMode",
    "frameRate",
    "groupId",
    "height",
    "latency",
    "noiseSuppression",
    "resizeMode",
    "sampleRate",
    "sampleSize",
    "width"
  ],
  "Memory": [
    "Memory(descriptor)",
    "buffer",
    "constructor(descriptor)",
    "grow(delta)"
  ],
  "Memory/Memory(descriptor)": [
    "descriptor"
  ],
  "Memory/constructor(descriptor)": [
    "descriptor"
  ],
  "Memory/grow(delta)": [
    "delta"
  ],
  "MemoryDescriptor": [
    "initial",
    "maximum"
  ],
  "MessageChannel": [
    "port1",
    "port2"
  ],
  "MessageEvent": [
    "data",
    "initMessageEvent(type)",
    "initMessageEvent(type, bubbles)",
    "initMessageEvent(type, bubbles, cancelable)",
    "initMessageEvent(type, bubbles, cancelable, data)",
    "initMessageEvent(type, bubbles, cancelable, data, origin)",
    "initMessageEvent(type, bubbles, cancelable, data, origin, lastEventId)",
    "initMessageEvent(type, bubbles, cancelable, data, origin, lastEventId, source)",
    "lastEventId",
    "origin",
    "ports",
    "source"
  ],
  "MessageEventInit": [
    "data",
    "lastEventId",
    "origin",
    "ports",
    "source"
  ],
  "MessagePort": [
    "close()",
    "message",
    "messageerror",
    "onmessage",
    "onmessageerror",
    "postMessage(message)",
    "postMessage(message, transfer)",
    "start()"
  ],
  "MimeType": [
    "description",
    "enabledPlugin",
    "suffixes",
    "type"
  ],
  "MimeTypeArray": [
    "item(index)",
    "length",
    "namedItem(name)"
  ],
  "MockSensor": [
    "maxSamplingFrequency",
    "minSamplingFrequency",
    "requestedSamplingFrequency"
  ],
  "MockSensorConfiguration": [
    "connected",
    "maxSamplingFrequency",
    "minSamplingFrequency",
    "mockSensorType"
  ],
  "MockSensorType": [
    "\"absolute-orientation\"",
    "\"accelerometer\"",
    "\"ambient-light\"",
    "\"geolocation\"",
    "\"gravity\"",
    "\"gyroscope\"",
    "\"linear-acceleration\"",
    "\"magnetometer\"",
    "\"proximity\"",
    "\"relative-orientation\"",
    "\"uncalibrated-magnetometer\""
  ],
  "Module": [
    "Module(bytes)",
    "constructor(bytes)",
    "customSections(moduleObject, sectionName)",
    "exports(moduleObject)",
    "imports(moduleObject)"
  ],
  "Module/Module(bytes)": [
    "bytes"
  ],
  "Module/constructor(bytes)": [
    "bytes"
  ],
  "Module/customSections(moduleObject, sectionName)": [
    "moduleObject",
    "sectionName"
  ],
  "Module/exports(moduleObject)": [
    "moduleObject"
  ],
  "Module/imports(moduleObject)": [
    "moduleObject"
  ],
  "ModuleExportDescriptor": [
    "kind",
    "name"
  ],
  "ModuleImportDescriptor": [
    "kind",
    "module",
    "name"
  ],
  "MouseEvent": [
    "MouseEvent(type)",
    "MouseEvent(type, eventInitDict)",
    "altKey",
    "button",
    "buttons",
    "clientX",
    "clientY",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "ctrlKey",
    "getModifierState(keyArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKey",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg, buttonArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg, buttonArg, relatedTargetArg)",
    "metaKey",
    "offsetX",
    "offsetY",
    "pageX",
    "pageY",
    "relatedTarget",
    "screenX",
    "screenY",
    "shiftKey",
    "x",
    "y"
  ],
  "MouseEvent/MouseEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "MouseEvent/MouseEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "MouseEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "MouseEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "MouseEvent/getModifierState(keyArg)": [
    "keyArg"
  ],
  "MouseEvent/initMouseEvent(typeArg": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg, buttonArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg, buttonArg, relatedTargetArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEventInit": [
    "button",
    "buttons",
    "clientX",
    "clientY",
    "relatedTarget",
    "screenX",
    "screenY"
  ],
  "MultiCacheQueryOptions": [
    "cacheName"
  ],
  "MutationCallback": [
    "mutations",
    "observer"
  ],
  "MutationEvent": [
    "ADDITION",
    "MODIFICATION",
    "REMOVAL",
    "attrChange",
    "attrName",
    "initMutationEvent(typeArg",
    "initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg)",
    "initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg)",
    "initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg)",
    "initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg, attrNameArg)",
    "initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg, attrNameArg, attrChangeArg)",
    "newValue",
    "prevValue",
    "relatedNode"
  ],
  "MutationEvent/initMutationEvent(typeArg": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationEvent/initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg)": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationEvent/initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg)": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationEvent/initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg, attrNameArg)": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationEvent/initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg, attrNameArg, attrChangeArg)": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationObserver": [
    "MutationObserver(callback)",
    "callback",
    "constructor(callback)",
    "disconnect()",
    "node list",
    "observe(target)",
    "observe(target, options)",
    "record queue",
    "takeRecords()"
  ],
  "MutationObserver/MutationObserver(callback)": [
    "callback"
  ],
  "MutationObserver/constructor(callback)": [
    "callback"
  ],
  "MutationObserver/observe(target)": [
    "options",
    "target"
  ],
  "MutationObserver/observe(target, options)": [
    "options",
    "target"
  ],
  "MutationObserverInit": [
    "attributeFilter",
    "attributeOldValue",
    "attributes",
    "characterData",
    "characterDataOldValue",
    "childList",
    "subtree"
  ],
  "MutationRecord": [
    "addedNodes",
    "attributeName",
    "attributeNamespace",
    "nextSibling",
    "oldValue",
    "previousSibling",
    "removedNodes",
    "target",
    "type"
  ],
  "NamedFlow": [
    "firstEmptyRegionIndex",
    "getContent()",
    "getRegions()",
    "getRegionsByContent",
    "getRegionsByContent()",
    "getRegionsByContent(node)",
    "name",
    "overset"
  ],
  "NamedFlow/getRegionsByContent()": [
    "node"
  ],
  "NamedFlow/getRegionsByContent(node)": [
    "node"
  ],
  "NamedFlowMap": [
    "delete()",
    "get()",
    "has()",
    "set()"
  ],
  "NamedFlowMap/delete()": [
    "flowName"
  ],
  "NamedFlowMap/get()": [
    "flowName"
  ],
  "NamedFlowMap/has()": [
    "flowName"
  ],
  "NamedFlowMap/set()": [
    "flowName",
    "flowValue"
  ],
  "NamedNodeMap": [
    "attribute list",
    "element",
    "getNamedItem(qualifiedName)",
    "getNamedItemNS(namespace, localName)",
    "item(index)",
    "length",
    "removeNamedItem(qualifiedName)",
    "removeNamedItemNS(namespace, localName)",
    "setNamedItem(attr)",
    "setNamedItemNS(attr)"
  ],
  "NamedNodeMap/getNamedItem(qualifiedName)": [
    "qualifiedName"
  ],
  "NamedNodeMap/getNamedItemNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "NamedNodeMap/item(index)": [
    "index"
  ],
  "NamedNodeMap/removeNamedItem(qualifiedName)": [
    "qualifiedName"
  ],
  "NamedNodeMap/removeNamedItemNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "NamedNodeMap/setNamedItem(attr)": [
    "attr"
  ],
  "NamedNodeMap/setNamedItemNS(attr)": [
    "attr"
  ],
  "NavigationEvent": [
    "NavigationEvent(type)",
    "NavigationEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "dir",
    "navbeforefocus",
    "navnotarget",
    "relatedTarget"
  ],
  "NavigationEvent/NavigationEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "NavigationEvent/NavigationEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "NavigationEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "NavigationEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "NavigationEventInit": [
    "dir",
    "relatedTarget"
  ],
  "NavigationPreloadManager": [
    "disable()",
    "enable()",
    "getState()",
    "setHeaderValue(value)"
  ],
  "NavigationPreloadManager/setHeaderValue(value)": [
    "value"
  ],
  "NavigationPreloadState": [
    "enabled",
    "headerValue"
  ],
  "NavigationTimingType": [
    "back_forward",
    "navigate",
    "prerender",
    "reload"
  ],
  "Navigator": [
    "[[sharePromise]]",
    "bluetooth",
    "canShare()",
    "canShare(data)",
    "credentials",
    "getUserMedia",
    "getUserMedia()",
    "getUserMedia(constraints, successCallback, errorCallback)",
    "keyboard",
    "maxTouchPoints",
    "mediaDevices",
    "permissions",
    "serial",
    "serviceWorker",
    "share()",
    "share(data)",
    "usb",
    "validate share data",
    "xr"
  ],
  "NavigatorConcurrentHardware": [
    "navigator.hardwareConcurrency"
  ],
  "NavigatorContentUtils": [
    "registerProtocolHandler(scheme, url)",
    "unregisterProtocolHandler(scheme, url)"
  ],
  "NavigatorCookies": [
    "cookieEnabled"
  ],
  "NavigatorID": [
    "appCodeName",
    "appName",
    "appVersion",
    "oscpu",
    "platform",
    "product",
    "productSub",
    "taintEnabled()",
    "userAgent",
    "vendor",
    "vendorSub"
  ],
  "NavigatorLanguage": [
    "language",
    "languages"
  ],
  "NavigatorOnLine": [
    "onLine"
  ],
  "NavigatorPlugins": [
    "javaEnabled()",
    "mimeTypes",
    "pdfViewerEnabled",
    "plugins"
  ],
  "NavigatorStorage": [
    "storage"
  ],
  "Node": [
    "ATTRIBUTE_NODE",
    "CDATA_SECTION_NODE",
    "COMMENT_NODE",
    "DOCUMENT_FRAGMENT_NODE",
    "DOCUMENT_NODE",
    "DOCUMENT_POSITION_CONTAINED_BY",
    "DOCUMENT_POSITION_CONTAINS",
    "DOCUMENT_POSITION_DISCONNECTED",
    "DOCUMENT_POSITION_FOLLOWING",
    "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
    "DOCUMENT_POSITION_PRECEDING",
    "DOCUMENT_TYPE_NODE",
    "ELEMENT_NODE",
    "ENTITY_NODE",
    "ENTITY_REFERENCE_NODE",
    "NOTATION_NODE",
    "PROCESSING_INSTRUCTION_NODE",
    "TEXT_NODE",
    "appendChild(node)",
    "baseURI",
    "childNodes",
    "cloneNode()",
    "cloneNode(deep)",
    "compareDocumentPosition(other)",
    "contains(other)",
    "empty",
    "ensure pre-insertion validity",
    "equals",
    "firstChild",
    "getFeature()",
    "getRootNode()",
    "getRootNode(options)",
    "getUserData()",
    "hasChildNodes()",
    "insertBefore(node, child)",
    "isConnected",
    "isDefaultNamespace(namespace)",
    "isEqualNode(otherNode)",
    "isSameNode(otherNode)",
    "isSupported",
    "language",
    "lastChild",
    "length",
    "lookupNamespaceURI(prefix)",
    "lookupPrefix(namespace)",
    "nextSibling",
    "node document",
    "nodeName",
    "nodeType",
    "nodeValue",
    "normalize()",
    "ownerDocument",
    "parentElement",
    "parentNode",
    "previousSibling",
    "removeChild(child)",
    "replace all",
    "replaceChild(node, child)",
    "setUserData()",
    "supported tokens",
    "textContent"
  ],
  "Node/appendChild(node)": [
    "node"
  ],
  "Node/cloneNode()": [
    "deep"
  ],
  "Node/cloneNode(deep)": [
    "deep"
  ],
  "Node/compareDocumentPosition(other)": [
    "other"
  ],
  "Node/contains(other)": [
    "other"
  ],
  "Node/getRootNode()": [
    "options"
  ],
  "Node/getRootNode(options)": [
    "options"
  ],
  "Node/insertBefore(node, child)": [
    "child",
    "node"
  ],
  "Node/isDefaultNamespace(namespace)": [
    "namespace"
  ],
  "Node/isEqualNode(otherNode)": [
    "otherNode"
  ],
  "Node/isSameNode(otherNode)": [
    "otherNode"
  ],
  "Node/lookupNamespaceURI(prefix)": [
    "prefix"
  ],
  "Node/lookupPrefix(namespace)": [
    "namespace"
  ],
  "Node/removeChild(child)": [
    "child"
  ],
  "Node/replaceChild(node, child)": [
    "child",
    "node"
  ],
  "NodeFilter": [
    "FILTER_ACCEPT",
    "FILTER_REJECT",
    "FILTER_SKIP",
    "SHOW_ALL",
    "SHOW_ATTRIBUTE",
    "SHOW_CDATA_SECTION",
    "SHOW_COMMENT",
    "SHOW_DOCUMENT",
    "SHOW_DOCUMENT_FRAGMENT",
    "SHOW_DOCUMENT_TYPE",
    "SHOW_ELEMENT",
    "SHOW_ENTITY",
    "SHOW_ENTITY_REFERENCE",
    "SHOW_NOTATION",
    "SHOW_PROCESSING_INSTRUCTION",
    "SHOW_TEXT",
    "acceptNode",
    "acceptNode(node)"
  ],
  "NodeFilter/acceptNode(node)": [
    "node"
  ],
  "NodeIterator": [
    "detach()",
    "expandEntityReferences",
    "filter",
    "iterator collection",
    "nextNode()",
    "pointer before reference",
    "pointerBeforeReferenceNode",
    "previousNode()",
    "reference",
    "referenceNode",
    "root",
    "traverse",
    "whatToShow"
  ],
  "NodeList": [
    "item(index)",
    "length"
  ],
  "NodeList/item(index)": [
    "index"
  ],
  "NonDocumentTypeChildNode": [
    "nextElementSibling",
    "previousElementSibling"
  ],
  "NonElementParentNode": [
    "getElementById(elementId)"
  ],
  "NonElementParentNode/getElementById(elementId)": [
    "elementId"
  ],
  "Notification": [
    "Notification(title)",
    "Notification(title, options)",
    "actions",
    "badge",
    "body",
    "close()",
    "constructor(title)",
    "constructor(title, options)",
    "data",
    "dir",
    "icon",
    "image",
    "lang",
    "maxActions",
    "onclick",
    "onclose",
    "onerror",
    "onshow",
    "permission",
    "renotify",
    "requestPermission()",
    "requestPermission(deprecatedCallback)",
    "requireInteraction",
    "silent",
    "tag",
    "timestamp",
    "title",
    "vibrate"
  ],
  "Notification/Notification(title)": [
    "options",
    "title"
  ],
  "Notification/Notification(title, options)": [
    "options",
    "title"
  ],
  "Notification/constructor(title)": [
    "options",
    "title"
  ],
  "Notification/constructor(title, options)": [
    "options",
    "title"
  ],
  "Notification/requestPermission()": [
    "deprecatedCallback"
  ],
  "Notification/requestPermission(deprecatedCallback)": [
    "deprecatedCallback"
  ],
  "NotificationAction": [
    "action",
    "icon",
    "title"
  ],
  "NotificationDirection": [
    "\"auto\"",
    "\"ltr\"",
    "\"rtl\""
  ],
  "NotificationEvent": [
    "NotificationEvent(type, eventInitDict)",
    "action",
    "constructor",
    "constructor(type, eventInitDict)",
    "notification"
  ],
  "NotificationEvent/NotificationEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "NotificationEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "NotificationEventInit": [
    "action",
    "notification"
  ],
  "NotificationOptions": [
    "actions",
    "badge",
    "body",
    "data",
    "dir",
    "icon",
    "image",
    "lang",
    "renotify",
    "requireInteraction",
    "silent",
    "tag",
    "timestamp",
    "vibrate"
  ],
  "NotificationPermission": [
    "\"default\"",
    "\"denied\"",
    "\"granted\""
  ],
  "NotificationPermissionCallback": [
    "permission"
  ],
  "OfflineAudioCompletionEvent": [
    "OfflineAudioCompletionEvent(type, eventInitDict)",
    "constructor",
    "constructor(type, eventInitDict)",
    "renderedBuffer"
  ],
  "OfflineAudioCompletionEvent/OfflineAudioCompletionEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "OfflineAudioCompletionEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "OfflineAudioCompletionEventInit": [
    "renderedBuffer"
  ],
  "OfflineAudioContext": [
    "OfflineAudioContext(contextOptions)",
    "OfflineAudioContext(numberOfChannels, length, sampleRate)",
    "[[rendered buffer]]",
    "[[rendering started]]",
    "constructor(contextOptions)",
    "constructor(numberOfChannels, length, sampleRate)",
    "length",
    "oncomplete",
    "resume()",
    "startRendering()",
    "suspend(suspendTime)"
  ],
  "OfflineAudioContext/constructor(contextOptions)": [
    "contextOptions"
  ],
  "OfflineAudioContext/constructor(numberOfChannels, length, sampleRate)": [
    "length",
    "numberOfChannels",
    "sampleRate"
  ],
  "OfflineAudioContext/suspend()": [
    "suspendTime"
  ],
  "OfflineAudioContext/suspend(suspendTime)": [
    "suspendTime"
  ],
  "OfflineAudioContextOptions": [
    "length",
    "numberOfChannels",
    "sampleRate"
  ],
  "OffscreenCanvas": [
    "OffscreenCanvas(width, height)",
    "canvas",
    "contextlost",
    "contextrestored",
    "convertToBlob()",
    "getContext(contextId)",
    "height",
    "oncontextlost",
    "oncontextrestored",
    "transferToImageBitmap()",
    "width"
  ],
  "OptionalEffectTiming": [
    "delay",
    "direction",
    "duration",
    "easing",
    "endDelay",
    "fill",
    "iterationStart",
    "iterations",
    "playbackRate"
  ],
  "OrientationLockType": [
    "any",
    "landscape",
    "landscape-primary",
    "landscape-secondary",
    "natural",
    "orientation lock",
    "portrait",
    "portrait-primary",
    "portrait-secondary",
    "pre-lock conditions"
  ],
  "OrientationType": [
    "current orientation angle",
    "current orientation type",
    "landscape-primary",
    "landscape-secondary",
    "portrait-primary",
    "portrait-secondary",
    "screen orientation values table"
  ],
  "OscillatorNode": [
    "OscillatorNode(context)",
    "OscillatorNode(context, options)",
    "constructor(context)",
    "constructor(context, options)",
    "detune",
    "frequency",
    "setPeriodicWave(periodicWave)",
    "type"
  ],
  "OscillatorNode/OscillatorNode(context)": [
    "context",
    "options"
  ],
  "OscillatorNode/OscillatorNode(context, options)": [
    "context",
    "options"
  ],
  "OscillatorNode/constructor()": [
    "context",
    "options"
  ],
  "OscillatorNode/constructor(context)": [
    "context",
    "options"
  ],
  "OscillatorNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "OscillatorNode/setPeriodicWave()": [
    "periodicWave"
  ],
  "OscillatorNode/setPeriodicWave(periodicWave)": [
    "periodicWave"
  ],
  "OscillatorOptions": [
    "detune",
    "frequency",
    "periodicWave",
    "type"
  ],
  "OscillatorType": [
    "\"custom\"",
    "\"sawtooth\"",
    "\"sine\"",
    "\"square\"",
    "\"triangle\"",
    "custom",
    "sawtooth",
    "sine",
    "square",
    "triangle"
  ],
  "OverSampleType": [
    "\"2x\"",
    "\"4x\"",
    "\"none\"",
    "2x",
    "4x",
    "none"
  ],
  "OverconstrainedError": [
    "constraint",
    "constructor",
    "constructor()",
    "constructor(constraint)",
    "constructor(constraint, message)"
  ],
  "PageTransitionEvent": [
    "persisted"
  ],
  "PaintRenderingContext2D": [
    "alpha",
    "output bitmap"
  ],
  "PaintRenderingContext2DSettings": [
    "alpha"
  ],
  "PaintSize": [
    "height",
    "width"
  ],
  "PaintWorkletGlobalScope": [
    "devicePixelRatio",
    "registerPaint(name, paintCtor)"
  ],
  "PaintWorkletGlobalScope/registerPaint(name, paintCtor)": [
    "name",
    "paintCtor"
  ],
  "PannerNode": [
    "PannerNode(context)",
    "PannerNode(context, options)",
    "coneInnerAngle",
    "coneOuterAngle",
    "coneOuterGain",
    "constructor(context)",
    "constructor(context, options)",
    "distanceModel",
    "maxDistance",
    "orientationX",
    "orientationY",
    "orientationZ",
    "panningModel",
    "positionX",
    "positionY",
    "positionZ",
    "refDistance",
    "rolloffFactor",
    "setOrientation(x, y, z)",
    "setPosition(x, y, z)"
  ],
  "PannerNode/PannerNode(context)": [
    "context",
    "options"
  ],
  "PannerNode/PannerNode(context, options)": [
    "context",
    "options"
  ],
  "PannerNode/constructor()": [
    "context",
    "options"
  ],
  "PannerNode/constructor(context)": [
    "context",
    "options"
  ],
  "PannerNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "PannerNode/setOrientation()": [
    "x",
    "y",
    "z"
  ],
  "PannerNode/setOrientation(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "PannerNode/setPosition()": [
    "x",
    "y",
    "z"
  ],
  "PannerNode/setPosition(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "PannerOptions": [
    "coneInnerAngle",
    "coneOuterAngle",
    "coneOuterGain",
    "distanceModel",
    "maxDistance",
    "orientationX",
    "orientationY",
    "orientationZ",
    "panningModel",
    "positionX",
    "positionY",
    "positionZ",
    "refDistance",
    "rolloffFactor"
  ],
  "PanningModelType": [
    "\"HRTF\"",
    "\"equalpower\"",
    "HRTF",
    "equalpower"
  ],
  "ParentNode": [
    "append()",
    "append(...nodes)",
    "append(nodes)",
    "childElementCount",
    "children",
    "firstElementChild",
    "lastElementChild",
    "prepend()",
    "prepend(...nodes)",
    "prepend(nodes)",
    "querySelector(selectors)",
    "querySelectorAll(selectors)",
    "replaceChildren()",
    "replaceChildren(...nodes)",
    "replaceChildren(nodes)"
  ],
  "ParentNode/append()": [
    "nodes"
  ],
  "ParentNode/append(...nodes)": [
    "nodes"
  ],
  "ParentNode/prepend()": [
    "nodes"
  ],
  "ParentNode/prepend(...nodes)": [
    "nodes"
  ],
  "ParentNode/querySelector(selectors)": [
    "selectors"
  ],
  "ParentNode/querySelectorAll(selectors)": [
    "selectors"
  ],
  "ParentNode/replaceChildren()": [
    "nodes"
  ],
  "ParentNode/replaceChildren(...nodes)": [
    "nodes"
  ],
  "ParityType": [
    "even",
    "none",
    "odd"
  ],
  "PasswordCredential": [
    "PasswordCredential(data)",
    "PasswordCredential(form)",
    "[[CollectFromCredentialStore]](origin, options, sameOriginWithAncestors)",
    "[[Create]](origin, options, sameOriginWithAncestors)",
    "[[Store]](credential, sameOriginWithAncestors)",
    "constructor(data)",
    "constructor(form)",
    "password"
  ],
  "PasswordCredential/PasswordCredential(data)": [
    "data"
  ],
  "PasswordCredential/PasswordCredential(form)": [
    "form"
  ],
  "PasswordCredential/constructor(data)": [
    "data"
  ],
  "PasswordCredential/constructor(form)": [
    "form"
  ],
  "PasswordCredentialData": [
    "iconURL",
    "name",
    "origin",
    "password"
  ],
  "Path2D": [
    "Path2D(path)",
    "addPath(path, transform)"
  ],
  "PaymentComplete": [
    "fail",
    "success",
    "unknown"
  ],
  "PaymentCurrencyAmount": [
    "check and canonicalize amount",
    "check and canonicalize total amount",
    "currency",
    "valid decimal monetary value",
    "value"
  ],
  "PaymentDetailsBase": [
    "displayItems",
    "modifiers"
  ],
  "PaymentDetailsInit": [
    "id",
    "total"
  ],
  "PaymentDetailsModifier": [
    "additionalDisplayItems",
    "data",
    "supportedMethods",
    "total"
  ],
  "PaymentDetailsUpdate": [
    "paymentMethodErrors",
    "total"
  ],
  "PaymentItem": [
    "amount",
    "label",
    "pending"
  ],
  "PaymentMethodChangeEvent": [
    "constructor",
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "methodDetails",
    "methodName"
  ],
  "PaymentMethodChangeEventInit": [
    "methodDetails",
    "methodName"
  ],
  "PaymentMethodData": [
    "data",
    "supportedMethods"
  ],
  "PaymentRequest": [
    "[[acceptPromise]]",
    "[[details]]",
    "[[handler]]",
    "[[response]]",
    "[[serializedMethodData]]",
    "[[serializedModifierData]]",
    "[[state]]",
    "[[updating]]",
    "abort()",
    "canMakePayment()",
    "closed",
    "constructor",
    "constructor()",
    "constructor(methodData, details)",
    "created",
    "id",
    "interactive",
    "onpaymentmethodchange",
    "payment request is showing",
    "payment-relevant browsing context",
    "paymentrequest(methoddata, details)",
    "paymentrequest.paymentrequest()",
    "show()",
    "show(detailsPromise)",
    "state"
  ],
  "PaymentRequestUpdateEvent": [
    "Constructor",
    "PaymentRequestUpdateEvent.PaymentRequestUpdateEvent()",
    "[[waitForUpdate]]",
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "updateWith()",
    "updateWith(detailsPromise)"
  ],
  "PaymentResponse": [
    "[[complete]]",
    "[[request]]",
    "[[retryPromise]]",
    "complete()",
    "complete(result)",
    "details",
    "methodName",
    "requestId",
    "retry()",
    "retry(errorFields)"
  ],
  "PaymentValidationErrors": [
    "error",
    "paymentMethod"
  ],
  "Pbkdf2Params": [
    "hash",
    "iterations",
    "salt"
  ],
  "Performance": [
    "Performance.now",
    "Performance.now()",
    "Performance.timeOrigin",
    "Performance.toJSON",
    "Performance.toJSON()",
    "add a performanceresourcetiming entry",
    "can add resource timing entry",
    "clearResourceTimings",
    "clearResourceTimings()",
    "copy secondary buffer",
    "fire a buffer full event",
    "navigation",
    "now",
    "now()",
    "onresourcetimingbufferfull",
    "resource timing buffer current size",
    "resource timing buffer full event pending flag",
    "resource timing buffer size limit",
    "resource timing secondary buffer",
    "resource timing secondary buffer current size",
    "setResourceTimingBufferSize",
    "setResourceTimingBufferSize()",
    "setResourceTimingBufferSize(maxSize)",
    "timeOrigin",
    "timing",
    "toJSON",
    "toJSON()"
  ],
  "PerformanceNavigation": [
    "TYPE_BACK_FORWARD",
    "TYPE_NAVIGATE",
    "TYPE_RELOAD",
    "TYPE_RESERVED",
    "redirectCount",
    "toJSON()",
    "type"
  ],
  "PerformanceNavigationTiming": [
    "domComplete",
    "domContentLoadedEventEnd",
    "domContentLoadedEventStart",
    "domInteractive",
    "loadEventEnd",
    "loadEventStart",
    "navigation type",
    "previous document unload timing",
    "redirect count",
    "redirectCount",
    "service worker timing",
    "toJSON()",
    "type",
    "unloadEventEnd",
    "unloadEventStart"
  ],
  "PerformanceResourceTiming": [
    "cache mode",
    "connectEnd",
    "connectStart",
    "decodedBodySize",
    "document load timing",
    "domainLookupEnd",
    "domainLookupStart",
    "duration",
    "encodedBodySize",
    "entrytype",
    "fetchStart",
    "initiator type",
    "initiatorType",
    "name",
    "nextHopProtocol",
    "performanceentry",
    "redirectEnd",
    "redirectStart",
    "requestStart",
    "requested url",
    "resource info",
    "responseEnd",
    "responseStart",
    "secureConnectionStart",
    "starttime",
    "timing info",
    "toJSON",
    "toJSON()",
    "transferSize",
    "workerStart"
  ],
  "PerformanceTiming": [
    "connectEnd",
    "connectStart",
    "domComplete",
    "domContentLoadedEventEnd",
    "domContentLoadedEventStart",
    "domInteractive",
    "domLoading",
    "domainLookupEnd",
    "domainLookupStart",
    "fetchStart",
    "loadEventEnd",
    "loadEventStart",
    "navigationStart",
    "redirectEnd",
    "redirectStart",
    "requestStart",
    "responseEnd",
    "responseStart",
    "secureConnectionStart",
    "toJSON()",
    "unloadEventEnd",
    "unloadEventStart"
  ],
  "PeriodicWave": [
    "PeriodicWave(context)",
    "PeriodicWave(context, options)",
    "[[imag]]",
    "[[normalize]]",
    "[[real]]",
    "constructor(context)",
    "constructor(context, options)"
  ],
  "PeriodicWave/PeriodicWave(context)": [
    "context",
    "options"
  ],
  "PeriodicWave/PeriodicWave(context, options)": [
    "context",
    "options"
  ],
  "PeriodicWave/constructor()": [
    "context",
    "options"
  ],
  "PeriodicWave/constructor(context)": [
    "context",
    "options"
  ],
  "PeriodicWave/constructor(context, options)": [
    "context",
    "options"
  ],
  "PeriodicWaveConstraints": [
    "disableNormalization"
  ],
  "PeriodicWaveOptions": [
    "imag",
    "real"
  ],
  "PermissionDescriptor": [
    "name",
    "stronger than"
  ],
  "PermissionName": [
    "\"usb\""
  ],
  "PermissionSetParameters": [
    "descriptor",
    "oneRealm",
    "state"
  ],
  "PermissionState": [
    "denied",
    "granted",
    "prompt"
  ],
  "PermissionStatus": [
    "[[query]]",
    "create a permissionstatus",
    "name",
    "onchange",
    "permissions task source",
    "permissionstatus update steps",
    "state"
  ],
  "Permissions": [
    "query a permission",
    "query()",
    "query(permissionDesc)",
    "request(permissionDesc)",
    "revoke(permissionDesc)"
  ],
  "Permissions/request(permissionDesc)": [
    "permissionDesc"
  ],
  "Permissions/revoke(permissionDesc)": [
    "permissionDesc"
  ],
  "PermissionsPolicy": [
    "allowedFeatures",
    "allowedFeatures()",
    "allowsFeature",
    "allowsFeature(feature)",
    "allowsFeature(feature, origin)",
    "features",
    "features()",
    "getAllowlistForFeature",
    "getAllowlistForFeature(feature)"
  ],
  "PermissionsPolicy/allowsFeature(feature)": [
    "feature",
    "origin"
  ],
  "PermissionsPolicy/allowsFeature(feature, origin)": [
    "feature",
    "origin"
  ],
  "PermissionsPolicy/getAllowlistForFeature(feature)": [
    "feature"
  ],
  "PermissionsPolicyViolationReportBody": [
    "columnNumber",
    "columnnumber",
    "disposition",
    "featureId",
    "featureid",
    "lineNumber",
    "linenumber",
    "sourceFile",
    "sourcefile"
  ],
  "PlaybackDirection": [
    "\"alternate\"",
    "\"alternate-reverse\"",
    "\"normal\"",
    "\"reverse\""
  ],
  "Plugin": [
    "description",
    "filename",
    "item(index)",
    "length",
    "name",
    "namedItem(name)"
  ],
  "PluginArray": [
    "item(index)",
    "length",
    "namedItem(name)",
    "refresh()"
  ],
  "PointerEvent": [
    "altitudeAngle",
    "azimuthAngle",
    "constructor",
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "getCoalescedEvents()",
    "getPredictedEvents()",
    "height",
    "isPrimary",
    "pointerId",
    "pointerType",
    "pressure",
    "tangentialPressure",
    "tiltX",
    "tiltY",
    "twist",
    "width"
  ],
  "PointerEventInit": [
    "altitudeAngle",
    "azimuthAngle",
    "coalescedEvents",
    "height",
    "isPrimary",
    "pointerId",
    "pointerType",
    "predictedEvents",
    "pressure",
    "tangentialPressure",
    "tiltX",
    "tiltY",
    "twist",
    "width"
  ],
  "PopStateEvent": [
    "state"
  ],
  "PredefinedColorSpace": [
    "display-p3",
    "srgb"
  ],
  "PremultiplyAlpha": [
    "default",
    "none",
    "premultiply"
  ],
  "ProcessingInstruction": [
    "substring data",
    "target"
  ],
  "ProgressEvent": [
    "ProgressEvent(type)",
    "ProgressEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "lengthComputable",
    "loaded",
    "total"
  ],
  "ProgressEvent/ProgressEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "ProgressEvent/ProgressEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ProgressEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "ProgressEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ProgressEventInit": [
    "lengthComputable",
    "loaded",
    "total"
  ],
  "PromiseRejectionEvent": [
    "promise",
    "reason"
  ],
  "PropertyDefinition": [
    "inherits",
    "initialValue",
    "name",
    "syntax"
  ],
  "PublicKeyCredential": [
    "[[CollectFromCredentialStore]](origin, options, sameOriginWithAncestors)",
    "[[Create]](origin, options, sameOriginWithAncestors)",
    "[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)",
    "[[Store]](credential, sameOriginWithAncestors)",
    "[[clientExtensionsResults]]",
    "[[discovery]]",
    "[[identifier]]",
    "[[preventSilentAccess]](credential, sameOriginWithAncestors)",
    "[[type]]",
    "authenticatorAttachment",
    "getClientExtensionResults",
    "getClientExtensionResults()",
    "isConditionalMediationAvailable",
    "isConditionalMediationAvailable()",
    "isUserVerifyingPlatformAuthenticatorAvailable",
    "isUserVerifyingPlatformAuthenticatorAvailable()",
    "issuing a credential request to an authenticator",
    "parseCreationOptionsFromJSON",
    "parseCreationOptionsFromJSON(options)",
    "parseRequestOptionsFromJSON",
    "parseRequestOptionsFromJSON(options)",
    "rawId",
    "response",
    "toJSON",
    "toJSON()"
  ],
  "PublicKeyCredential/[[Create]](origin, options, sameOriginWithAncestors)": [
    "options",
    "origin",
    "sameOriginWithAncestors"
  ],
  "PublicKeyCredential/[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)": [
    "options",
    "origin",
    "sameOriginWithAncestors"
  ],
  "PublicKeyCredential/[[Store]](credential, sameOriginWithAncestors)": [
    "credential",
    "sameOriginWithAncestors"
  ],
  "PublicKeyCredential/parseCreationOptionsFromJSON(options)": [
    "options"
  ],
  "PublicKeyCredential/parseRequestOptionsFromJSON(options)": [
    "options"
  ],
  "PublicKeyCredentialCreationOptions": [
    "attestation",
    "authenticatorSelection",
    "challenge",
    "excludeCredentials",
    "extensions",
    "pubKeyCredParams",
    "rp",
    "timeout",
    "user"
  ],
  "PublicKeyCredentialCreationOptionsJSON": [
    "attestation",
    "authenticatorSelection",
    "challenge",
    "excludeCredentials",
    "extensions",
    "pubKeyCredParams",
    "rp",
    "timeout",
    "user"
  ],
  "PublicKeyCredentialDescriptor": [
    "id",
    "transports",
    "type"
  ],
  "PublicKeyCredentialDescriptorJSON": [
    "id",
    "transports",
    "type"
  ],
  "PublicKeyCredentialEntity": [
    "name"
  ],
  "PublicKeyCredentialParameters": [
    "alg",
    "type"
  ],
  "PublicKeyCredentialRequestOptions": [
    "allowCredentials",
    "challenge",
    "extensions",
    "rpId",
    "timeout",
    "userVerification"
  ],
  "PublicKeyCredentialRequestOptionsJSON": [
    "allowCredentials",
    "challenge",
    "extensions",
    "rpId",
    "timeout",
    "userVerification"
  ],
  "PublicKeyCredentialRpEntity": [
    "id"
  ],
  "PublicKeyCredentialType": [
    "\"public-key\"",
    "public-key"
  ],
  "PublicKeyCredentialUserEntity": [
    "displayName",
    "id"
  ],
  "PublicKeyCredentialUserEntityJSON": [
    "displayName",
    "id",
    "name"
  ],
  "QueuingStrategy": [
    "highWaterMark",
    "size"
  ],
  "QueuingStrategyInit": [
    "highWaterMark"
  ],
  "QueuingStrategySize": [
    "chunk"
  ],
  "RTCAudioSourceStats": [
    "audioLevel",
    "echoReturnLoss",
    "echoReturnLossEnhancement",
    "totalAudioEnergy",
    "totalSamplesDuration"
  ],
  "RTCBundlePolicy": [
    "balanced",
    "max-bundle",
    "max-compat"
  ],
  "RTCCertificate": [
    "expires",
    "getFingerprints",
    "getFingerprints()"
  ],
  "RTCCertificateExpiration": [
    "expires"
  ],
  "RTCCertificateStats": [
    "base64Certificate",
    "fingerprint",
    "fingerprintAlgorithm",
    "issuerCertificateId"
  ],
  "RTCCodecStats": [
    "channels",
    "clockRate",
    "implementation",
    "mimeType",
    "payloadType",
    "sdpFmtpLine",
    "transportId"
  ],
  "RTCConfiguration": [
    "bundlePolicy",
    "certificates",
    "iceCandidatePoolSize",
    "iceServers",
    "iceTransportPolicy",
    "rtcpMuxPolicy"
  ],
  "RTCDTMFSender": [
    "canInsertDTMF",
    "insertDTMF",
    "insertDTMF()",
    "insertDTMF(tones)",
    "insertDTMF(tones, duration)",
    "insertDTMF(tones, duration, interToneGap)",
    "ontonechange",
    "toneBuffer",
    "unrecognized"
  ],
  "RTCDTMFToneChangeEvent": [
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "tone"
  ],
  "RTCDTMFToneChangeEventInit": [
    "tone"
  ],
  "RTCDataChannel": [
    "binaryType",
    "bufferedAmount",
    "bufferedAmountLowThreshold",
    "close",
    "close()",
    "id",
    "label",
    "maxPacketLifeTime",
    "maxRetransmits",
    "negotiated",
    "onbufferedamountlow",
    "onclose",
    "onclosing",
    "onerror",
    "onmessage",
    "onopen",
    "ordered",
    "protocol",
    "readyState",
    "send",
    "send!overload-1()",
    "send!overload-1(data)",
    "send!overload-2()",
    "send!overload-2(data)",
    "send!overload-3()",
    "send!overload-3(data)",
    "send()",
    "send(data)"
  ],
  "RTCDataChannelEvent": [
    "channel",
    "constructor()",
    "constructor(type, eventInitDict)"
  ],
  "RTCDataChannelEventInit": [
    "channel"
  ],
  "RTCDataChannelInit": [
    "id",
    "maxPacketLifeTime",
    "maxRetransmits",
    "negotiated",
    "ordered",
    "protocol"
  ],
  "RTCDataChannelState": [
    "closed",
    "closing",
    "connecting",
    "open"
  ],
  "RTCDataChannelStats": [
    "bytesReceived",
    "bytesSent",
    "dataChannelIdentifier",
    "label",
    "messagesReceived",
    "messagesSent",
    "protocol",
    "state"
  ],
  "RTCDtlsFingerprint": [
    "algorithm",
    "value"
  ],
  "RTCDtlsRole": [
    "client",
    "server",
    "unknown"
  ],
  "RTCDtlsTransport": [
    "getRemoteCertificates",
    "getRemoteCertificates()",
    "iceTransport",
    "onerror",
    "onstatechange",
    "state"
  ],
  "RTCDtlsTransportState": [
    "closed",
    "connected",
    "connecting",
    "failed",
    "new"
  ],
  "RTCError": [
    "constructor()",
    "constructor(init)",
    "constructor(init, message)",
    "errorDetail",
    "receivedAlert",
    "sctpCauseCode",
    "sdpLineNumber",
    "sentAlert"
  ],
  "RTCErrorDetailType": [
    "data-channel-failure",
    "dtls-failure",
    "fingerprint-failure",
    "hardware-encoder-error",
    "hardware-encoder-not-available",
    "sctp-failure",
    "sdp-syntax-error"
  ],
  "RTCErrorEvent": [
    "constructor()",
    "constructor(type, eventInitDict)",
    "error"
  ],
  "RTCErrorEventInit": [
    "error"
  ],
  "RTCErrorInit": [
    "errorDetail",
    "receivedAlert",
    "sctpCauseCode",
    "sdpLineNumber",
    "sentAlert"
  ],
  "RTCIceCandidate": [
    "address",
    "candidate",
    "component",
    "constructor()",
    "constructor(candidateInitDict)",
    "create an rtcicecandidate",
    "creating an rtcicecandidate",
    "foundation",
    "media stream \"identification-tag\"",
    "port",
    "priority",
    "protocol",
    "relatedAddress",
    "relatedPort",
    "rtcicecandidate()",
    "sdpMLineIndex",
    "sdpMid",
    "tcpType",
    "toJSON()",
    "type",
    "usernameFragment"
  ],
  "RTCIceCandidateInit": [
    "candidate",
    "sdpMLineIndex",
    "sdpMid",
    "usernameFragment"
  ],
  "RTCIceCandidatePair": [
    "local",
    "remote"
  ],
  "RTCIceCandidatePairStats": [
    "availableIncomingBitrate",
    "availableOutgoingBitrate",
    "bytesDiscardedOnSend",
    "bytesReceived",
    "bytesSent",
    "consentRequestsSent",
    "currentRoundTripTime",
    "currentRtt",
    "lastPacketReceivedTimestamp",
    "lastPacketSentTimestamp",
    "localCandidateId",
    "nominated",
    "packetsDiscardedOnSend",
    "packetsReceived",
    "packetsSent",
    "priority",
    "remoteCandidateId",
    "requestsReceived",
    "requestsSent",
    "responsesReceived",
    "responsesSent",
    "state",
    "totalRoundTripTime",
    "totalRtt",
    "transportId"
  ],
  "RTCIceCandidateStats": [
    "address",
    "candidateType",
    "deleted",
    "isRemote",
    "port",
    "priority",
    "protocol",
    "relayProtocol",
    "transportId",
    "url"
  ],
  "RTCIceCandidateType": [
    "host",
    "prflx",
    "relay",
    "srflx"
  ],
  "RTCIceComponent": [
    "rtcp",
    "rtp"
  ],
  "RTCIceConnectionState": [
    "checking",
    "closed",
    "completed",
    "connected",
    "disconnected",
    "failed",
    "new"
  ],
  "RTCIceCredentialType": [
    "password"
  ],
  "RTCIceGathererState": [
    "complete",
    "gathering",
    "new"
  ],
  "RTCIceGatheringState": [
    "complete",
    "gathering",
    "new"
  ],
  "RTCIceParameters": [
    "password",
    "usernameFragment"
  ],
  "RTCIceProtocol": [
    "tcp",
    "udp"
  ],
  "RTCIceRole": [
    "controlled",
    "controlling",
    "unknown"
  ],
  "RTCIceServer": [
    "credential",
    "credentialType",
    "urls",
    "username"
  ],
  "RTCIceTcpCandidateType": [
    "active",
    "passive",
    "so"
  ],
  "RTCIceTransport": [
    "component",
    "gatheringState",
    "getLocalCandidates",
    "getLocalCandidates()",
    "getLocalParameters",
    "getLocalParameters()",
    "getRemoteCandidates",
    "getRemoteCandidates()",
    "getRemoteParameters",
    "getRemoteParameters()",
    "getSelectedCandidatePair",
    "getSelectedCandidatePair()",
    "ongatheringstatechange",
    "onselectedcandidatepairchange",
    "onstatechange",
    "role",
    "state"
  ],
  "RTCIceTransportPolicy": [
    "all",
    "relay"
  ],
  "RTCIceTransportState": [
    "checking",
    "closed",
    "completed",
    "connected",
    "disconnected",
    "failed",
    "new"
  ],
  "RTCInboundRtpStreamStats": [
    "audioLevel",
    "bytesReceived",
    "concealedSamples",
    "concealmentEvents",
    "decoderImplementation",
    "estimatedPlayoutTimestamp",
    "fecPacketsDiscarded",
    "fecPacketsReceived",
    "firCount",
    "fractionLost",
    "frameHeight",
    "frameWidth",
    "framesDecoded",
    "framesPerSecond",
    "framesReceived",
    "headerBytesReceived",
    "insertedSamplesForDeceleration",
    "jitterBufferDelay",
    "jitterBufferEmittedCount",
    "jitterBufferMinimumDelay",
    "jitterBufferTargetDelay",
    "keyFramesDecoded",
    "kind",
    "lastPacketReceivedTimestamp",
    "mid",
    "nackCount",
    "packetsDiscarded",
    "pliCount",
    "qpSum",
    "remoteId",
    "removedSamplesForAcceleration",
    "silentConcealedSamples",
    "totalAudioEnergy",
    "totalDecodeTime",
    "totalInterFrameDelay",
    "totalProcessingDelay",
    "totalSamplesDuration",
    "totalSamplesReceived",
    "totalSquaredInterFrameDelay",
    "trackId",
    "trackIdentifier"
  ],
  "RTCLocalSessionDescriptionInit": [
    "sdp",
    "type"
  ],
  "RTCMediaSourceStats": [
    "kind",
    "trackIdentifier"
  ],
  "RTCMediaStreamStats": [
    "streamIdentifier",
    "trackIds"
  ],
  "RTCMediaStreamTrackStats": [
    "audioLevel",
    "concealedSamples",
    "concealmentEvents",
    "echoReturnLoss",
    "echoReturnLossEnhancement",
    "ended",
    "estimatedPlayoutTimestamp",
    "frameHeight",
    "frameWidth",
    "framesCaptured",
    "framesDecoded",
    "framesDropped",
    "framesPerSecond",
    "framesReceived",
    "framesSent",
    "hugeFramesSent",
    "insertedSamplesForDeceleration",
    "jitterBufferDelay",
    "jitterBufferEmittedCount",
    "keyFramesReceived",
    "keyFramesSent",
    "kind",
    "priority",
    "remoteSource",
    "removedSamplesForAcceleration",
    "silentConcealedSamples",
    "totalAudioEnergy",
    "totalSamplesDuration",
    "totalSamplesReceived",
    "trackIdentifier"
  ],
  "RTCOfferOptions": [
    "iceRestart",
    "offerToReceiveAudio",
    "offerToReceiveVideo"
  ],
  "RTCOutboundRtpStreamStats": [
    "encoderImplementation",
    "firCount",
    "frameHeight",
    "frameWidth",
    "framesEncoded",
    "framesPerSecond",
    "framesSent",
    "headerBytesSent",
    "hugeFramesSent",
    "keyFramesEncoded",
    "mediaSourceId",
    "mid",
    "nackCount",
    "pliCount",
    "qpSum",
    "qualityLimitationDurations",
    "qualityLimitationReason",
    "qualityLimitationResolutionChanges",
    "remoteId",
    "retransmittedBytesSent",
    "retransmittedPacketsSent",
    "rid",
    "targetBitrate",
    "totalEncodeTime",
    "totalEncodedBytesTarget",
    "totalPacketSendDelay",
    "trackId"
  ],
  "RTCPeerConnection": [
    "addIceCandidate",
    "addIceCandidate!overload-1()",
    "addIceCandidate!overload-1(candidate, successCallback, failureCallback)",
    "addIceCandidate()",
    "addIceCandidate(candidate)",
    "addTrack",
    "addTrack()",
    "addTrack(track)",
    "addTrack(track, streams)",
    "addTransceiver",
    "addTransceiver()",
    "addTransceiver(trackOrKind)",
    "addTransceiver(trackOrKind, init)",
    "administratively prohibited",
    "answerer's system state",
    "canTrickleIceCandidates",
    "close",
    "close the connection",
    "close()",
    "collectsenders",
    "collecttransceivers",
    "connectionState",
    "constructor()",
    "constructor(configuration)",
    "create an answer",
    "create an offer",
    "createAnswer",
    "createAnswer!overload-1()",
    "createAnswer!overload-1(successCallback, failureCallback)",
    "createAnswer()",
    "createAnswer(options)",
    "createDataChannel",
    "createDataChannel()",
    "createDataChannel(label)",
    "createDataChannel(label, dataChannelDict)",
    "createOffer",
    "createOffer!overload-1()",
    "createOffer!overload-1(successCallback, failureCallback)",
    "createOffer!overload-1(successCallback, failureCallback, options)",
    "createOffer()",
    "createOffer(options)",
    "creating an answer",
    "creating an offer",
    "currentLocalDescription",
    "currentRemoteDescription",
    "final steps to create an answer",
    "final steps to create an offer",
    "generateCertificate",
    "generateCertificate()",
    "generateCertificate(keygenAlgorithm)",
    "getConfiguration",
    "getConfiguration()",
    "getReceivers",
    "getReceivers()",
    "getSenders",
    "getSenders()",
    "getStats",
    "getStats()",
    "getStats(selector)",
    "getTransceivers",
    "getTransceivers()",
    "iceConnectionState",
    "iceGatheringState",
    "in-parallel steps to create an answer",
    "in-parallel steps to create an offer",
    "localDescription",
    "offerer's system state",
    "onconnectionstatechange",
    "ondatachannel",
    "onicecandidate",
    "onicecandidateerror",
    "oniceconnectionstatechange",
    "onicegatheringstatechange",
    "onnegotiationneeded",
    "onsignalingstatechange",
    "ontrack",
    "pendingLocalDescription",
    "pendingRemoteDescription",
    "remoteDescription",
    "removeTrack",
    "removeTrack()",
    "removeTrack(sender)",
    "restartIce",
    "restartIce()",
    "sctp",
    "setConfiguration",
    "setConfiguration()",
    "setConfiguration(configuration)",
    "setLocalDescription",
    "setLocalDescription!overload-1()",
    "setLocalDescription!overload-1(description, successCallback, failureCallback)",
    "setLocalDescription()",
    "setLocalDescription(description)",
    "setRemoteDescription",
    "setRemoteDescription!overload-1()",
    "setRemoteDescription!overload-1(description, successCallback, failureCallback)",
    "setRemoteDescription()",
    "setRemoteDescription(description)",
    "signalingState"
  ],
  "RTCPeerConnectionIceErrorEvent": [
    "address",
    "constructor()",
    "constructor(type, eventInitDict)",
    "errorCode",
    "errorText",
    "port",
    "url"
  ],
  "RTCPeerConnectionIceErrorEventInit": [
    "address",
    "errorCode",
    "errorText",
    "port",
    "url"
  ],
  "RTCPeerConnectionIceEvent": [
    "candidate",
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "url"
  ],
  "RTCPeerConnectionIceEventInit": [
    "candidate",
    "url"
  ],
  "RTCPeerConnectionState": [
    "closed",
    "connected",
    "connecting",
    "disconnected",
    "failed",
    "new"
  ],
  "RTCPeerConnectionStats": [
    "dataChannelsClosed",
    "dataChannelsOpened"
  ],
  "RTCQualityLimitationReason": [
    "bandwidth",
    "cpu",
    "none",
    "other"
  ],
  "RTCReceivedRtpStreamStats": [
    "framesDropped",
    "jitter",
    "packetsLost",
    "packetsReceived"
  ],
  "RTCRemoteInboundRtpStreamStats": [
    "fractionLost",
    "localId",
    "roundTripTime",
    "roundTripTimeMeasurements",
    "totalRoundTripTime"
  ],
  "RTCRemoteOutboundRtpStreamStats": [
    "localId",
    "remoteTimestamp",
    "reportsSent",
    "roundTripTime",
    "roundTripTimeMeasurements",
    "totalRoundTripTime"
  ],
  "RTCRtcpMuxPolicy": [
    "require"
  ],
  "RTCRtcpParameters": [
    "cname",
    "reducedSize"
  ],
  "RTCRtpCapabilities": [
    "codecs",
    "headerExtensions"
  ],
  "RTCRtpCodecCapability": [
    "channels",
    "clockRate",
    "mimeType",
    "sdpFmtpLine"
  ],
  "RTCRtpCodecParameters": [
    "channels",
    "clockRate",
    "mimeType",
    "payloadType",
    "sdpFmtpLine"
  ],
  "RTCRtpCodingParameters": [
    "rid"
  ],
  "RTCRtpContributingSource": [
    "audioLevel",
    "rtpTimestamp",
    "source",
    "timestamp"
  ],
  "RTCRtpEncodingParameters": [
    "active",
    "maxBitrate",
    "scaleResolutionDownBy"
  ],
  "RTCRtpHeaderExtensionCapability": [
    "uri"
  ],
  "RTCRtpHeaderExtensionParameters": [
    "encrypted",
    "id",
    "uri"
  ],
  "RTCRtpParameters": [
    "codecs",
    "headerExtensions",
    "rtcp"
  ],
  "RTCRtpReceiver": [
    "getCapabilities",
    "getCapabilities()",
    "getCapabilities(kind)",
    "getContributingSources",
    "getContributingSources()",
    "getParameters",
    "getParameters()",
    "getStats",
    "getStats()",
    "getSynchronizationSources",
    "getSynchronizationSources()",
    "track",
    "transport"
  ],
  "RTCRtpSendParameters": [
    "encodings",
    "transactionId"
  ],
  "RTCRtpSender": [
    "dtmf",
    "getCapabilities",
    "getCapabilities()",
    "getCapabilities(kind)",
    "getParameters",
    "getParameters()",
    "getStats",
    "getStats()",
    "read-only parameter",
    "replaceTrack",
    "replaceTrack()",
    "replaceTrack(withTrack)",
    "setParameters",
    "setParameters()",
    "setParameters(parameters)",
    "setStreams",
    "setStreams()",
    "setStreams(streams)",
    "track",
    "transport"
  ],
  "RTCRtpStreamStats": [
    "codecId",
    "kind",
    "mediaType",
    "ssrc",
    "transportId"
  ],
  "RTCRtpTransceiver": [
    "currentDirection",
    "direction",
    "mid",
    "receiver",
    "sender",
    "setCodecPreferences",
    "setCodecPreferences()",
    "setCodecPreferences(codecs)",
    "stop",
    "stop sending and receiving",
    "stop the rtcrtptransceiver",
    "stop()",
    "stopped",
    "stopping"
  ],
  "RTCRtpTransceiverDirection": [
    "inactive",
    "recvonly",
    "sendonly",
    "sendrecv",
    "stopped"
  ],
  "RTCRtpTransceiverInit": [
    "direction",
    "sendEncodings",
    "streams"
  ],
  "RTCSctpTransport": [
    "maxChannels",
    "maxMessageSize",
    "onstatechange",
    "state",
    "transport"
  ],
  "RTCSctpTransportState": [
    "closed",
    "connected",
    "connecting"
  ],
  "RTCSdpType": [
    "answer",
    "offer",
    "pranswer",
    "rollback"
  ],
  "RTCSentRtpStreamStats": [
    "bytesSent",
    "packetsSent"
  ],
  "RTCSessionDescription": [
    "RTCSessionDescription()",
    "constructor()",
    "constructor(descriptionInitDict)",
    "sdp",
    "toJSON()",
    "type"
  ],
  "RTCSessionDescriptionInit": [
    "sdp",
    "type"
  ],
  "RTCSignalingState": [
    "closed",
    "have-local-offer",
    "have-local-pranswer",
    "have-remote-offer",
    "have-remote-pranswer",
    "stable"
  ],
  "RTCStats": [
    "id",
    "timestamp",
    "type"
  ],
  "RTCStatsIceCandidatePairState": [
    "failed",
    "frozen",
    "in-progress",
    "succeeded",
    "waiting"
  ],
  "RTCStatsType": [
    "candidate-pair",
    "certificate",
    "codec",
    "data-channel",
    "inbound-rtp",
    "local-candidate",
    "media-source",
    "outbound-rtp",
    "peer-connection",
    "remote-candidate",
    "remote-inbound-rtp",
    "remote-outbound-rtp",
    "stream",
    "track",
    "transport"
  ],
  "RTCTrackEvent": [
    "constructor()",
    "constructor(type, eventInitDict)",
    "receiver",
    "streams",
    "track",
    "transceiver"
  ],
  "RTCTrackEventInit": [
    "receiver",
    "streams",
    "track",
    "transceiver"
  ],
  "RTCTransportStats": [
    "bytesReceived",
    "bytesSent",
    "dtlsCipher",
    "dtlsRole",
    "dtlsState",
    "iceLocalUsernameFragment",
    "iceRole",
    "iceState",
    "localCertificateId",
    "packetsReceived",
    "packetsSent",
    "remoteCertificateId",
    "selectedCandidatePairChanges",
    "selectedCandidatePairId",
    "srtpCipher",
    "tlsVersion"
  ],
  "RTCVideoSourceStats": [
    "frames",
    "framesPerSecond",
    "height",
    "width"
  ],
  "RadioNodeList": [
    "value"
  ],
  "Range": [
    "END_TO_END",
    "END_TO_START",
    "Range()",
    "START_TO_END",
    "START_TO_START",
    "cloneContents()",
    "cloneRange()",
    "collapse()",
    "collapse(toStart)",
    "commonAncestorContainer",
    "compareBoundaryPoints(how, sourceRange)",
    "comparePoint(node, offset)",
    "constructor()",
    "deleteContents()",
    "detach()",
    "extractContents()",
    "getBoundingClientRect()",
    "getClientRects()",
    "insertNode(node)",
    "intersectsNode(node)",
    "isPointInRange(node, offset)",
    "selectNode(node)",
    "selectNodeContents(node)",
    "set the end",
    "set the start",
    "setEnd(node, offset)",
    "setEndAfter(node)",
    "setEndBefore(node)",
    "setStart(node, offset)",
    "setStartAfter(node)",
    "setStartBefore(node)",
    "stringificationbehavior",
    "surroundContents(newParent)"
  ],
  "Range/collapse()": [
    "toStart"
  ],
  "Range/collapse(toStart)": [
    "toStart"
  ],
  "Range/compareBoundaryPoints(how, sourceRange)": [
    "how",
    "sourceRange"
  ],
  "Range/comparePoint(node, offset)": [
    "node",
    "offset"
  ],
  "Range/insertNode(node)": [
    "node"
  ],
  "Range/intersectsNode(node)": [
    "node"
  ],
  "Range/isPointInRange(node, offset)": [
    "node",
    "offset"
  ],
  "Range/selectNode(node)": [
    "node"
  ],
  "Range/selectNodeContents(node)": [
    "node"
  ],
  "Range/setEnd(node, offset)": [
    "node",
    "offset"
  ],
  "Range/setEndAfter(node)": [
    "node"
  ],
  "Range/setEndBefore(node)": [
    "node"
  ],
  "Range/setStart(node, offset)": [
    "node",
    "offset"
  ],
  "Range/setStartAfter(node)": [
    "node"
  ],
  "Range/setStartBefore(node)": [
    "node"
  ],
  "Range/surroundContents(newParent)": [
    "newParent"
  ],
  "RdfDataset": [
    "add()",
    "add(graphName, graph)",
    "constructor",
    "constructor()",
    "defaultGraph",
    "iterable"
  ],
  "RdfGraph": [
    "add()",
    "add(triple)",
    "constructor",
    "constructor()",
    "iterable"
  ],
  "RdfLiteral": [
    "constructor",
    "constructor()",
    "datatype",
    "language",
    "value"
  ],
  "RdfTriple": [
    "constructor",
    "constructor()",
    "object",
    "predicate",
    "subject"
  ],
  "ReadableByteStreamController": [
    "[[CancelSteps]]",
    "[[PullSteps]]",
    "[[ReleaseSteps]]",
    "[[autoallocatechunksize]]",
    "[[byobrequest]]",
    "[[cancelalgorithm]]",
    "[[closerequested]]",
    "[[pendingpullintos]]",
    "[[pullagain]]",
    "[[pullalgorithm]]",
    "[[pulling]]",
    "[[queue]]",
    "[[queuetotalsize]]",
    "[[started]]",
    "[[strategyhwm]]",
    "[[stream]]",
    "byobRequest",
    "close()",
    "desiredSize",
    "enqueue(chunk)",
    "error()",
    "error(e)"
  ],
  "ReadableByteStreamController/enqueue(chunk)": [
    "chunk"
  ],
  "ReadableByteStreamController/error()": [
    "e"
  ],
  "ReadableByteStreamController/error(e)": [
    "e"
  ],
  "ReadableStream": [
    "ReadableStream()",
    "ReadableStream(underlyingSource)",
    "ReadableStream(underlyingSource, strategy)",
    "[[controller]]",
    "[[detached]]",
    "[[disturbed]]",
    "[[reader]]",
    "[[state]]",
    "[[storederror]]",
    "cancel",
    "cancel()",
    "cancel(reason)",
    "close",
    "closed",
    "constructor()",
    "constructor(underlyingSource)",
    "constructor(underlyingSource, strategy)",
    "create a proxy",
    "creating a proxy",
    "current byob request view",
    "desired size to fill up to the high water mark",
    "disturbed",
    "enqueue",
    "error",
    "errored",
    "get a reader",
    "getReader()",
    "getReader(options)",
    "getting a reader",
    "locked",
    "need more data",
    "needs more data",
    "options",
    "pipe",
    "pipe through",
    "pipe to",
    "pipeThrough(transform)",
    "pipeThrough(transform, options)",
    "pipeTo(destination)",
    "pipeTo(destination, options)",
    "piped through",
    "piped to",
    "piping through",
    "piping to",
    "readable",
    "set up",
    "set up with byte reading support",
    "tee",
    "tee()",
    "teeing"
  ],
  "ReadableStream async iterator": [
    "prevent cancel",
    "reader"
  ],
  "ReadableStream/ReadableStream()": [
    "strategy",
    "underlyingSource"
  ],
  "ReadableStream/ReadableStream(underlyingSource)": [
    "strategy",
    "underlyingSource"
  ],
  "ReadableStream/ReadableStream(underlyingSource, strategy)": [
    "strategy",
    "underlyingSource"
  ],
  "ReadableStream/cancel()": [
    "reason"
  ],
  "ReadableStream/cancel(reason)": [
    "reason"
  ],
  "ReadableStream/constructor()": [
    "strategy",
    "underlyingSource"
  ],
  "ReadableStream/constructor(underlyingSource)": [
    "strategy",
    "underlyingSource"
  ],
  "ReadableStream/constructor(underlyingSource, strategy)": [
    "strategy",
    "underlyingSource"
  ],
  "ReadableStream/getReader()": [
    "options"
  ],
  "ReadableStream/getReader(options)": [
    "options"
  ],
  "ReadableStream/pipe through": [
    "preventabort",
    "preventcancel",
    "preventclose",
    "signal"
  ],
  "ReadableStream/pipe to": [
    "preventabort",
    "preventcancel",
    "preventclose",
    "signal"
  ],
  "ReadableStream/pipeThrough(transform)": [
    "options",
    "transform"
  ],
  "ReadableStream/pipeThrough(transform, options)": [
    "options",
    "transform"
  ],
  "ReadableStream/pipeTo(destination)": [
    "destination",
    "options"
  ],
  "ReadableStream/pipeTo(destination, options)": [
    "destination",
    "options"
  ],
  "ReadableStream/piped through": [
    "preventabort",
    "preventcancel",
    "preventclose",
    "signal"
  ],
  "ReadableStream/piped to": [
    "preventabort",
    "preventcancel",
    "preventclose",
    "signal"
  ],
  "ReadableStream/set up": [
    "cancelalgorithm",
    "highwatermark",
    "pullalgorithm",
    "sizealgorithm"
  ],
  "ReadableStream/set up with byte reading support": [
    "cancelalgorithm",
    "highwatermark",
    "pullalgorithm"
  ],
  "ReadableStreamBYOBReader": [
    "ReadableStreamBYOBReader(stream)",
    "[[readintorequests]]",
    "constructor(stream)",
    "read(view)",
    "releaseLock()"
  ],
  "ReadableStreamBYOBReader/ReadableStreamBYOBReader(stream)": [
    "stream"
  ],
  "ReadableStreamBYOBReader/constructor(stream)": [
    "stream"
  ],
  "ReadableStreamBYOBReader/read(view)": [
    "view"
  ],
  "ReadableStreamBYOBRequest": [
    "[[controller]]",
    "[[view]]",
    "respond(bytesWritten)",
    "respondWithNewView(view)",
    "view"
  ],
  "ReadableStreamBYOBRequest/respond(bytesWritten)": [
    "bytesWritten"
  ],
  "ReadableStreamBYOBRequest/respondWithNewView(view)": [
    "view"
  ],
  "ReadableStreamController": [
    "[[CancelSteps]]",
    "[[PullSteps]]",
    "[[ReleaseSteps]]"
  ],
  "ReadableStreamDefaultController": [
    "[[CancelSteps]]",
    "[[PullSteps]]",
    "[[ReleaseSteps]]",
    "[[cancelalgorithm]]",
    "[[closerequested]]",
    "[[pullagain]]",
    "[[pullalgorithm]]",
    "[[pulling]]",
    "[[queue]]",
    "[[queuetotalsize]]",
    "[[started]]",
    "[[strategyhwm]]",
    "[[strategysizealgorithm]]",
    "[[stream]]",
    "close()",
    "desiredSize",
    "enqueue()",
    "enqueue(chunk)",
    "error()",
    "error(e)"
  ],
  "ReadableStreamDefaultController/enqueue()": [
    "chunk"
  ],
  "ReadableStreamDefaultController/enqueue(chunk)": [
    "chunk"
  ],
  "ReadableStreamDefaultController/error()": [
    "e"
  ],
  "ReadableStreamDefaultController/error(e)": [
    "e"
  ],
  "ReadableStreamDefaultReader": [
    "ReadableStreamDefaultReader(stream)",
    "[[readrequests]]",
    "cancel",
    "constructor(stream)",
    "read a chunk",
    "read all bytes",
    "read()",
    "reading a chunk",
    "reading all bytes",
    "release",
    "releaseLock()"
  ],
  "ReadableStreamDefaultReader/ReadableStreamDefaultReader(stream)": [
    "stream"
  ],
  "ReadableStreamDefaultReader/constructor(stream)": [
    "stream"
  ],
  "ReadableStreamGenericReader": [
    "[[closedpromise]]",
    "[[stream]]",
    "cancel()",
    "cancel(reason)",
    "closed"
  ],
  "ReadableStreamGenericReader/cancel()": [
    "reason"
  ],
  "ReadableStreamGenericReader/cancel(reason)": [
    "reason"
  ],
  "ReadableStreamGetReaderOptions": [
    "mode"
  ],
  "ReadableStreamIteratorOptions": [
    "preventCancel"
  ],
  "ReadableStreamReadResult": [
    "done",
    "value"
  ],
  "ReadableStreamReaderMode": [
    "\"byob\""
  ],
  "ReadableStreamType": [
    "\"bytes\"",
    "bytes"
  ],
  "ReadableWritablePair": [
    "readable",
    "writable"
  ],
  "Realm": [
    "change",
    "global object",
    "settings object"
  ],
  "ReferrerPolicy": [
    "",
    "\"\"",
    "\"no-referrer\"",
    "\"no-referrer-when-downgrade\"",
    "\"origin\"",
    "\"origin-when-cross-origin\"",
    "\"same-origin\"",
    "\"strict-origin\"",
    "\"strict-origin-when-cross-origin\"",
    "\"unsafe-url\"",
    "no-referrer",
    "no-referrer-when-downgrade",
    "origin",
    "origin-when-cross-origin",
    "same-origin",
    "strict-origin",
    "strict-origin-when-cross-origin",
    "unsafe-url"
  ],
  "Region": [
    "getRegionFlowRanges()",
    "regionOverset"
  ],
  "RegistrationOptions": [
    "scope",
    "type",
    "updateViaCache"
  ],
  "RegistrationResponseJSON": [
    "authenticatorAttachment",
    "clientExtensionResults",
    "id",
    "rawId",
    "response",
    "type"
  ],
  "RemoteDocument": [
    "constructor",
    "constructor()",
    "contentType",
    "contextUrl",
    "document",
    "documentUrl",
    "profile"
  ],
  "Report": [
    "body",
    "toJSON",
    "toJSON()",
    "type",
    "url"
  ],
  "ReportBody": [
    "toJSON",
    "toJSON()"
  ],
  "ReportingObserver": [
    "ReportingObserver(callback)",
    "ReportingObserver(callback, options)",
    "callback",
    "constructor(callback)",
    "constructor(callback, options)",
    "disconnect()",
    "observe()",
    "options",
    "report queue",
    "takeRecords()"
  ],
  "ReportingObserver/ReportingObserver(callback)": [
    "callback",
    "options"
  ],
  "ReportingObserver/ReportingObserver(callback, options)": [
    "callback",
    "options"
  ],
  "ReportingObserver/constructor(callback)": [
    "callback",
    "options"
  ],
  "ReportingObserver/constructor(callback, options)": [
    "callback",
    "options"
  ],
  "ReportingObserverCallback": [
    "observer",
    "reports"
  ],
  "ReportingObserverOptions": [
    "buffered",
    "types"
  ],
  "Request": [
    "Request(input)",
    "Request(input, init)",
    "cache",
    "clone()",
    "constructor(input)",
    "constructor(input, init)",
    "create",
    "creating",
    "credentials",
    "destination",
    "headers",
    "integrity",
    "isHistoryNavigation",
    "isReloadNavigation",
    "keepalive",
    "method",
    "mode",
    "redirect",
    "referrer",
    "referrerPolicy",
    "request",
    "signal",
    "url"
  ],
  "Request/Request(input)": [
    "init",
    "input"
  ],
  "Request/Request(input, init)": [
    "init",
    "input"
  ],
  "Request/constructor(input)": [
    "init",
    "input"
  ],
  "Request/constructor(input, init)": [
    "init",
    "input"
  ],
  "RequestCache": [
    "\"default\"",
    "\"force-cache\"",
    "\"no-cache\"",
    "\"no-store\"",
    "\"only-if-cached\"",
    "\"reload\""
  ],
  "RequestCredentials": [
    "\"include\"",
    "\"omit\"",
    "\"same-origin\""
  ],
  "RequestDestination": [
    "\"\"",
    "\"audio\"",
    "\"audioworklet\"",
    "\"document\"",
    "\"embed\"",
    "\"font\"",
    "\"frame\"",
    "\"iframe\"",
    "\"image\"",
    "\"manifest\"",
    "\"object\"",
    "\"paintworklet\"",
    "\"report\"",
    "\"script\"",
    "\"sharedworker\"",
    "\"style\"",
    "\"track\"",
    "\"video\"",
    "\"worker\"",
    "\"xslt\""
  ],
  "RequestDeviceOptions": [
    "acceptAllDevices",
    "filters",
    "optionalManufacturerData",
    "optionalServices"
  ],
  "RequestDuplex": [
    "\"half\""
  ],
  "RequestInit": [
    "body",
    "cache",
    "credentials",
    "duplex",
    "headers",
    "integrity",
    "keepalive",
    "method",
    "mode",
    "redirect",
    "referrer",
    "referrerPolicy",
    "signal",
    "window"
  ],
  "RequestMode": [
    "\"cors\"",
    "\"navigate\"",
    "\"no-cors\"",
    "\"same-origin\""
  ],
  "RequestRedirect": [
    "\"error\"",
    "\"follow\"",
    "\"manual\""
  ],
  "ResidentKeyRequirement": [
    "\"discouraged\"",
    "\"preferred\"",
    "\"required\"",
    "discouraged",
    "preferred",
    "required"
  ],
  "ResizeObservation": [
    "Constructor",
    "ResizeObservation(target)",
    "ResizeObservation(target, options)",
    "constructor",
    "constructor(target)",
    "isActive()",
    "lastReportedSizes",
    "observedBox",
    "target"
  ],
  "ResizeObservation/ResizeObservation(target)": [
    "target"
  ],
  "ResizeObservation/constructor(target)": [
    "target"
  ],
  "ResizeObserver": [
    "ResizeObserver(callback)",
    "[[activeTargets]]",
    "[[callback]]",
    "[[observationTargets]]",
    "[[skippedTargets]]",
    "activeTargets",
    "callback",
    "constructor(callback)",
    "disconnect()",
    "observationTargets",
    "observe(target)",
    "observe(target, options)",
    "skippedTargets",
    "unobserve(target)"
  ],
  "ResizeObserver/ResizeObserver(callback)": [
    "callback"
  ],
  "ResizeObserver/constructor(callback)": [
    "callback"
  ],
  "ResizeObserver/observe(target)": [
    "options",
    "target"
  ],
  "ResizeObserver/observe(target, options)": [
    "options",
    "target"
  ],
  "ResizeObserver/unobserve(target)": [
    "target"
  ],
  "ResizeObserverBoxOptions": [
    "\"border-box\"",
    "\"content-box\"",
    "\"device-pixel-content-box\""
  ],
  "ResizeObserverCallback": [
    "entries",
    "observer"
  ],
  "ResizeObserverEntry": [
    "borderBoxSize",
    "contentBoxSize",
    "contentRect",
    "devicePixelContentBoxSize",
    "target"
  ],
  "ResizeObserverOptions": [
    "box"
  ],
  "ResizeObserverSize": [
    "blockSize",
    "inlineSize"
  ],
  "ResizeQuality": [
    "high",
    "low",
    "medium",
    "pixelated"
  ],
  "Response": [
    "Response()",
    "Response(body)",
    "Response(body, init)",
    "clone()",
    "constructor()",
    "constructor(body)",
    "constructor(body, init)",
    "create",
    "creating",
    "error()",
    "headers",
    "json(data)",
    "json(data, init)",
    "ok",
    "redirect(url)",
    "redirect(url, status)",
    "redirected",
    "response",
    "status",
    "statusText",
    "type",
    "url"
  ],
  "Response/Response()": [
    "body",
    "init"
  ],
  "Response/Response(body)": [
    "body",
    "init"
  ],
  "Response/Response(body, init)": [
    "body",
    "init"
  ],
  "Response/constructor()": [
    "body",
    "init"
  ],
  "Response/constructor(body)": [
    "body",
    "init"
  ],
  "Response/constructor(body, init)": [
    "body",
    "init"
  ],
  "Response/json(data)": [
    "data",
    "init"
  ],
  "Response/json(data, init)": [
    "data",
    "init"
  ],
  "Response/redirect(url)": [
    "status",
    "url"
  ],
  "Response/redirect(url, status)": [
    "status",
    "url"
  ],
  "ResponseInit": [
    "headers",
    "status",
    "statusText"
  ],
  "ResponseType": [
    "\"basic\"",
    "\"cors\"",
    "\"default\"",
    "\"error\"",
    "\"opaque\"",
    "\"opaqueredirect\""
  ],
  "RsaHashedImportParams": [
    "hash"
  ],
  "RsaHashedKeyAlgorithm": [
    "hash"
  ],
  "RsaHashedKeyGenParams": [
    "hash"
  ],
  "RsaKeyAlgorithm": [
    "modulusLength",
    "publicExponent"
  ],
  "RsaKeyGenParams": [
    "modulusLength",
    "publicExponent"
  ],
  "RsaOaepParams": [
    "label"
  ],
  "RsaOtherPrimesInfo": [
    "d",
    "r",
    "t"
  ],
  "RsaPssParams": [
    "saltLength"
  ],
  "SVGClipPathElement": [
    "clipPathUnits",
    "transform"
  ],
  "SVGComponentTransferFunctionElement": [
    "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
    "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
    "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
    "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
    "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
    "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
    "amplitude",
    "exponent",
    "intercept",
    "offset",
    "slope",
    "tableValues",
    "type"
  ],
  "SVGFEBlendElement": [
    "SVG_FEBLEND_MODE_COLOR",
    "SVG_FEBLEND_MODE_COLOR_BURN",
    "SVG_FEBLEND_MODE_COLOR_DODGE",
    "SVG_FEBLEND_MODE_DARKEN",
    "SVG_FEBLEND_MODE_DIFFERENCE",
    "SVG_FEBLEND_MODE_EXCLUSION",
    "SVG_FEBLEND_MODE_HARD_LIGHT",
    "SVG_FEBLEND_MODE_HUE",
    "SVG_FEBLEND_MODE_LIGHTEN",
    "SVG_FEBLEND_MODE_LUMINOSITY",
    "SVG_FEBLEND_MODE_MULTIPLY",
    "SVG_FEBLEND_MODE_NORMAL",
    "SVG_FEBLEND_MODE_OVERLAY",
    "SVG_FEBLEND_MODE_SATURATION",
    "SVG_FEBLEND_MODE_SCREEN",
    "SVG_FEBLEND_MODE_SOFT_LIGHT",
    "SVG_FEBLEND_MODE_UNKNOWN",
    "in1",
    "in2",
    "mode"
  ],
  "SVGFEColorMatrixElement": [
    "SVG_FECOLORMATRIX_TYPE_HUEROTATE",
    "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
    "SVG_FECOLORMATRIX_TYPE_MATRIX",
    "SVG_FECOLORMATRIX_TYPE_SATURATE",
    "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
    "in1",
    "type",
    "values"
  ],
  "SVGFEComponentTransferElement": [
    "in1"
  ],
  "SVGFECompositeElement": [
    "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
    "SVG_FECOMPOSITE_OPERATOR_ATOP",
    "SVG_FECOMPOSITE_OPERATOR_IN",
    "SVG_FECOMPOSITE_OPERATOR_OUT",
    "SVG_FECOMPOSITE_OPERATOR_OVER",
    "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
    "SVG_FECOMPOSITE_OPERATOR_XOR",
    "in1",
    "in2",
    "k1",
    "k2",
    "k3",
    "k4",
    "operator"
  ],
  "SVGFEConvolveMatrixElement": [
    "SVG_EDGEMODE_DUPLICATE",
    "SVG_EDGEMODE_NONE",
    "SVG_EDGEMODE_UNKNOWN",
    "SVG_EDGEMODE_WRAP",
    "bias",
    "divisor",
    "edgeMode",
    "in1",
    "kernelMatrix",
    "kernelUnitLengthX",
    "kernelUnitLengthY",
    "orderX",
    "orderY",
    "preserveAlpha",
    "targetX",
    "targetY"
  ],
  "SVGFEDiffuseLightingElement": [
    "diffuseConstant",
    "in1",
    "kernelUnitLengthX",
    "kernelUnitLengthY",
    "surfaceScale"
  ],
  "SVGFEDisplacementMapElement": [
    "SVG_CHANNEL_A",
    "SVG_CHANNEL_B",
    "SVG_CHANNEL_G",
    "SVG_CHANNEL_R",
    "SVG_CHANNEL_UNKNOWN",
    "in1",
    "in2",
    "scale",
    "xChannelSelector",
    "yChannelSelector"
  ],
  "SVGFEDistantLightElement": [
    "azimuth",
    "elevation"
  ],
  "SVGFEDropShadowElement": [
    "dx",
    "dy",
    "in1",
    "setStdDeviation(stdDeviationX, stdDeviationY)",
    "stdDeviationX",
    "stdDeviationY"
  ],
  "SVGFEDropShadowElement/setStdDeviation(stdDeviationX, stdDeviationY)": [
    "stdDeviationX",
    "stdDeviationY"
  ],
  "SVGFEGaussianBlurElement": [
    "SVG_EDGEMODE_DUPLICATE",
    "SVG_EDGEMODE_NONE",
    "SVG_EDGEMODE_UNKNOWN",
    "SVG_EDGEMODE_WRAP",
    "edgeMode",
    "in1",
    "setStdDeviation(stdDeviationX, stdDeviationY)",
    "stdDeviationX",
    "stdDeviationY"
  ],
  "SVGFEGaussianBlurElement/setStdDeviation(stdDeviationX, stdDeviationY)": [
    "stdDeviationX",
    "stdDeviationY"
  ],
  "SVGFEImageElement": [
    "crossOrigin",
    "preserveAspectRatio"
  ],
  "SVGFEMergeNodeElement": [
    "in1"
  ],
  "SVGFEMorphologyElement": [
    "SVG_MORPHOLOGY_OPERATOR_DILATE",
    "SVG_MORPHOLOGY_OPERATOR_ERODE",
    "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
    "in1",
    "operator",
    "radiusX",
    "radiusY"
  ],
  "SVGFEOffsetElement": [
    "dx",
    "dy",
    "in1"
  ],
  "SVGFEPointLightElement": [
    "x",
    "y",
    "z"
  ],
  "SVGFESpecularLightingElement": [
    "in1",
    "kernelUnitLengthX",
    "kernelUnitLengthY",
    "specularConstant",
    "specularExponent",
    "surfaceScale"
  ],
  "SVGFESpotLightElement": [
    "limitingConeAngle",
    "pointsAtX",
    "pointsAtY",
    "pointsAtZ",
    "specularExponent",
    "x",
    "y",
    "z"
  ],
  "SVGFETileElement": [
    "in1"
  ],
  "SVGFETurbulenceElement": [
    "SVG_STITCHTYPE_NOSTITCH",
    "SVG_STITCHTYPE_STITCH",
    "SVG_STITCHTYPE_UNKNOWN",
    "SVG_TURBULENCE_TYPE_FRACTALNOISE",
    "SVG_TURBULENCE_TYPE_TURBULENCE",
    "SVG_TURBULENCE_TYPE_UNKNOWN",
    "baseFrequencyX",
    "baseFrequencyY",
    "numOctaves",
    "seed",
    "stitchTiles",
    "type"
  ],
  "SVGFilterElement": [
    "filterUnits",
    "height",
    "primitiveUnits",
    "width",
    "x",
    "y"
  ],
  "SVGFilterPrimitiveStandardAttributes": [
    "height",
    "result",
    "width",
    "x",
    "y"
  ],
  "SVGMaskElement": [
    "height",
    "maskContentUnits",
    "maskUnits",
    "width",
    "x",
    "y"
  ],
  "Screen": [
    "availHeight",
    "availWidth",
    "colorDepth",
    "height",
    "orientation",
    "pixelDepth",
    "width"
  ],
  "ScreenOrientation": [
    "angle",
    "lock()",
    "lock(orientation)",
    "onchange",
    "type",
    "unlock()"
  ],
  "ScriptProcessorNode": [
    "bufferSize",
    "onaudioprocess"
  ],
  "ScrollBehavior": [
    "\"auto\"",
    "\"instant\"",
    "\"smooth\""
  ],
  "ScrollDirection": [
    "\"block\"",
    "\"horizontal\"",
    "\"inline\"",
    "\"vertical\"",
    "block",
    "horizontal",
    "inline",
    "vertical"
  ],
  "ScrollIntoViewOptions": [
    "block",
    "inline"
  ],
  "ScrollLogicalPosition": [
    "\"center\"",
    "\"end\"",
    "\"nearest\"",
    "\"start\""
  ],
  "ScrollOptions": [
    "behavior"
  ],
  "ScrollRestoration": [
    "auto",
    "manual"
  ],
  "ScrollTimeline": [
    "ScrollTimeline()",
    "ScrollTimeline(options)",
    "constructor()",
    "constructor(options)",
    "orientation",
    "scrollOffsets",
    "set the offset value",
    "source"
  ],
  "ScrollTimeline/ScrollTimeline()": [
    "options"
  ],
  "ScrollTimeline/ScrollTimeline(options)": [
    "options"
  ],
  "ScrollTimeline/constructor()": [
    "options"
  ],
  "ScrollTimeline/constructor(options)": [
    "options"
  ],
  "ScrollTimelineAutoKeyword": [
    "\"auto\""
  ],
  "ScrollTimelineOptions": [
    "orientation",
    "scrollOffsets",
    "source"
  ],
  "ScrollToOptions": [
    "left",
    "top"
  ],
  "SecurityPolicyViolationEvent": [
    "SecurityPolicyViolationEvent(type)",
    "SecurityPolicyViolationEvent(type, eventInitDict)",
    "blockedURI",
    "columnNumber",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "disposition",
    "documentURI",
    "effectiveDirective",
    "lineNumber",
    "originalPolicy",
    "referrer",
    "sample",
    "sourceFile",
    "statusCode",
    "violatedDirective"
  ],
  "SecurityPolicyViolationEvent/SecurityPolicyViolationEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "SecurityPolicyViolationEvent/SecurityPolicyViolationEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SecurityPolicyViolationEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "SecurityPolicyViolationEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SecurityPolicyViolationEventDisposition": [
    "\"enforce\"",
    "\"report\""
  ],
  "SecurityPolicyViolationEventInit": [
    "blockedURI",
    "columnNumber",
    "disposition",
    "documentURI",
    "effectiveDirective",
    "lineNumber",
    "originalPolicy",
    "referrer",
    "sample",
    "sourceFile",
    "statusCode",
    "violatedDirective"
  ],
  "SelectionMode": [
    "end",
    "preserve",
    "select",
    "start"
  ],
  "Sensor": [
    "[[frequency]]",
    "[[lastEventFiredAt]]",
    "[[pendingReadingNotification]]",
    "[[state]]",
    "activated",
    "hasReading",
    "onactivate",
    "onerror",
    "onreading",
    "start",
    "start()",
    "stop",
    "stop()",
    "timestamp"
  ],
  "SensorErrorEvent": [
    "SensorErrorEvent(type, errorEventInitDict)",
    "constructor",
    "constructor(type, errorEventInitDict)",
    "error"
  ],
  "SensorErrorEvent/SensorErrorEvent(type, errorEventInitDict)": [
    "errorEventInitDict",
    "type"
  ],
  "SensorErrorEvent/constructor(type, errorEventInitDict)": [
    "errorEventInitDict",
    "type"
  ],
  "SensorErrorEventInit": [
    "error"
  ],
  "SensorOptions": [
    "frequency"
  ],
  "SequenceEffect": [
    "SequenceEffect clone ()",
    "SequenceEffect()",
    "SequenceEffect(children)",
    "SequenceEffect(children, timing)",
    "clone()",
    "constructor",
    "constructor (sequence<AnimationEffect>? children, optional (unrestricted double or EffectTiming) timing)",
    "constructor(children)",
    "constructor(children, timing)"
  ],
  "SequenceEffect/SequenceEffect(children)": [
    "children",
    "timing"
  ],
  "SequenceEffect/SequenceEffect(children, timing)": [
    "children",
    "timing"
  ],
  "SequenceEffect/constructor(children)": [
    "children",
    "timing"
  ],
  "SequenceEffect/constructor(children, timing)": [
    "children",
    "timing"
  ],
  "Serial": [
    "connect",
    "disconnect",
    "getPorts()",
    "onconnect",
    "ondisconnect",
    "requestPort()",
    "requestPort(options)"
  ],
  "SerialInputSignals": [
    "clearToSend",
    "dataCarrierDetect",
    "dataSetReady",
    "ringIndicator"
  ],
  "SerialOptions": [
    "baudRate",
    "bufferSize",
    "dataBits",
    "flowControl",
    "parity",
    "stopBits"
  ],
  "SerialOutputSignals": [
    "break",
    "dataTerminalReady",
    "requestToSend"
  ],
  "SerialPort": [
    "[[bufferSize]]",
    "[[pendingClosePromise]]",
    "[[readFatal]]",
    "[[readable]]",
    "[[state]]",
    "[[writable]]",
    "[[writeFatal]]",
    "close()",
    "forget()",
    "getInfo()",
    "getSignals()",
    "handle closing the readable stream",
    "handle closing the writable stream",
    "onconnect",
    "ondisconnect",
    "open()",
    "open(options)",
    "readable",
    "serial port task source",
    "setSignals()",
    "setSignals(signals)",
    "writable"
  ],
  "SerialPortFilter": [
    "match any filter",
    "match the filter",
    "matches any filter",
    "matches the filter",
    "usbProductId",
    "usbVendorId"
  ],
  "SerialPortInfo": [
    "usbProductId",
    "usbVendorId"
  ],
  "SerialPortRequestOptions": [
    "filters"
  ],
  "ServiceEventHandlers": [
    "onserviceadded",
    "onservicechanged",
    "onserviceremoved"
  ],
  "ServiceWorker": [
    "onstatechange",
    "postMessage(message)",
    "postMessage(message, options)",
    "postMessage(message, transfer)",
    "scriptURL",
    "state",
    "statechange"
  ],
  "ServiceWorker/postMessage(message)": [
    "message",
    "options",
    "transfer"
  ],
  "ServiceWorker/postMessage(message, options)": [
    "message",
    "options"
  ],
  "ServiceWorker/postMessage(message, transfer)": [
    "message",
    "transfer"
  ],
  "ServiceWorkerContainer": [
    "client message queue",
    "controller",
    "controllerchange",
    "getRegistration()",
    "getRegistration(clientURL)",
    "getRegistrations()",
    "message",
    "messageerror",
    "oncontrollerchange",
    "onmessage",
    "onmessageerror",
    "ready",
    "ready promise",
    "register(scriptURL)",
    "register(scriptURL, options)",
    "service worker client",
    "startMessages()"
  ],
  "ServiceWorkerContainer/getRegistration()": [
    "clientURL"
  ],
  "ServiceWorkerContainer/getRegistration(clientURL)": [
    "clientURL"
  ],
  "ServiceWorkerContainer/register(scriptURL)": [
    "options",
    "scriptURL"
  ],
  "ServiceWorkerContainer/register(scriptURL, options)": [
    "options",
    "scriptURL"
  ],
  "ServiceWorkerGlobalScope": [
    "activate",
    "clients",
    "fetch",
    "force bypass cache for import scripts flag",
    "importScripts(urls)",
    "install",
    "message",
    "messageerror",
    "onactivate",
    "onfetch",
    "oninstall",
    "onmessage",
    "onmessageerror",
    "onnotificationclick",
    "onnotificationclose",
    "onsync",
    "registration",
    "service worker",
    "serviceWorker",
    "skipWaiting()"
  ],
  "ServiceWorkerRegistration": [
    "active",
    "getNotifications()",
    "getNotifications(filter)",
    "installing",
    "navigationPreload",
    "onupdatefound",
    "scope",
    "service worker registration",
    "showNotification(title)",
    "showNotification(title, options)",
    "sync",
    "unregister()",
    "update()",
    "updateViaCache",
    "updatefound",
    "waiting"
  ],
  "ServiceWorkerRegistration/getNotifications()": [
    "filter"
  ],
  "ServiceWorkerRegistration/getNotifications(filter)": [
    "filter"
  ],
  "ServiceWorkerRegistration/showNotification(title)": [
    "options",
    "title"
  ],
  "ServiceWorkerRegistration/showNotification(title, options)": [
    "options",
    "title"
  ],
  "ServiceWorkerState": [
    "\"activated\"",
    "\"activating\"",
    "\"installed\"",
    "\"installing\"",
    "\"parsed\"",
    "\"redundant\""
  ],
  "ServiceWorkerUpdateViaCache": [
    "\"all\"",
    "\"imports\"",
    "\"none\""
  ],
  "SessionManager async iterator": [
    "current state"
  ],
  "ShadowRoot": [
    "available to element internals",
    "delegates focus",
    "delegatesFocus",
    "host",
    "mode",
    "onslotchange",
    "slot assignment",
    "slotAssignment"
  ],
  "ShadowRootInit": [
    "delegatesFocus",
    "mode",
    "slotAssignment"
  ],
  "ShadowRootMode": [
    "\"closed\"",
    "\"open\""
  ],
  "ShareData": [
    "files",
    "text",
    "title",
    "url"
  ],
  "SharedWorker": [
    "SharedWorker(scriptURL, options)",
    "error",
    "port"
  ],
  "SharedWorkerGlobalScope": [
    "close()",
    "connect",
    "constructor origin",
    "constructor url",
    "credentials",
    "name",
    "onconnect"
  ],
  "SlotAssignmentMode": [
    "\"manual\"",
    "\"named\""
  ],
  "Slottable": [
    "assignedSlot"
  ],
  "SpatialNavigationDirection": [
    "\"down\"",
    "\"left\"",
    "\"right\"",
    "\"up\""
  ],
  "SpatialNavigationSearchOptions": [
    "candidates",
    "container"
  ],
  "StatefulAnimator": [
    "Constructor",
    "StatefulAnimator()",
    "StatefulAnimator(options)",
    "StatefulAnimator(options, state)",
    "state",
    "state()"
  ],
  "StatefulAnimator/StatefulAnimator(options, state)": [
    "options",
    "state"
  ],
  "StatelessAnimator": [
    "Constructor",
    "StatelessAnimator()",
    "StatelessAnimator(options)"
  ],
  "StatelessAnimator/StatelessAnimator(options)": [
    "options"
  ],
  "StaticRange": [
    "StaticRange(init)",
    "constructor(init)",
    "valid"
  ],
  "StaticRange/StaticRange(init)": [
    "init"
  ],
  "StaticRange/constructor(init)": [
    "init"
  ],
  "StaticRangeInit": [
    "endContainer",
    "endOffset",
    "startContainer",
    "startOffset"
  ],
  "StereoPannerNode": [
    "StereoPannerNode(context)",
    "StereoPannerNode(context, options)",
    "constructor(context)",
    "constructor(context, options)",
    "pan"
  ],
  "StereoPannerNode/StereoPannerNode(context)": [
    "context",
    "options"
  ],
  "StereoPannerNode/StereoPannerNode(context, options)": [
    "context",
    "options"
  ],
  "StereoPannerNode/constructor()": [
    "context",
    "options"
  ],
  "StereoPannerNode/constructor(context)": [
    "context",
    "options"
  ],
  "StereoPannerNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "StereoPannerOptions": [
    "pan"
  ],
  "Storage": [
    "clear()",
    "getItem(key)",
    "key(index)",
    "length",
    "removeItem(key)",
    "setItem(key, value)"
  ],
  "StorageEstimate": [
    "quota",
    "usage"
  ],
  "StorageEvent": [
    "initStorageEvent(type)",
    "initStorageEvent(type, bubbles)",
    "initStorageEvent(type, bubbles, cancelable)",
    "initStorageEvent(type, bubbles, cancelable, key)",
    "initStorageEvent(type, bubbles, cancelable, key, oldValue)",
    "initStorageEvent(type, bubbles, cancelable, key, oldValue, newValue)",
    "initStorageEvent(type, bubbles, cancelable, key, oldValue, newValue, url)",
    "key",
    "newValue",
    "oldValue",
    "storageArea",
    "url"
  ],
  "StorageManager": [
    "estimate()",
    "getDirectory()",
    "persist()",
    "persisted()"
  ],
  "StreamPipeOptions": [
    "preventAbort",
    "preventCancel",
    "preventClose",
    "signal"
  ],
  "StructuredSerializeOptions": [
    "transfer"
  ],
  "StylePropertyMap": [
    "[[declarations]]",
    "append(property)",
    "append(property, ...values)",
    "clear()",
    "delete(property)",
    "get(property)",
    "getAll(property)",
    "has(property)",
    "set(property)",
    "set(property, ...values)",
    "size"
  ],
  "StylePropertyMap/append(property)": [
    "property",
    "values"
  ],
  "StylePropertyMap/append(property, ...values)": [
    "property",
    "values"
  ],
  "StylePropertyMap/delete(property)": [
    "property"
  ],
  "StylePropertyMap/set(property)": [
    "property",
    "values"
  ],
  "StylePropertyMap/set(property, ...values)": [
    "property",
    "values"
  ],
  "StylePropertyMapReadOnly": [
    "[[declarations]]",
    "get(property)",
    "getAll(property)",
    "has(property)",
    "size"
  ],
  "StylePropertyMapReadOnly/get(property)": [
    "property"
  ],
  "StylePropertyMapReadOnly/getAll(property)": [
    "property"
  ],
  "StylePropertyMapReadOnly/has(property)": [
    "property"
  ],
  "StylePropertyMapReadonly": [
    "[[declarations]]",
    "size"
  ],
  "StyleSheet": [
    "disabled",
    "href",
    "media",
    "ownerNode",
    "parentStyleSheet",
    "title",
    "type"
  ],
  "StyleSheetList": [
    "item(index)",
    "length"
  ],
  "StyleSheetList/item(index)": [
    "index"
  ],
  "SubmitEvent": [
    "submitter"
  ],
  "SubtleCrypto": [
    "decrypt",
    "decrypt()",
    "decrypt(algorithm, key, data)",
    "deriveBits",
    "deriveBits()",
    "deriveBits(algorithm, baseKey, length)",
    "deriveKey",
    "deriveKey()",
    "deriveKey(algorithm, baseKey, derivedKeyType, extractable, keyUsages)",
    "digest",
    "digest()",
    "digest(algorithm, data)",
    "encrypt",
    "encrypt()",
    "encrypt(algorithm, key, data)",
    "exportKey",
    "exportKey()",
    "exportKey(format, key)",
    "generateKey",
    "generateKey()",
    "generateKey(algorithm, extractable, keyUsages)",
    "importKey",
    "importKey()",
    "importKey(format, keyData, algorithm, extractable, keyUsages)",
    "sign",
    "sign()",
    "sign(algorithm, key, data)",
    "unwrapKey",
    "unwrapKey()",
    "unwrapKey(format, wrappedKey, unwrappingKey, unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages)",
    "verify",
    "verify()",
    "verify(algorithm, key, signature, data)",
    "wrapKey",
    "wrapKey()",
    "wrapKey(format, key, wrappingKey, wrapAlgorithm)"
  ],
  "SyncEvent": [
    "SyncEvent(type, init)",
    "constructor",
    "constructor(type, init)",
    "lastChance",
    "tag"
  ],
  "SyncEvent/SyncEvent(type, init)": [
    "init",
    "type"
  ],
  "SyncEvent/constructor(type, init)": [
    "init",
    "type"
  ],
  "SyncEventInit": [
    "lastChance",
    "tag"
  ],
  "SyncManager": [
    "getTags()",
    "register(tag)",
    "sync"
  ],
  "SyncManager/register(tag)": [
    "tag"
  ],
  "Table": [
    "Table(descriptor)",
    "Table(descriptor, value)",
    "constructor(descriptor)",
    "constructor(descriptor, value)",
    "get(index)",
    "grow(delta)",
    "grow(delta, value)",
    "length",
    "set(index)",
    "set(index, value)"
  ],
  "Table/Table(descriptor)": [
    "descriptor",
    "value"
  ],
  "Table/Table(descriptor, value)": [
    "descriptor",
    "value"
  ],
  "Table/constructor(descriptor)": [
    "descriptor",
    "value"
  ],
  "Table/constructor(descriptor, value)": [
    "descriptor",
    "value"
  ],
  "Table/get(index)": [
    "index"
  ],
  "Table/grow(delta)": [
    "delta",
    "value"
  ],
  "Table/grow(delta, value)": [
    "delta",
    "value"
  ],
  "Table/set(index)": [
    "index",
    "value"
  ],
  "Table/set(index, value)": [
    "index",
    "value"
  ],
  "TableDescriptor": [
    "element",
    "initial",
    "maximum"
  ],
  "TableKind": [
    "\"anyfunc\"",
    "\"externref\""
  ],
  "TestUtils": [
    "gc",
    "gc()"
  ],
  "Text": [
    "Text()",
    "Text(data)",
    "constructor()",
    "constructor(data)",
    "isElementContentWhitespace",
    "replaceWholeText()",
    "splitText(offset)",
    "substring data",
    "wholeText"
  ],
  "Text/Text()": [
    "data"
  ],
  "Text/Text(data)": [
    "data"
  ],
  "Text/constructor()": [
    "data"
  ],
  "Text/constructor(data)": [
    "data"
  ],
  "Text/splitText(offset)": [
    "offset"
  ],
  "TextDecodeOptions": [
    "stream"
  ],
  "TextDecoder": [
    "TextDecoder()",
    "TextDecoder(label)",
    "TextDecoder(label, options)",
    "constructor()",
    "constructor(label)",
    "constructor(label, options)",
    "decode()",
    "decode(input)",
    "decode(input, options)",
    "do not flush"
  ],
  "TextDecoder/TextDecoder()": [
    "label",
    "options"
  ],
  "TextDecoder/TextDecoder(label)": [
    "label",
    "options"
  ],
  "TextDecoder/TextDecoder(label, options)": [
    "label",
    "options"
  ],
  "TextDecoder/constructor()": [
    "label",
    "options"
  ],
  "TextDecoder/constructor(label)": [
    "label",
    "options"
  ],
  "TextDecoder/constructor(label, options)": [
    "label",
    "options"
  ],
  "TextDecoder/decode()": [
    "input",
    "options"
  ],
  "TextDecoder/decode(input)": [
    "input",
    "options"
  ],
  "TextDecoder/decode(input, options)": [
    "input",
    "options"
  ],
  "TextDecoderCommon": [
    "bom seen",
    "decoder",
    "encoding",
    "error mode",
    "fatal",
    "i/o queue",
    "ignore bom",
    "ignoreBOM"
  ],
  "TextDecoderOptions": [
    "fatal",
    "ignoreBOM"
  ],
  "TextDecoderStream": [
    "TextDecoderStream()",
    "TextDecoderStream(label)",
    "TextDecoderStream(label, options)",
    "constructor()",
    "constructor(label)",
    "constructor(label, options)"
  ],
  "TextDecoderStream/TextDecoderStream()": [
    "label",
    "options"
  ],
  "TextDecoderStream/TextDecoderStream(label)": [
    "label",
    "options"
  ],
  "TextDecoderStream/TextDecoderStream(label, options)": [
    "label",
    "options"
  ],
  "TextDecoderStream/constructor()": [
    "label",
    "options"
  ],
  "TextDecoderStream/constructor(label)": [
    "label",
    "options"
  ],
  "TextDecoderStream/constructor(label, options)": [
    "label",
    "options"
  ],
  "TextEncoder": [
    "TextEncoder()",
    "constructor()",
    "encode()",
    "encode(input)",
    "encodeInto(source, destination)"
  ],
  "TextEncoder/encode()": [
    "input"
  ],
  "TextEncoder/encode(input)": [
    "input"
  ],
  "TextEncoder/encodeInto(source, destination)": [
    "destination",
    "source"
  ],
  "TextEncoderCommon": [
    "encoding"
  ],
  "TextEncoderEncodeIntoResult": [
    "read",
    "written"
  ],
  "TextEncoderStream": [
    "TextEncoderStream()",
    "constructor()",
    "encoder",
    "pending high surrogate"
  ],
  "TextMetrics": [
    "actualBoundingBoxAscent",
    "actualBoundingBoxDescent",
    "actualBoundingBoxLeft",
    "actualBoundingBoxRight",
    "alphabeticBaseline",
    "emHeightAscent",
    "emHeightDescent",
    "fontBoundingBoxAscent",
    "fontBoundingBoxDescent",
    "hangingBaseline",
    "ideographicBaseline",
    "width"
  ],
  "TextTrack": [
    "activeCues",
    "addCue(cue)",
    "cuechange",
    "cues",
    "id",
    "inBandMetadataTrackDispatchType",
    "kind",
    "label",
    "language",
    "mode",
    "oncuechange",
    "removeCue(cue)"
  ],
  "TextTrackCue": [
    "endTime",
    "enter",
    "exit",
    "id",
    "onenter",
    "onexit",
    "pauseOnExit",
    "startTime",
    "track"
  ],
  "TextTrackCueList": [
    "getCueById(id)",
    "length"
  ],
  "TextTrackList": [
    "addtrack",
    "change",
    "getTrackById(id)",
    "length",
    "onaddtrack",
    "onchange",
    "onremovetrack",
    "removetrack"
  ],
  "TimeRanges": [
    "end(index)",
    "length",
    "start(index)"
  ],
  "TimelinePhase": [
    "\"active\"",
    "\"after\"",
    "\"before\"",
    "\"inactive\""
  ],
  "TokenBinding": [
    "id",
    "status"
  ],
  "TokenBindingStatus": [
    "\"present\"",
    "\"supported\"",
    "present",
    "supported"
  ],
  "TrackEvent": [
    "track"
  ],
  "TransformStream": [
    "TransformStream()",
    "TransformStream(transformer)",
    "TransformStream(transformer, writableStrategy)",
    "TransformStream(transformer, writableStrategy, readableStrategy)",
    "[[backpressure]]",
    "[[backpressurechangepromise]]",
    "[[controller]]",
    "[[detached]]",
    "[[readable]]",
    "[[writable]]",
    "constructor()",
    "constructor(transformer)",
    "constructor(transformer, writableStrategy)",
    "constructor(transformer, writableStrategy, readableStrategy)",
    "enqueue",
    "error",
    "readable",
    "set up",
    "setting up",
    "terminate",
    "writable"
  ],
  "TransformStream/TransformStream()": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/TransformStream(transformer)": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/TransformStream(transformer, writableStrategy)": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/TransformStream(transformer, writableStrategy, readableStrategy)": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/constructor()": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/constructor(transformer)": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/constructor(transformer, writableStrategy)": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/constructor(transformer, writableStrategy, readableStrategy)": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/set up": [
    "flushalgorithm",
    "transformalgorithm"
  ],
  "TransformStreamDefaultController": [
    "[[flushalgorithm]]",
    "[[stream]]",
    "[[transformalgorithm]]",
    "desiredSize",
    "enqueue()",
    "enqueue(chunk)",
    "error()",
    "error(e)",
    "error(reason)",
    "terminate()"
  ],
  "TransformStreamDefaultController/enqueue()": [
    "chunk"
  ],
  "TransformStreamDefaultController/enqueue(chunk)": [
    "chunk"
  ],
  "TransformStreamDefaultController/error()": [
    "reason"
  ],
  "TransformStreamDefaultController/error(reason)": [
    "reason"
  ],
  "Transformer": [
    "flush",
    "readableType",
    "start",
    "transform",
    "writableType"
  ],
  "TransformerFlushCallback": [
    "controller"
  ],
  "TransformerStartCallback": [
    "controller"
  ],
  "TransformerTransformCallback": [
    "chunk",
    "controller"
  ],
  "TransitionEvent": [
    "TransitionEvent(type)",
    "TransitionEvent(type, transitionEventInitDict)",
    "constructor(type)",
    "constructor(type, transitionEventInitDict)",
    "elapsedTime",
    "propertyName",
    "pseudoElement"
  ],
  "TransitionEvent/TransitionEvent(type)": [
    "transitionEventInitDict",
    "type"
  ],
  "TransitionEvent/TransitionEvent(type, transitionEventInitDict)": [
    "transitionEventInitDict",
    "type"
  ],
  "TransitionEvent/constructor(type)": [
    "transitionEventInitDict",
    "type"
  ],
  "TransitionEvent/constructor(type, transitionEventInitDict)": [
    "transitionEventInitDict",
    "type"
  ],
  "TransitionEventInit": [
    "elapsedTime",
    "propertyName",
    "pseudoElement"
  ],
  "TreeWalker": [
    "current",
    "currentNode",
    "expandEntityReferences",
    "filter",
    "firstChild()",
    "lastChild()",
    "nextNode()",
    "nextSibling()",
    "parentNode()",
    "previousNode()",
    "previousSibling()",
    "root",
    "traverse children",
    "whatToShow"
  ],
  "UIEvent": [
    "UIEvent(type)",
    "UIEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "detail",
    "initUIEvent(typeArg)",
    "initUIEvent(typeArg, bubblesArg)",
    "initUIEvent(typeArg, bubblesArg, cancelableArg)",
    "initUIEvent(typeArg, bubblesArg, cancelableArg, viewArg)",
    "initUIEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg)",
    "view",
    "which"
  ],
  "UIEvent/UIEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "UIEvent/UIEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "UIEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "UIEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "UIEvent/initUIEvent(typeArg)": [
    "bubblesArg",
    "cancelableArg",
    "detailArg",
    "typeArg",
    "viewArg"
  ],
  "UIEvent/initUIEvent(typeArg, bubblesArg)": [
    "bubblesArg",
    "cancelableArg",
    "detailArg",
    "typeArg",
    "viewArg"
  ],
  "UIEvent/initUIEvent(typeArg, bubblesArg, cancelableArg)": [
    "bubblesArg",
    "cancelableArg",
    "detailArg",
    "typeArg",
    "viewArg"
  ],
  "UIEvent/initUIEvent(typeArg, bubblesArg, cancelableArg, viewArg)": [
    "bubblesArg",
    "cancelableArg",
    "detailArg",
    "typeArg",
    "viewArg"
  ],
  "UIEvent/initUIEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg)": [
    "bubblesArg",
    "cancelableArg",
    "detailArg",
    "typeArg",
    "viewArg"
  ],
  "UIEventInit": [
    "detail",
    "view",
    "which"
  ],
  "ULongRange": [
    "max",
    "min"
  ],
  "URL": [
    "URL(url)",
    "URL(url, base)",
    "constructor(url)",
    "constructor(url, base)",
    "createObjectURL(obj)",
    "hash",
    "host",
    "hostname",
    "href",
    "origin",
    "password",
    "pathname",
    "port",
    "protocol",
    "query object",
    "revokeObjectURL(url)",
    "search",
    "searchParams",
    "stringification behavior",
    "toJSON()",
    "url",
    "username",
    "within scope"
  ],
  "URL serializer": [
    "exclude fragment"
  ],
  "URL/URL(url)": [
    "base",
    "url"
  ],
  "URL/URL(url, base)": [
    "base",
    "url"
  ],
  "URL/constructor(url)": [
    "base",
    "url"
  ],
  "URL/constructor(url, base)": [
    "base",
    "url"
  ],
  "URL/createObjectURL(obj)": [
    "obj"
  ],
  "URL/revokeObjectURL(url)": [
    "url"
  ],
  "URLSearchParams": [
    "URLSearchParams()",
    "URLSearchParams(init)",
    "append(name, value)",
    "constructor()",
    "constructor(init)",
    "delete(name)",
    "get(name)",
    "getAll(name)",
    "has(name)",
    "initialize",
    "list",
    "set(name, value)",
    "sort()",
    "stringificationbehavior",
    "update",
    "url object"
  ],
  "URLSearchParams/URLSearchParams()": [
    "init"
  ],
  "URLSearchParams/URLSearchParams(init)": [
    "init"
  ],
  "URLSearchParams/append(name, value)": [
    "name",
    "value"
  ],
  "URLSearchParams/constructor()": [
    "init"
  ],
  "URLSearchParams/constructor(init)": [
    "init"
  ],
  "URLSearchParams/delete(name)": [
    "name"
  ],
  "URLSearchParams/get(name)": [
    "name"
  ],
  "URLSearchParams/getAll(name)": [
    "name"
  ],
  "URLSearchParams/has(name)": [
    "name"
  ],
  "URLSearchParams/set(name, value)": [
    "name",
    "value"
  ],
  "USB": [
    "getDevices",
    "getDevices()",
    "onconnect",
    "ondisconnect",
    "requestDevice",
    "requestDevice(options)"
  ],
  "USB/requestDevice(options)": [
    "options"
  ],
  "USBAlternateInterface": [
    "USBAlternateInterface(deviceInterface, alternateSetting)",
    "[[alternateSetting]]",
    "[[endpoints]]",
    "[[interface]]",
    "alternateSetting",
    "constructor(deviceInterface, alternateSetting)",
    "endpoints",
    "interfaceClass",
    "interfaceName",
    "interfaceProtocol",
    "interfaceSubclass"
  ],
  "USBAlternateInterface/USBAlternateInterface(deviceInterface, alternateSetting)": [
    "alternateSetting",
    "deviceInterface"
  ],
  "USBAlternateInterface/constructor(deviceInterface, alternateSetting)": [
    "alternateSetting",
    "deviceInterface"
  ],
  "USBConfiguration": [
    "USBConfiguration(device, configurationValue)",
    "[[configurationValue]]",
    "[[device]]",
    "[[interfaces]]",
    "configurationName",
    "configurationValue",
    "constructor(device, configurationValue)",
    "interfaces"
  ],
  "USBConfiguration/USBConfiguration(device, configurationValue)": [
    "configurationValue",
    "device"
  ],
  "USBConfiguration/constructor(device, configurationValue)": [
    "configurationValue",
    "device"
  ],
  "USBConnectionEvent": [
    "USBConnectionEvent(type, eventInitDict)",
    "constructor",
    "constructor(type, eventInitDict)",
    "device"
  ],
  "USBConnectionEvent/USBConnectionEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "USBConnectionEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "USBConnectionEventInit": [
    "device"
  ],
  "USBControlTransferParameters": [
    "index",
    "recipient",
    "request",
    "requestType",
    "value"
  ],
  "USBDevice": [
    "[[claimedInterface]]",
    "[[configurationValue]]",
    "[[configurations]]",
    "[[selectedAlternateSetting]]",
    "claimInterface(interfaceNumber)",
    "clearHalt(direction, endpointNumber)",
    "close()",
    "configuration",
    "configurations",
    "controlTransferIn(setup, length)",
    "controlTransferOut(setup)",
    "controlTransferOut(setup, data)",
    "deviceClass",
    "deviceProtocol",
    "deviceSubclass",
    "deviceVersionMajor",
    "deviceVersionMinor",
    "deviceVersionSubminor",
    "forget()",
    "isochronousTransferIn(endpointNumber, packetLengths)",
    "isochronousTransferOut(endpointNumber, data, packetLengths)",
    "manufacturerName",
    "open()",
    "opened",
    "productId",
    "productName",
    "releaseInterface(interfaceNumber)",
    "reset()",
    "selectAlternateInterface(interfaceNumber, alternateSetting)",
    "selectConfiguration(configurationValue)",
    "serialNumber",
    "transferIn(endpointNumber, length)",
    "transferOut(endpointNumber, data)",
    "usbVersionMajor",
    "usbVersionMinor",
    "usbVersionSubminor",
    "vendorId"
  ],
  "USBDevice/claimInterface(interfaceNumber)": [
    "interfaceNumber"
  ],
  "USBDevice/clearHalt(direction, endpointNumber)": [
    "direction",
    "endpointNumber"
  ],
  "USBDevice/controlTransferIn(setup, length)": [
    "length",
    "setup"
  ],
  "USBDevice/controlTransferOut(setup)": [
    "data",
    "setup"
  ],
  "USBDevice/controlTransferOut(setup, data)": [
    "data",
    "setup"
  ],
  "USBDevice/isochronousTransferIn(endpointNumber, packetLengths)": [
    "endpointNumber",
    "packetLengths"
  ],
  "USBDevice/isochronousTransferOut(endpointNumber, data, packetLengths)": [
    "data",
    "endpointNumber",
    "packetLengths"
  ],
  "USBDevice/releaseInterface(interfaceNumber)": [
    "interfaceNumber"
  ],
  "USBDevice/selectAlternateInterface(interfaceNumber, alternateSetting)": [
    "alternateSetting",
    "interfaceNumber"
  ],
  "USBDevice/selectConfiguration(configurationValue)": [
    "configurationValue"
  ],
  "USBDevice/transferIn(endpointNumber, length)": [
    "endpointNumber",
    "length"
  ],
  "USBDevice/transferOut(endpointNumber, data)": [
    "data",
    "endpointNumber"
  ],
  "USBDeviceFilter": [
    "classCode",
    "productId",
    "protocolCode",
    "serialNumber",
    "subclassCode",
    "vendorId"
  ],
  "USBDeviceRequestOptions": [
    "filters"
  ],
  "USBDirection": [
    "\"in\"",
    "\"out\""
  ],
  "USBEndpoint": [
    "USBEndpoint(alternate, endpointNumber, direction)",
    "[[alternateInterface]]",
    "[[endpointAddress]]",
    "constructor",
    "constructor(alternate, endpointNumber, direction)",
    "direction",
    "endpointNumber",
    "packetSize",
    "type"
  ],
  "USBEndpoint/USBEndpoint(alternate, endpointNumber, direction)": [
    "alternate",
    "direction",
    "endpointNumber"
  ],
  "USBEndpoint/constructor(alternate, endpointNumber, direction)": [
    "alternate",
    "direction",
    "endpointNumber"
  ],
  "USBEndpointType": [
    "\"bulk\"",
    "\"interrupt\"",
    "\"isochronous\""
  ],
  "USBInTransferResult": [
    "USBInTransferResult(status)",
    "USBInTransferResult(status, data)",
    "constructor",
    "constructor(status)",
    "constructor(status, data)",
    "data",
    "status"
  ],
  "USBInTransferResult/USBInTransferResult(status)": [
    "data",
    "status"
  ],
  "USBInTransferResult/USBInTransferResult(status, data)": [
    "data",
    "status"
  ],
  "USBInTransferResult/constructor(status)": [
    "data",
    "status"
  ],
  "USBInTransferResult/constructor(status, data)": [
    "data",
    "status"
  ],
  "USBInterface": [
    "USBInterface(configuration, interfaceNumber)",
    "[[alternates]]",
    "[[configuration]]",
    "[[interfaceNumber]]",
    "[[isProtectedClass]]",
    "alternate",
    "alternates",
    "claimed",
    "constructor(configuration, interfaceNumber)",
    "interfaceNumber"
  ],
  "USBInterface/USBInterface(configuration, interfaceNumber)": [
    "configuration",
    "interfaceNumber"
  ],
  "USBInterface/constructor(configuration, interfaceNumber)": [
    "configuration",
    "interfaceNumber"
  ],
  "USBIsochronousInTransferPacket": [
    "USBIsochronousInTransferPacket(status)",
    "USBIsochronousInTransferPacket(status, data)",
    "constructor",
    "constructor(status)",
    "constructor(status, data)",
    "data",
    "status"
  ],
  "USBIsochronousInTransferPacket/USBIsochronousInTransferPacket(status)": [
    "data",
    "status"
  ],
  "USBIsochronousInTransferPacket/USBIsochronousInTransferPacket(status, data)": [
    "data",
    "status"
  ],
  "USBIsochronousInTransferPacket/constructor(status)": [
    "data",
    "status"
  ],
  "USBIsochronousInTransferPacket/constructor(status, data)": [
    "data",
    "status"
  ],
  "USBIsochronousInTransferResult": [
    "USBIsochronousInTransferResult(packets)",
    "USBIsochronousInTransferResult(packets, data)",
    "constructor",
    "constructor(packets)",
    "constructor(packets, data)",
    "data",
    "packets"
  ],
  "USBIsochronousInTransferResult/USBIsochronousInTransferResult(packets)": [
    "data",
    "packets"
  ],
  "USBIsochronousInTransferResult/USBIsochronousInTransferResult(packets, data)": [
    "data",
    "packets"
  ],
  "USBIsochronousInTransferResult/constructor(packets)": [
    "data",
    "packets"
  ],
  "USBIsochronousInTransferResult/constructor(packets, data)": [
    "data",
    "packets"
  ],
  "USBIsochronousOutTransferPacket": [
    "USBIsochronousOutTransferPacket(status)",
    "USBIsochronousOutTransferPacket(status, bytesWritten)",
    "bytesWritten",
    "constructor",
    "constructor(status)",
    "constructor(status, bytesWritten)",
    "status"
  ],
  "USBIsochronousOutTransferPacket/USBIsochronousOutTransferPacket(status)": [
    "bytesWritten",
    "status"
  ],
  "USBIsochronousOutTransferPacket/USBIsochronousOutTransferPacket(status, bytesWritten)": [
    "bytesWritten",
    "status"
  ],
  "USBIsochronousOutTransferPacket/constructor(status)": [
    "bytesWritten",
    "status"
  ],
  "USBIsochronousOutTransferPacket/constructor(status, bytesWritten)": [
    "bytesWritten",
    "status"
  ],
  "USBIsochronousOutTransferResult": [
    "USBIsochronousOutTransferResult(packets)",
    "constructor",
    "constructor(packets)",
    "packets"
  ],
  "USBIsochronousOutTransferResult/USBIsochronousOutTransferResult(packets)": [
    "packets"
  ],
  "USBIsochronousOutTransferResult/constructor(packets)": [
    "packets"
  ],
  "USBOutTransferResult": [
    "USBOutTransferResult(status)",
    "USBOutTransferResult(status, bytesWritten)",
    "bytesWritten",
    "constructor",
    "constructor(status)",
    "constructor(status, bytesWritten)",
    "status"
  ],
  "USBOutTransferResult/USBOutTransferResult(status)": [
    "bytesWritten",
    "status"
  ],
  "USBOutTransferResult/USBOutTransferResult(status, bytesWritten)": [
    "bytesWritten",
    "status"
  ],
  "USBOutTransferResult/constructor(status)": [
    "bytesWritten",
    "status"
  ],
  "USBOutTransferResult/constructor(status, bytesWritten)": [
    "bytesWritten",
    "status"
  ],
  "USBPermissionDescriptor": [
    "filters"
  ],
  "USBPermissionResult": [
    "devices"
  ],
  "USBPermissionStorage": [
    "allowedDevices"
  ],
  "USBRecipient": [
    "\"device\"",
    "\"endpoint\"",
    "\"interface\"",
    "\"other\""
  ],
  "USBRequestType": [
    "\"class\"",
    "\"standard\"",
    "\"vendor\""
  ],
  "USBTransferStatus": [
    "\"babble\"",
    "\"ok\"",
    "\"stall\""
  ],
  "UnderlyingSink": [
    "abort",
    "close",
    "start",
    "type",
    "write"
  ],
  "UnderlyingSinkAbortCallback": [
    "reason"
  ],
  "UnderlyingSinkStartCallback": [
    "controller"
  ],
  "UnderlyingSinkWriteCallback": [
    "chunk",
    "controller"
  ],
  "UnderlyingSource": [
    "autoAllocateChunkSize",
    "cancel",
    "pull",
    "start",
    "type"
  ],
  "UnderlyingSourceCancelCallback": [
    "reason"
  ],
  "UnderlyingSourcePullCallback": [
    "controller"
  ],
  "UnderlyingSourceStartCallback": [
    "controller"
  ],
  "UserVerificationRequirement": [
    "\"discouraged\"",
    "\"preferred\"",
    "\"required\"",
    "discouraged",
    "preferred",
    "required"
  ],
  "ValidityState": [
    "badInput",
    "customError",
    "patternMismatch",
    "rangeOverflow",
    "rangeUnderflow",
    "stepMismatch",
    "tooLong",
    "tooShort",
    "typeMismatch",
    "valid",
    "valueMissing"
  ],
  "ValueEvent": [
    "ValueEvent(type)",
    "ValueEvent(type, initDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, initDict)",
    "value"
  ],
  "ValueEvent/ValueEvent(type)": [
    "initDict",
    "type"
  ],
  "ValueEvent/ValueEvent(type, initDict)": [
    "initDict",
    "type"
  ],
  "ValueEvent/constructor(type)": [
    "initDict",
    "type"
  ],
  "ValueEvent/constructor(type, initDict)": [
    "initDict",
    "type"
  ],
  "ValueEventInit": [
    "value"
  ],
  "ValueType": [
    "\"anyfunc\"",
    "\"externref\"",
    "\"f32\"",
    "\"f64\"",
    "\"i32\"",
    "\"i64\"",
    "\"v128\""
  ],
  "VideoFacingModeEnum": [
    "environment",
    "left",
    "right",
    "user"
  ],
  "VideoResizeModeEnum": [
    "crop-and-scale",
    "none"
  ],
  "VideoTrack": [
    "id",
    "kind",
    "label",
    "language",
    "selected"
  ],
  "VideoTrackList": [
    "addtrack",
    "change",
    "getTrackById(id)",
    "length",
    "onaddtrack",
    "onchange",
    "onremovetrack",
    "removetrack",
    "selectedIndex"
  ],
  "VisibilityState": [
    "hidden",
    "visible"
  ],
  "WatchAdvertisementsOptions": [
    "signal"
  ],
  "WaveShaperNode": [
    "WaveShaperNode(context)",
    "WaveShaperNode(context, options)",
    "[[curve set]]",
    "constructor(context)",
    "constructor(context, options)",
    "curve",
    "oversample"
  ],
  "WaveShaperNode/WaveShaperNode(context)": [
    "context",
    "options"
  ],
  "WaveShaperNode/WaveShaperNode(context, options)": [
    "context",
    "options"
  ],
  "WaveShaperNode/constructor()": [
    "context",
    "options"
  ],
  "WaveShaperNode/constructor(context)": [
    "context",
    "options"
  ],
  "WaveShaperNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "WaveShaperOptions": [
    "curve",
    "oversample"
  ],
  "Web IDL arguments list": [
    "converting"
  ],
  "WebAssembly": [
    "compile(bytes)",
    "instantiate(bytes)",
    "instantiate(bytes, importObject)",
    "instantiate(moduleObject)",
    "instantiate(moduleObject, importObject)",
    "validate(bytes)"
  ],
  "WebAssembly/compile(bytes)": [
    "bytes"
  ],
  "WebAssembly/instantiate(bytes)": [
    "bytes",
    "importObject"
  ],
  "WebAssembly/instantiate(bytes, importObject)": [
    "bytes",
    "importObject"
  ],
  "WebAssembly/instantiate(moduleObject)": [
    "importObject",
    "moduleObject"
  ],
  "WebAssembly/instantiate(moduleObject, importObject)": [
    "importObject",
    "moduleObject"
  ],
  "WebAssembly/validate(bytes)": [
    "bytes"
  ],
  "WebAssemblyInstantiatedSource": [
    "instance",
    "module"
  ],
  "WebGLContextAttributes": [
    "xrCompatible"
  ],
  "WebGLRenderingContextBase": [
    "makeXRCompatible()"
  ],
  "WebSocket": [
    "CLOSED",
    "CLOSING",
    "CONNECTING",
    "OPEN",
    "WebSocket(url)",
    "WebSocket(url, protocols)",
    "binary type",
    "binaryType",
    "bufferedAmount",
    "close",
    "close()",
    "close(code)",
    "close(code, reason)",
    "constructor(url)",
    "constructor(url, protocols)",
    "error",
    "extensions",
    "internal-url",
    "make disappear",
    "message",
    "onclose",
    "onerror",
    "onmessage",
    "onopen",
    "open",
    "protocol",
    "ready state",
    "readyState",
    "send(data)",
    "url"
  ],
  "WebSocket/WebSocket(url)": [
    "protocols",
    "url"
  ],
  "WebSocket/WebSocket(url, protocols)": [
    "protocols",
    "url"
  ],
  "WebSocket/close()": [
    "code",
    "reason"
  ],
  "WebSocket/close(code)": [
    "code",
    "reason"
  ],
  "WebSocket/close(code, reason)": [
    "code",
    "reason"
  ],
  "WebSocket/constructor(url)": [
    "protocols",
    "url"
  ],
  "WebSocket/constructor(url, protocols)": [
    "protocols",
    "url"
  ],
  "WebSocket/send(data)": [
    "data"
  ],
  "WheelEvent": [
    "DOM_DELTA_LINE",
    "DOM_DELTA_PAGE",
    "DOM_DELTA_PIXEL",
    "WheelEvent(type)",
    "WheelEvent(type, eventInitDict)",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "deltaMode",
    "deltaX",
    "deltaY",
    "deltaZ"
  ],
  "WheelEvent/WheelEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "WheelEvent/WheelEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "WheelEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "WheelEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "WheelEventInit": [
    "deltaMode",
    "deltaX",
    "deltaY",
    "deltaZ"
  ],
  "Window": [
    "[[defaultElementStylesMap]]",
    "[[registeredPropertySet]]",
    "afterprint",
    "alert()",
    "alert(message)",
    "beforeprint",
    "beforeunload",
    "blur",
    "blur()",
    "browsing context",
    "captureEvents()",
    "clientInformation",
    "close()",
    "closed",
    "confirm(message)",
    "current event",
    "customElements",
    "devicePixelRatio",
    "document",
    "error",
    "event",
    "external",
    "focus",
    "focus()",
    "frameElement",
    "frames",
    "getComputedStyle(elt)",
    "getComputedStyle(elt, pseudoElt)",
    "hashchange",
    "history",
    "innerHeight",
    "innerWidth",
    "languagechange",
    "length",
    "load",
    "location",
    "locationbar",
    "matchMedia(query)",
    "menubar",
    "message",
    "messageerror",
    "moveBy(x, y)",
    "moveTo(x, y)",
    "name",
    "navigate(dir)",
    "navigator",
    "offline",
    "onabort",
    "onanimationcancel",
    "onanimationend",
    "onanimationiteration",
    "onanimationstart",
    "onauxclick",
    "onbeforeinput",
    "onbeforematch",
    "oncancel",
    "oncanplay",
    "oncanplaythrough",
    "onchange",
    "onclick",
    "onclose",
    "oncontextlost",
    "oncontextmenu",
    "oncontextrestored",
    "oncuechange",
    "ondblclick",
    "ondrag",
    "ondragend",
    "ondragenter",
    "ondragleave",
    "ondragover",
    "ondragstart",
    "ondrop",
    "ondurationchange",
    "onemptied",
    "onended",
    "onformdata",
    "oninput",
    "oninvalid",
    "onkeydown",
    "onkeypress",
    "onkeyup",
    "online",
    "onloadeddata",
    "onloadedmetadata",
    "onloadstart",
    "onmousedown",
    "onmouseenter",
    "onmouseleave",
    "onmousemove",
    "onmouseout",
    "onmouseover",
    "onmouseup",
    "onorientationchange",
    "onpause",
    "onplay",
    "onplaying",
    "onprogress",
    "onratechange",
    "onreset",
    "onsecuritypolicyviolation",
    "onseeked",
    "onseeking",
    "onselect",
    "onslotchange",
    "onstalled",
    "onsubmit",
    "onsuspend",
    "ontimeupdate",
    "ontoggle",
    "onvolumechange",
    "onwaiting",
    "onwebkitanimationend",
    "onwebkitanimationiteration",
    "onwebkitanimationstart",
    "onwebkittransitionend",
    "onwheel",
    "open(url, target, features)",
    "opener",
    "orientation",
    "originAgentCluster",
    "outerHeight",
    "outerWidth",
    "pageXOffset",
    "pageYOffset",
    "pagehide",
    "pageshow",
    "parent",
    "performance",
    "personalbar",
    "popstate",
    "postMessage(message, options)",
    "postMessage(message, targetOrigin, transfer)",
    "print()",
    "prompt(message, default)",
    "rejectionhandled",
    "releaseEvents()",
    "resize",
    "resizeBy(x, y)",
    "resizeTo(width, height)",
    "resizeTo(x, y)",
    "screen",
    "screenLeft",
    "screenTop",
    "screenX",
    "screenY",
    "scroll()",
    "scroll(options)",
    "scroll(x, y)",
    "scrollBy()",
    "scrollBy(options)",
    "scrollBy(x, y)",
    "scrollTo()",
    "scrollTo(options)",
    "scrollTo(x, y)",
    "scrollX",
    "scrollY",
    "scrollbars",
    "self",
    "status",
    "statusbar",
    "stop()",
    "storage",
    "toolbar",
    "top",
    "unhandledrejection",
    "unload",
    "window"
  ],
  "Window/getComputedStyle(elt)": [
    "elt",
    "pseudoElt"
  ],
  "Window/getComputedStyle(elt, pseudoElt)": [
    "elt",
    "pseudoElt"
  ],
  "Window/matchMedia(query)": [
    "query"
  ],
  "Window/moveBy(x, y)": [
    "x",
    "y"
  ],
  "Window/moveTo(x, y)": [
    "x",
    "y"
  ],
  "Window/navigate(dir)": [
    "dir"
  ],
  "Window/resizeBy(x, y)": [
    "x",
    "y"
  ],
  "Window/resizeTo(width, height)": [
    "height",
    "width"
  ],
  "Window/resizeTo(x, y)": [
    "x",
    "y"
  ],
  "Window/scroll()": [
    "options"
  ],
  "Window/scroll(options)": [
    "options"
  ],
  "Window/scroll(x, y)": [
    "x",
    "y"
  ],
  "Window/scrollBy()": [
    "options"
  ],
  "Window/scrollBy(options)": [
    "options"
  ],
  "Window/scrollBy(x, y)": [
    "x",
    "y"
  ],
  "Window/scrollTo()": [
    "options"
  ],
  "Window/scrollTo(options)": [
    "options"
  ],
  "Window/scrollTo(x, y)": [
    "x",
    "y"
  ],
  "WindowClient": [
    "ancestor origins array",
    "ancestorOrigins",
    "browsing context",
    "focus()",
    "focused",
    "navigate(url)",
    "visibilityState"
  ],
  "WindowClient/navigate(url)": [
    "url"
  ],
  "WindowEventHandlers": [
    "onafterprint",
    "onbeforeprint",
    "onbeforeunload",
    "onhashchange",
    "onlanguagechange",
    "onmessage",
    "onmessageerror",
    "onoffline",
    "ononline",
    "onpagehide",
    "onpageshow",
    "onpopstate",
    "onrejectionhandled",
    "onstorage",
    "onunhandledrejection",
    "onunload"
  ],
  "WindowLocalStorage": [
    "localStorage"
  ],
  "WindowOrWorkerGlobalScope": [
    "WindowOrWorkerGlobalScope.performance",
    "atob(data)",
    "btoa(data)",
    "caches",
    "clearInterval()",
    "clearTimeout()",
    "createImageBitmap(image)",
    "crossOriginIsolated",
    "crypto",
    "endpoints",
    "fetch(input)",
    "fetch(input, init)",
    "indexedDB",
    "isSecureContext",
    "origin",
    "performance",
    "queueMicrotask(callback)",
    "registered reporting observer list",
    "report buffer",
    "reportError(e)",
    "reports",
    "setInterval(handler, timeout, ...arguments)",
    "setTimeout(handler, timeout, ...arguments)",
    "structuredClone(value, options)"
  ],
  "WindowOrWorkerGlobalScope/fetch(input)": [
    "init",
    "input"
  ],
  "WindowOrWorkerGlobalScope/fetch(input, init)": [
    "init",
    "input"
  ],
  "WindowPostMessageOptions": [
    "targetOrigin"
  ],
  "WindowSessionStorage": [
    "sessionStorage"
  ],
  "Worker": [
    "Worker(scriptURL, options)",
    "error",
    "message",
    "messageerror",
    "onmessage",
    "onmessageerror",
    "postMessage(message, options)",
    "postMessage(message, transfer)",
    "terminate()"
  ],
  "WorkerGlobalScope": [
    "closing",
    "cross-origin isolated capability",
    "embedder policy",
    "error",
    "importScripts(...urls)",
    "languagechange",
    "location",
    "module map",
    "name",
    "navigator",
    "offline",
    "onerror",
    "onlanguagechange",
    "online",
    "onoffline",
    "ononline",
    "onrejectionhandled",
    "onunhandledrejection",
    "owner set",
    "policy container",
    "rejectionhandled",
    "self",
    "type",
    "unhandledrejection",
    "url"
  ],
  "WorkerLocation": [
    "hash",
    "host",
    "hostname",
    "href",
    "origin",
    "pathname",
    "port",
    "protocol",
    "search"
  ],
  "WorkerNavigator": [
    "permissions",
    "serial",
    "serviceWorker",
    "usb"
  ],
  "Worklet": [
    "addModule(moduleURL)",
    "global scopes"
  ],
  "WorkletAnimation": [
    "WorkletAnimation(animatorName)",
    "WorkletAnimation(animatorName, effects)",
    "WorkletAnimation(animatorName, effects, timeline)",
    "WorkletAnimation(animatorName, effects, timeline, options)",
    "animatorName",
    "constructor(animatorName)",
    "constructor(animatorName, effects)",
    "constructor(animatorName, effects, timeline)",
    "constructor(animatorName, effects, timeline, options)"
  ],
  "WorkletAnimation/WorkletAnimation(animatorName)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/WorkletAnimation(animatorName, effects)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/WorkletAnimation(animatorName, effects, timeline)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/WorkletAnimation(animatorName, effects, timeline, options)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/constructor(animatorName)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/constructor(animatorName, effects)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/constructor(animatorName, effects, timeline)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/constructor(animatorName, effects, timeline, options)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimationEffect": [
    "getComputedTiming()",
    "getTiming()",
    "localTime"
  ],
  "WorkletGroupEffect": [
    "getChildren",
    "getChildren()"
  ],
  "WorkletOptions": [
    "credentials"
  ],
  "WritableStream": [
    "WritableStream()",
    "WritableStream(underlyingSink)",
    "WritableStream(underlyingSink, strategy)",
    "[[backpressure]]",
    "[[closerequest]]",
    "[[controller]]",
    "[[detached]]",
    "[[inflightcloserequest]]",
    "[[inflightwriterequest]]",
    "[[pendingabortrequest]]",
    "[[state]]",
    "[[storederror]]",
    "[[writer]]",
    "[[writerequests]]",
    "abort",
    "abort()",
    "abort(reason)",
    "aborting",
    "close",
    "close()",
    "closing",
    "constructor()",
    "constructor(underlyingSink)",
    "constructor(underlyingSink, strategy)",
    "error",
    "erroring",
    "get a writer",
    "getWriter()",
    "getting a writer",
    "locked",
    "set up",
    "signal"
  ],
  "WritableStream/WritableStream()": [
    "strategy",
    "underlyingSink"
  ],
  "WritableStream/WritableStream(underlyingSink)": [
    "strategy",
    "underlyingSink"
  ],
  "WritableStream/WritableStream(underlyingSink, strategy)": [
    "strategy",
    "underlyingSink"
  ],
  "WritableStream/abort()": [
    "reason"
  ],
  "WritableStream/abort(reason)": [
    "reason"
  ],
  "WritableStream/constructor()": [
    "strategy",
    "underlyingSink"
  ],
  "WritableStream/constructor(underlyingSink)": [
    "strategy",
    "underlyingSink"
  ],
  "WritableStream/constructor(underlyingSink, strategy)": [
    "strategy",
    "underlyingSink"
  ],
  "WritableStream/set up": [
    "abortalgorithm",
    "closealgorithm",
    "highwatermark",
    "sizealgorithm",
    "writealgorithm"
  ],
  "WritableStreamController": [
    "[[AbortSteps]]",
    "[[ErrorSteps]]"
  ],
  "WritableStreamDefaultController": [
    "[[AbortSteps]]",
    "[[ErrorSteps]]",
    "[[abortalgorithm]]",
    "[[closealgorithm]]",
    "[[queue]]",
    "[[queuetotalsize]]",
    "[[signal]]",
    "[[started]]",
    "[[strategyhwm]]",
    "[[strategysizealgorithm]]",
    "[[stream]]",
    "[[writealgorithm]]",
    "error()",
    "error(e)",
    "signal"
  ],
  "WritableStreamDefaultController/error()": [
    "e"
  ],
  "WritableStreamDefaultController/error(e)": [
    "e"
  ],
  "WritableStreamDefaultWriter": [
    "WritableStreamDefaultWriter(stream)",
    "[[closedpromise]]",
    "[[readypromise]]",
    "[[stream]]",
    "abort()",
    "abort(reason)",
    "close()",
    "closed",
    "constructor(stream)",
    "desiredSize",
    "ready",
    "release",
    "releaseLock()",
    "write a chunk",
    "write()",
    "write(chunk)",
    "writing a chunk"
  ],
  "WritableStreamDefaultWriter/WritableStreamDefaultWriter(stream)": [
    "stream"
  ],
  "WritableStreamDefaultWriter/abort()": [
    "reason"
  ],
  "WritableStreamDefaultWriter/abort(reason)": [
    "reason"
  ],
  "WritableStreamDefaultWriter/constructor(stream)": [
    "stream"
  ],
  "WritableStreamDefaultWriter/write()": [
    "chunk"
  ],
  "WritableStreamDefaultWriter/write(chunk)": [
    "chunk"
  ],
  "WriteCommandType": [
    "\"seek\"",
    "\"truncate\"",
    "\"write\""
  ],
  "WriteParams": [
    "data",
    "position",
    "size",
    "type"
  ],
  "XMLHttpRequest": [
    "DONE",
    "HEADERS_RECEIVED",
    "LOADING",
    "OPENED",
    "UNSENT",
    "XMLHttpRequest()",
    "abort",
    "abort()",
    "constructor()",
    "error",
    "fetch controller",
    "getAllResponseHeaders()",
    "getResponseHeader(name)",
    "load",
    "loadend",
    "loadstart",
    "onreadystatechange",
    "open(method, url)",
    "open(method, url, async)",
    "open(method, url, async, username)",
    "open(method, url, async, username, password)",
    "overrideMimeType(mime)",
    "progress",
    "readyState",
    "readystatechange",
    "response",
    "responseText",
    "responseType",
    "responseURL",
    "responseXML",
    "send()",
    "send(body)",
    "setRequestHeader(name, value)",
    "status",
    "statusText",
    "timeout",
    "upload",
    "withCredentials"
  ],
  "XMLHttpRequest/getResponseHeader(name)": [
    "name"
  ],
  "XMLHttpRequest/open(method, url)": [
    "method",
    "url"
  ],
  "XMLHttpRequest/open(method, url, async)": [
    "async",
    "method",
    "password",
    "url",
    "username"
  ],
  "XMLHttpRequest/open(method, url, async, username)": [
    "async",
    "method",
    "password",
    "url",
    "username"
  ],
  "XMLHttpRequest/open(method, url, async, username, password)": [
    "async",
    "method",
    "password",
    "url",
    "username"
  ],
  "XMLHttpRequest/overrideMimeType(mime)": [
    "mime"
  ],
  "XMLHttpRequest/send()": [
    "body"
  ],
  "XMLHttpRequest/send(body)": [
    "body"
  ],
  "XMLHttpRequest/setRequestHeader(name, value)": [
    "name",
    "value"
  ],
  "XMLHttpRequestEventTarget": [
    "onabort",
    "onerror",
    "onload",
    "onloadend",
    "onloadstart",
    "onprogress",
    "ontimeout"
  ],
  "XMLHttpRequestResponseType": [
    "\"\"",
    "\"arraybuffer\"",
    "\"blob\"",
    "\"document\"",
    "\"json\"",
    "\"text\""
  ],
  "XPathEvaluator": [
    "XPathEvaluator()",
    "constructor",
    "constructor()"
  ],
  "XPathEvaluatorBase": [
    "createExpression",
    "createExpression(expression)",
    "createExpression(expression, resolver)",
    "createNSResolver",
    "createNSResolver(nodeResolver)",
    "evaluate",
    "evaluate(expression, contextNode)",
    "evaluate(expression, contextNode, resolver)",
    "evaluate(expression, contextNode, resolver, type)",
    "evaluate(expression, contextNode, resolver, type, result)"
  ],
  "XPathEvaluatorBase/createExpression(expression)": [
    "expression",
    "resolver"
  ],
  "XPathEvaluatorBase/createExpression(expression, resolver)": [
    "expression",
    "resolver"
  ],
  "XPathEvaluatorBase/createNSResolver(nodeResolver)": [
    "nodeResolver"
  ],
  "XPathEvaluatorBase/evaluate(expression, contextNode)": [
    "contextNode",
    "expression",
    "resolver",
    "result",
    "type"
  ],
  "XPathEvaluatorBase/evaluate(expression, contextNode, resolver)": [
    "contextNode",
    "expression",
    "resolver",
    "result",
    "type"
  ],
  "XPathEvaluatorBase/evaluate(expression, contextNode, resolver, type)": [
    "contextNode",
    "expression",
    "resolver",
    "result",
    "type"
  ],
  "XPathEvaluatorBase/evaluate(expression, contextNode, resolver, type, result)": [
    "contextNode",
    "expression",
    "resolver",
    "result",
    "type"
  ],
  "XPathExpression": [
    "evaluate",
    "evaluate(contextNode)",
    "evaluate(contextNode, type)",
    "evaluate(contextNode, type, result)"
  ],
  "XPathExpression/evaluate(contextNode)": [
    "contextNode",
    "result",
    "type"
  ],
  "XPathExpression/evaluate(contextNode, type)": [
    "contextNode",
    "result",
    "type"
  ],
  "XPathExpression/evaluate(contextNode, type, result)": [
    "contextNode",
    "result",
    "type"
  ],
  "XPathNSResolver": [
    "lookupNamespaceURI",
    "lookupNamespaceURI(prefix)"
  ],
  "XPathNSResolver/lookupNamespaceURI(prefix)": [
    "prefix"
  ],
  "XPathResult": [
    "ANY_TYPE",
    "ANY_UNORDERED_NODE_TYPE",
    "BOOLEAN_TYPE",
    "FIRST_ORDERED_NODE_TYPE",
    "NUMBER_TYPE",
    "ORDERED_NODE_ITERATOR_TYPE",
    "ORDERED_NODE_SNAPSHOT_TYPE",
    "STRING_TYPE",
    "UNORDERED_NODE_ITERATOR_TYPE",
    "UNORDERED_NODE_SNAPSHOT_TYPE",
    "booleanValue",
    "invalidIteratorState",
    "iterateNext",
    "iterateNext()",
    "numberValue",
    "resultType",
    "singleNodeValue",
    "snapshotItem",
    "snapshotItem(index)",
    "snapshotLength",
    "stringValue"
  ],
  "XPathResult/snapshotItem(index)": [
    "index"
  ],
  "XR device": [
    "set of granted features"
  ],
  "XRBoundedReferenceSpace": [
    "boundsGeometry",
    "native bounds geometry"
  ],
  "XRCompositionLayer": [
    "blendTextureSourceAlpha",
    "chromaticAberrationCorrection",
    "context",
    "destroy",
    "destroy()",
    "isstatic",
    "layout",
    "media",
    "mipLevels",
    "needsRedraw",
    "session"
  ],
  "XRCubeLayer": [
    "onredraw",
    "orientation",
    "space"
  ],
  "XRCubeLayerInit": [
    "orientation"
  ],
  "XRCylinderLayer": [
    "aspectRatio",
    "centralAngle",
    "onredraw",
    "radius",
    "space",
    "transform"
  ],
  "XRCylinderLayerInit": [
    "aspectRatio",
    "centralAngle",
    "radius",
    "textureType",
    "transform"
  ],
  "XRDOMOverlayInit": [
    "root"
  ],
  "XRDOMOverlayState": [
    "type"
  ],
  "XRDOMOverlayType": [
    "\"floating\"",
    "\"head-locked\"",
    "\"screen\"",
    "floating",
    "head-locked",
    "screen"
  ],
  "XREnvironmentBlendMode": [
    "\"additive\"",
    "\"alpha-blend\"",
    "\"opaque\"",
    "additive",
    "alpha-blend",
    "opaque"
  ],
  "XREquirectLayer": [
    "centralHorizontalAngle",
    "lowerVerticalAngle",
    "onredraw",
    "radius",
    "space",
    "transform",
    "upperVerticalAngle"
  ],
  "XREquirectLayerInit": [
    "centralHorizontalAngle",
    "lowerVerticalAngle",
    "radius",
    "textureType",
    "transform",
    "upperVerticalAngle"
  ],
  "XREye": [
    "\"left\"",
    "\"none\"",
    "\"right\""
  ],
  "XRFrame": [
    "active",
    "animationframe",
    "apply frame updates",
    "apply gamepad frame updates",
    "fillJointRadii(jointSpaces, radii)",
    "fillJointRadii(sequence<XRJointSpace> jointSpaces, Float32Array radii)",
    "fillPoses(sequence<XRSpace> spaces, XRSpace baseSpace, Float32Array transforms)",
    "fillPoses(spaces, baseSpace, transforms)",
    "getHitTestResults(hitTestSource)",
    "getHitTestResultsForTransientInput(hitTestSource)",
    "getJointPose(XRJointSpace joint, XRSpace baseSpace)",
    "getJointPose(joint, baseSpace)",
    "getPose(space, baseSpace)",
    "getViewerPose(referenceSpace)",
    "map of hit test sources to hit test results",
    "map of hit test sources to hit test results for transient input",
    "predictedDisplayTime",
    "session",
    "time"
  ],
  "XRFrame/fillJointRadii(jointSpaces, radii)": [
    "jointSpaces",
    "radii"
  ],
  "XRFrame/fillPoses(spaces, baseSpace, transforms)": [
    "baseSpace",
    "spaces",
    "transforms"
  ],
  "XRFrame/getHitTestResults(hitTestSource)": [
    "hitTestSource"
  ],
  "XRFrame/getHitTestResultsForTransientInput(hitTestSource)": [
    "hitTestSource"
  ],
  "XRFrame/getJointPose(joint, baseSpace)": [
    "baseSpace",
    "joint"
  ],
  "XRFrame/getPose(space, baseSpace)": [
    "baseSpace",
    "space"
  ],
  "XRFrame/getViewerPose(referenceSpace)": [
    "referenceSpace"
  ],
  "XRFrameRequestCallback": [
    "cancelled",
    "frame",
    "time"
  ],
  "XRHand": [
    "[[joints]]",
    "get",
    "get(jointName)",
    "get(key)",
    "input source",
    "size"
  ],
  "XRHand/get(key)": [
    "key"
  ],
  "XRHandJoint": [
    "\"index-finger-metacarpal\"",
    "\"index-finger-phalanx-distal\"",
    "\"index-finger-phalanx-intermediate\"",
    "\"index-finger-phalanx-proximal\"",
    "\"index-finger-tip\"",
    "\"middle-finger-metacarpal\"",
    "\"middle-finger-phalanx-distal\"",
    "\"middle-finger-phalanx-intermediate\"",
    "\"middle-finger-phalanx-proximal\"",
    "\"middle-finger-tip\"",
    "\"pinky-finger-metacarpal\"",
    "\"pinky-finger-phalanx-distal\"",
    "\"pinky-finger-phalanx-intermediate\"",
    "\"pinky-finger-phalanx-proximal\"",
    "\"pinky-finger-tip\"",
    "\"ring-finger-metacarpal\"",
    "\"ring-finger-phalanx-distal\"",
    "\"ring-finger-phalanx-intermediate\"",
    "\"ring-finger-phalanx-proximal\"",
    "\"ring-finger-tip\"",
    "\"thumb-metacarpal\"",
    "\"thumb-phalanx-distal\"",
    "\"thumb-phalanx-proximal\"",
    "\"thumb-tip\"",
    "\"wrist\""
  ],
  "XRHandedness": [
    "\"left\"",
    "\"none\"",
    "\"right\""
  ],
  "XRHitTestOptionsInit": [
    "effective entitytypes",
    "effective offsetray",
    "entityTypes",
    "offsetRay",
    "space"
  ],
  "XRHitTestResult": [
    "frame",
    "getPose(baseSpace)",
    "native origin"
  ],
  "XRHitTestResult/getPose(baseSpace)": [
    "baseSpace"
  ],
  "XRHitTestSource": [
    "active",
    "cancel()",
    "entity types",
    "native origin",
    "offset ray",
    "session"
  ],
  "XRHitTestTrackableType": [
    "\"mesh\"",
    "\"plane\"",
    "\"point\""
  ],
  "XRInputSource": [
    "gamepad",
    "gripSpace",
    "hand",
    "handedness",
    "input profile name",
    "profiles",
    "targetRayMode",
    "targetRaySpace"
  ],
  "XRInputSourceArray": [
    "indexed property getter",
    "length"
  ],
  "XRInputSourceArray/__getter__(index)": [
    "index"
  ],
  "XRInputSourceEvent": [
    "XRInputSourceEvent(type, eventInitDict)",
    "constructor",
    "constructor(type, eventInitDict)",
    "frame",
    "inputSource"
  ],
  "XRInputSourceEvent/XRInputSourceEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRInputSourceEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRInputSourceEventInit": [
    "frame",
    "inputSource"
  ],
  "XRInputSourcesChangeEvent": [
    "XRInputSourcesChangeEvent(type, eventInitDict)",
    "added",
    "constructor",
    "constructor(type, eventInitDict)",
    "removed",
    "session"
  ],
  "XRInputSourcesChangeEvent/XRInputSourcesChangeEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRInputSourcesChangeEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRInputSourcesChangeEventInit": [
    "added",
    "removed",
    "session"
  ],
  "XRInteractionMode": [
    "\"screen-space\"",
    "\"world-space\""
  ],
  "XRJointPose": [
    "radius"
  ],
  "XRJointSpace": [
    "hand",
    "joint",
    "jointName",
    "jointname"
  ],
  "XRLayer": [
    "redraw"
  ],
  "XRLayerEvent": [
    "XRLayerEvent(type, eventInitDict)",
    "constructor",
    "constructor(type, eventInitDict)",
    "layer"
  ],
  "XRLayerEvent/XRLayerEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRLayerEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRLayerEventInit": [
    "layer"
  ],
  "XRLayerInit": [
    "colorFormat",
    "depthFormat",
    "isStatic",
    "layout",
    "mipLevels",
    "space",
    "viewPixelHeight",
    "viewPixelWidth"
  ],
  "XRLayerLayout": [
    "\"default\"",
    "\"mono\"",
    "\"stereo\"",
    "\"stereo-left-right\"",
    "\"stereo-top-bottom\"",
    "default",
    "mono",
    "stereo",
    "stereo-left-right",
    "stereo-top-bottom"
  ],
  "XRMediaBinding": [
    "XRMediaBinding(XRSession session)",
    "XRMediaBinding(session)",
    "constructor(session)",
    "createCylinderLayer(HTMLVideoElement video, XRMediaCylinderLayerInit init)",
    "createCylinderLayer(video)",
    "createCylinderLayer(video, init)",
    "createEquirectLayer(HTMLVideoElement video, XRMediaEquirectLayerInit init)",
    "createEquirectLayer(video)",
    "createEquirectLayer(video, init)",
    "createQuadLayer(HTMLVideoElement video, XRMediaQuadLayerInit init)",
    "createQuadLayer(video)",
    "createQuadLayer(video, init)",
    "session"
  ],
  "XRMediaBinding/XRMediaBinding(session)": [
    "session"
  ],
  "XRMediaBinding/constructor(session)": [
    "session"
  ],
  "XRMediaBinding/createCylinderLayer(video)": [
    "init",
    "video"
  ],
  "XRMediaBinding/createCylinderLayer(video, init)": [
    "init",
    "video"
  ],
  "XRMediaBinding/createEquirectLayer(video)": [
    "init",
    "video"
  ],
  "XRMediaBinding/createEquirectLayer(video, init)": [
    "init",
    "video"
  ],
  "XRMediaBinding/createQuadLayer(video)": [
    "init",
    "video"
  ],
  "XRMediaBinding/createQuadLayer(video, init)": [
    "init",
    "video"
  ],
  "XRMediaCylinderLayerInit": [
    "aspectRatio",
    "centralAngle",
    "radius",
    "transform"
  ],
  "XRMediaEquirectLayerInit": [
    "centralHorizontalAngle",
    "lowerVerticalAngle",
    "radius",
    "transform",
    "upperVerticalAngle"
  ],
  "XRMediaLayerInit": [
    "invertStereo",
    "layout",
    "space"
  ],
  "XRMediaQuadLayerInit": [
    "height",
    "transform",
    "width"
  ],
  "XRPermissionDescriptor": [
    "mode",
    "optionalFeatures",
    "requiredFeatures"
  ],
  "XRPermissionStatus": [
    "granted"
  ],
  "XRPose": [
    "angularVelocity",
    "computed offset",
    "emulatedPosition",
    "linearVelocity",
    "transform"
  ],
  "XRProjectionLayer": [
    "colortextures for secondary views",
    "depthstenciltextures for secondary views",
    "fixedFoveation",
    "ignoreDepthValues",
    "textureArrayLength",
    "textureHeight",
    "textureWidth"
  ],
  "XRProjectionLayerInit": [
    "colorFormat",
    "depthFormat",
    "scaleFactor",
    "textureType"
  ],
  "XRQuadLayer": [
    "height",
    "onredraw",
    "space",
    "transform",
    "width"
  ],
  "XRQuadLayerInit": [
    "height",
    "textureType",
    "transform",
    "width"
  ],
  "XRRay": [
    "XRRay()",
    "XRRay(origin)",
    "XRRay(origin, direction)",
    "XRRay(transform)",
    "constructor()",
    "constructor(origin)",
    "constructor(origin, direction)",
    "constructor(transform)",
    "direction",
    "matrix",
    "obtain the matrix",
    "origin"
  ],
  "XRRay/XRRay()": [
    "direction",
    "origin"
  ],
  "XRRay/XRRay(origin)": [
    "direction",
    "origin"
  ],
  "XRRay/XRRay(origin, direction)": [
    "direction",
    "origin"
  ],
  "XRRay/XRRay(transform)": [
    "transform"
  ],
  "XRRay/constructor()": [
    "direction",
    "origin"
  ],
  "XRRay/constructor(origin)": [
    "direction",
    "origin"
  ],
  "XRRay/constructor(origin, direction)": [
    "direction",
    "origin"
  ],
  "XRRay/constructor(transform)": [
    "transform"
  ],
  "XRRayDirectionInit": [
    "w",
    "x",
    "y",
    "z"
  ],
  "XRReferenceSpace": [
    "getOffsetReferenceSpace(originOffset)",
    "onreset",
    "reset",
    "type"
  ],
  "XRReferenceSpace/getOffsetReferenceSpace(originOffset)": [
    "originOffset"
  ],
  "XRReferenceSpaceEvent": [
    "XRReferenceSpaceEvent(type, eventInitDict)",
    "constructor",
    "constructor(type, eventInitDict)",
    "referenceSpace",
    "transform"
  ],
  "XRReferenceSpaceEvent/XRReferenceSpaceEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRReferenceSpaceEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRReferenceSpaceEventInit": [
    "referenceSpace",
    "transform"
  ],
  "XRReferenceSpaceType": [
    "\"bounded-floor\"",
    "\"local\"",
    "\"local-floor\"",
    "\"unbounded\"",
    "\"viewer\"",
    "bounded-floor",
    "local",
    "local-floor",
    "unbounded",
    "viewer"
  ],
  "XRRenderState": [
    "baseLayer",
    "composition enabled",
    "depthFar",
    "depthNear",
    "inlineVerticalFieldOfView",
    "layers",
    "output canvas"
  ],
  "XRRenderStateInit": [
    "baseLayer",
    "depthFar",
    "depthNear",
    "inlineVerticalFieldOfView",
    "layers"
  ],
  "XRRigidTransform": [
    "XRRigidTransform()",
    "XRRigidTransform(position)",
    "XRRigidTransform(position, orientation)",
    "constructor()",
    "constructor(position)",
    "constructor(position, orientation)",
    "internal matrix",
    "inverse",
    "matrix",
    "obtain the matrix",
    "orientation",
    "position"
  ],
  "XRRigidTransform/XRRigidTransform()": [
    "orientation",
    "position"
  ],
  "XRRigidTransform/XRRigidTransform(position)": [
    "orientation",
    "position"
  ],
  "XRRigidTransform/XRRigidTransform(position, orientation)": [
    "orientation",
    "position"
  ],
  "XRRigidTransform/constructor()": [
    "orientation",
    "position"
  ],
  "XRRigidTransform/constructor(position)": [
    "orientation",
    "position"
  ],
  "XRRigidTransform/constructor(position, orientation)": [
    "orientation",
    "position"
  ],
  "XRSession": [
    "add input source",
    "animation frame",
    "cancelAnimationFrame(handle)",
    "change input source",
    "domOverlayState",
    "end",
    "end()",
    "environmentBlendMode",
    "frameRate",
    "frameratechange",
    "inputSources",
    "inputsourceschange",
    "interactionMode",
    "internal nominal framerate",
    "internal target framerate",
    "list of frame updates",
    "list of views",
    "mode",
    "onend",
    "onframeratechange",
    "oninputsourceschange",
    "onselect",
    "onselectend",
    "onselectstart",
    "onsqueeze",
    "onsqueezeend",
    "onsqueezestart",
    "onvisibilitychange",
    "promise resolved",
    "remove input source",
    "renderState",
    "requestAnimationFrame(callback)",
    "requestHitTestSource(options)",
    "requestHitTestSourceForTransientInput(options)",
    "requestReferenceSpace(type)",
    "select",
    "selectend",
    "selectstart",
    "set of active hit test sources",
    "set of active hit test sources for transient input",
    "set of granted features",
    "squeeze",
    "squeezeend",
    "squeezestart",
    "supportedFrameRates",
    "updateRenderState()",
    "updateRenderState(newState)",
    "updateRenderState(state)",
    "updateTargetFrameRate(rate)",
    "viewer reference space",
    "visibility state",
    "visibilityState",
    "visibilitychange",
    "xr device"
  ],
  "XRSession/cancelAnimationFrame(handle)": [
    "handle"
  ],
  "XRSession/requestAnimationFrame(callback)": [
    "callback"
  ],
  "XRSession/requestHitTestSource(options)": [
    "options"
  ],
  "XRSession/requestHitTestSourceForTransientInput(options)": [
    "options"
  ],
  "XRSession/requestReferenceSpace(type)": [
    "type"
  ],
  "XRSession/updateRenderState()": [
    "state"
  ],
  "XRSession/updateRenderState(state)": [
    "state"
  ],
  "XRSession/updateTargetFrameRate(rate)": [
    "rate"
  ],
  "XRSessionEvent": [
    "XRSessionEvent(type, eventInitDict)",
    "constructor",
    "constructor(type, eventInitDict)",
    "session"
  ],
  "XRSessionEvent/XRSessionEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRSessionEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRSessionEventInit": [
    "session"
  ],
  "XRSessionInit": [
    "domOverlay",
    "optionalFeatures",
    "requiredFeatures"
  ],
  "XRSessionMode": [
    "\"immersive-ar\"",
    "\"immersive-vr\"",
    "\"inline\"",
    "immersive-ar",
    "immersive-vr",
    "inline"
  ],
  "XRSessionSupportedPermissionDescriptor": [
    "mode"
  ],
  "XRSpace": [
    "coordinate system",
    "effective origin",
    "native origin",
    "origin offset",
    "session"
  ],
  "XRSubImage": [
    "viewport"
  ],
  "XRSystem": [
    "devicechange",
    "isSessionSupported(mode)",
    "ondevicechange",
    "requestSession(mode)",
    "requestSession(mode, options)"
  ],
  "XRSystem/isSessionSupported(mode)": [
    "mode"
  ],
  "XRSystem/requestSession(mode)": [
    "mode",
    "options"
  ],
  "XRSystem/requestSession(mode, options)": [
    "mode",
    "options"
  ],
  "XRTargetRayMode": [
    "\"gaze\"",
    "\"screen\"",
    "\"tracked-pointer\"",
    "gaze",
    "screen",
    "tracked-pointer"
  ],
  "XRTextureType": [
    "\"texture\"",
    "\"texture-array\"",
    "texture",
    "texture-array"
  ],
  "XRTransientInputHitTestOptionsInit": [
    "effective entitytypes",
    "effective offsetray",
    "entityTypes",
    "offsetRay",
    "profile"
  ],
  "XRTransientInputHitTestResult": [
    "frame",
    "inputSource",
    "results"
  ],
  "XRTransientInputHitTestSource": [
    "active",
    "cancel()",
    "entity types",
    "offset ray",
    "profile",
    "session"
  ],
  "XRView": [
    "eye",
    "frame",
    "internal projection matrix",
    "isFirstPersonObserver",
    "obtain a scaled viewport",
    "obtain the projection matrix",
    "projectionMatrix",
    "recommendedViewportScale",
    "requestViewportScale(scale)",
    "session",
    "transform",
    "underlying view"
  ],
  "XRView/requestViewportScale(scale)": [
    "scale"
  ],
  "XRViewerPose": [
    "views"
  ],
  "XRViewport": [
    "height",
    "width",
    "x",
    "y"
  ],
  "XRVisibilityState": [
    "\"hidden\"",
    "\"visible\"",
    "\"visible-blurred\"",
    "hidden",
    "visible",
    "visible-blurred"
  ],
  "XRWebGLBinding": [
    "XRWebGLBinding(session, context)",
    "constructor(session, context)",
    "context",
    "createCubeLayer()",
    "createCubeLayer(XRCubeLayerInit init)",
    "createCubeLayer(init)",
    "createCylinderLayer()",
    "createCylinderLayer(XRCylinderLayerInit init)",
    "createCylinderLayer(init)",
    "createEquirectLayer()",
    "createEquirectLayer(XREquirectLayerLayerInit init)",
    "createEquirectLayer(init)",
    "createProjectionLayer()",
    "createProjectionLayer(init)",
    "createProjectionLayer(optional XRProjectionLayerInit init)",
    "createQuadLayer()",
    "createQuadLayer(XRQuadLayerInit init)",
    "createQuadLayer(init)",
    "getSubImage(XRCompositionLayer layer, XRFrame frame, optional XREye eye = \"none\")",
    "getSubImage(layer, frame)",
    "getSubImage(layer, frame, eye)",
    "getViewSubImage(XRProjectionLayer layer, XRView view)",
    "getViewSubImage(layer, view)",
    "nativeProjectionScaleFactor",
    "session",
    "usesDepthValues"
  ],
  "XRWebGLBinding/XRWebGLBinding(session, context)": [
    "context",
    "session"
  ],
  "XRWebGLBinding/constructor(session, context)": [
    "context",
    "session"
  ],
  "XRWebGLBinding/createCubeLayer()": [
    "init"
  ],
  "XRWebGLBinding/createCubeLayer(init)": [
    "init"
  ],
  "XRWebGLBinding/createCylinderLayer()": [
    "init"
  ],
  "XRWebGLBinding/createCylinderLayer(init)": [
    "init"
  ],
  "XRWebGLBinding/createEquirectLayer()": [
    "init"
  ],
  "XRWebGLBinding/createEquirectLayer(init)": [
    "init"
  ],
  "XRWebGLBinding/createProjectionLayer()": [
    "init"
  ],
  "XRWebGLBinding/createProjectionLayer(init)": [
    "init"
  ],
  "XRWebGLBinding/createQuadLayer()": [
    "init"
  ],
  "XRWebGLBinding/createQuadLayer(init)": [
    "init"
  ],
  "XRWebGLBinding/getSubImage(layer, frame)": [
    "eye",
    "frame",
    "layer"
  ],
  "XRWebGLBinding/getSubImage(layer, frame, eye)": [
    "eye",
    "frame",
    "layer"
  ],
  "XRWebGLBinding/getViewSubImage(layer, view)": [
    "layer",
    "view"
  ],
  "XRWebGLLayer": [
    "XRWebGLLayer(session, context)",
    "XRWebGLLayer(session, context, layerInit)",
    "antialias",
    "composition enabled",
    "constructor(session, context)",
    "constructor(session, context, layerInit)",
    "context",
    "fixedFoveation",
    "framebuffer",
    "framebufferHeight",
    "framebufferWidth",
    "getNativeFramebufferScaleFactor(session)",
    "getViewport(view)",
    "ignoreDepthValues",
    "session",
    "target framebuffer"
  ],
  "XRWebGLLayer/XRWebGLLayer(session, context)": [
    "context",
    "layerInit",
    "session"
  ],
  "XRWebGLLayer/XRWebGLLayer(session, context, layerInit)": [
    "context",
    "layerInit",
    "session"
  ],
  "XRWebGLLayer/constructor(session, context)": [
    "context",
    "layerInit",
    "session"
  ],
  "XRWebGLLayer/constructor(session, context, layerInit)": [
    "context",
    "layerInit",
    "session"
  ],
  "XRWebGLLayer/getNativeFramebufferScaleFactor(session)": [
    "session"
  ],
  "XRWebGLLayer/getViewport(view)": [
    "view"
  ],
  "XRWebGLLayerInit": [
    "alpha",
    "antialias",
    "depth",
    "framebufferScaleFactor",
    "ignoreDepthValues",
    "stencil"
  ],
  "XRWebGLSubImage": [
    "colorTexture",
    "depthStencilTexture",
    "imageIndex",
    "textureHeight",
    "textureWidth"
  ],
  "XSLTProcessor": [
    "XSLTProcessor()",
    "clearParameters",
    "clearParameters()",
    "constructor",
    "constructor()",
    "getParameter",
    "getParameter(namespaceURI, localName)",
    "importStylesheet",
    "importStylesheet(style)",
    "removeParameter",
    "removeParameter(namespaceURI, localName)",
    "reset",
    "reset()",
    "setParameter",
    "setParameter(namespaceURI, localName, value)",
    "transformToDocument",
    "transformToDocument(source)",
    "transformToFragment",
    "transformToFragment(source, output)"
  ],
  "XSLTProcessor/getParameter(namespaceURI, localName)": [
    "localName",
    "namespaceURI"
  ],
  "XSLTProcessor/importStylesheet(style)": [
    "style"
  ],
  "XSLTProcessor/removeParameter(namespaceURI, localName)": [
    "localName",
    "namespaceURI"
  ],
  "XSLTProcessor/setParameter(namespaceURI, localName, value)": [
    "localName",
    "namespaceURI",
    "value"
  ],
  "XSLTProcessor/transformToDocument(source)": [
    "source"
  ],
  "XSLTProcessor/transformToFragment(source, output)": [
    "output",
    "source"
  ],
  "a": [
    "charset",
    "coords",
    "download",
    "href",
    "hreflang",
    "methods",
    "name",
    "ping",
    "referrerpolicy",
    "rel",
    "rev",
    "shape",
    "target",
    "type",
    "urn",
    "xlink:actuate",
    "xlink:href",
    "xlink:title"
  ],
  "abbr": [
    "title"
  ],
  "accent-color": [
    "<color>",
    "auto"
  ],
  "action": [
    "icon resource",
    "icon url",
    "name",
    "title"
  ],
  "agent": [
    "event loop"
  ],
  "align-content": [
    "baseline",
    "center",
    "end",
    "first",
    "first baseline",
    "flex-end",
    "flex-start",
    "last",
    "last baseline",
    "normal",
    "space-around",
    "space-between",
    "space-evenly",
    "start",
    "stretch"
  ],
  "align-items": [
    "auto",
    "baseline",
    "center",
    "first",
    "first baseline",
    "flex-end",
    "flex-start",
    "last",
    "last baseline",
    "participates in baseline alignment",
    "stretch"
  ],
  "align-self": [
    "auto",
    "baseline",
    "center",
    "end",
    "first",
    "first baseline",
    "flex-end",
    "flex-start",
    "last",
    "last baseline",
    "normal",
    "participates in baseline alignment",
    "self-end",
    "self-start",
    "start",
    "stretch"
  ],
  "alignment-baseline": [
    "alphabetic",
    "baseline",
    "central",
    "ideographic",
    "mathematical",
    "middle",
    "text-after-edge",
    "text-before-edge",
    "text-bottom",
    "text-top"
  ],
  "all": [
    "inherit",
    "initial",
    "revert",
    "revert-layer",
    "unset"
  ],
  "altGlyph": [
    "dx",
    "dy",
    "format",
    "glyphref",
    "rotate",
    "x",
    "xlink:href",
    "y"
  ],
  "altGlyphDef": [
    "dx",
    "dy",
    "format",
    "glyphref",
    "x",
    "xlink:href",
    "y"
  ],
  "animate": [
    "onbegin",
    "onend",
    "onrepeat"
  ],
  "animateMotion": [
    "calcmode",
    "keypoints",
    "onbegin",
    "onend",
    "onrepeat",
    "origin",
    "path",
    "rotate",
    "xlink:href"
  ],
  "animateTransform": [
    "onbegin",
    "onend",
    "onrepeat",
    "type"
  ],
  "animation": [
    "associated effect",
    "current time",
    "document for timing",
    "hold time",
    "reset an animation's pending tasks",
    "set the associated effect of an animation",
    "set the current time",
    "set the timeline of an animation",
    "silently set the current time",
    "start time"
  ],
  "animation effect": [
    "active phase",
    "after phase",
    "before phase",
    "idle phase"
  ],
  "animation-delay": [
    "<time>"
  ],
  "animation-direction": [
    "alternate",
    "alternate-reverse",
    "normal",
    "reverse"
  ],
  "animation-duration": [
    "<time [0s,âˆž]>",
    "<time>"
  ],
  "animation-fill-mode": [
    "backwards",
    "both",
    "forwards",
    "none"
  ],
  "animation-iteration-count": [
    "<number [0,âˆž]>",
    "<number>",
    "infinite"
  ],
  "animation-name": [
    "<keyframes-name>",
    "none"
  ],
  "animation-play-state": [
    "paused",
    "running"
  ],
  "animationevent": [
    "animationcancel",
    "animationend",
    "animationiteration",
    "animationstart"
  ],
  "animator definition": [
    "stateful flag"
  ],
  "annotated types": [
    "inner type"
  ],
  "appearance": [
    "<compat-auto>",
    "<compat-special>",
    "auto",
    "button",
    "checkbox",
    "listbox",
    "menulist",
    "menulist-button",
    "meter",
    "none",
    "progress-bar",
    "push-button",
    "radio",
    "searchfield",
    "slider-horizontal",
    "square-button",
    "textarea",
    "textfield"
  ],
  "application manifest": [
    "processing extension-point"
  ],
  "arc": [
    "ccw",
    "cw",
    "large",
    "small"
  ],
  "area": [
    "alt",
    "coords",
    "download",
    "href",
    "hreflang",
    "nohref",
    "ping",
    "referrerpolicy",
    "rel",
    "shape",
    "target",
    "type"
  ],
  "area/shape": [
    "circle state",
    "default state",
    "polygon state",
    "rectangle state"
  ],
  "ascent-override!!descriptor": [
    "<percentage>",
    "normal"
  ],
  "aspect-ratio": [
    "<ratio>",
    "auto",
    "auto && <ratio>"
  ],
  "assertionCreationData": [
    "authenticatordataresult",
    "clientdatajsonresult",
    "clientextensionresults",
    "credentialidresult",
    "signatureresult",
    "userhandleresult"
  ],
  "attr()": [
    "<dimension-unit>",
    "angle",
    "color",
    "flex",
    "frequency",
    "ident",
    "length",
    "number",
    "percentage",
    "string",
    "substitution value",
    "time",
    "url"
  ],
  "audio": [
    "autoplay",
    "controls",
    "crossorigin",
    "loop",
    "muted",
    "preload",
    "src"
  ],
  "audio/crossorigin": [
    "anonymous",
    "use-credentials"
  ],
  "audio/preload": [
    "auto",
    "metadata",
    "none"
  ],
  "authenticator": [
    "credentials map"
  ],
  "authenticator data": [
    "perform the following steps to generate an authenticator data structure"
  ],
  "background-attachment": [
    "fixed",
    "local",
    "scroll"
  ],
  "background-clip": [
    "<box>",
    "border",
    "border-box",
    "content-box",
    "padding-box",
    "text"
  ],
  "background-image": [
    "<uri>",
    "none"
  ],
  "background-origin": [
    "border-box",
    "content-box",
    "padding-box"
  ],
  "background-position": [
    "<length>",
    "<percentage>",
    "bottom",
    "center",
    "left",
    "right",
    "top"
  ],
  "background-repeat": [
    "no-repeat",
    "repeat",
    "repeat-x",
    "repeat-y",
    "round",
    "space"
  ],
  "background-size": [
    "<length-percentage [0,âˆž]>",
    "auto",
    "contain",
    "cover"
  ],
  "base": [
    "href",
    "target"
  ],
  "base-palette": [
    "<integer>",
    "dark",
    "light"
  ],
  "baseline-shift": [
    "<length>",
    "<percentage>",
    "baseline",
    "bottom",
    "center",
    "sub",
    "super",
    "top"
  ],
  "baseline-source": [
    "auto",
    "first",
    "last"
  ],
  "basic URL parser": [
    "authority state",
    "file host state",
    "file slash state",
    "file state",
    "fragment state",
    "host state",
    "hostname state",
    "no scheme state",
    "opaque path state",
    "path or authority state",
    "path start state",
    "path state",
    "port state",
    "query state",
    "relative slash state",
    "relative state",
    "scheme start state",
    "scheme state",
    "special authority ignore slashes state",
    "special authority slashes state",
    "special relative or authority state",
    "state override",
    "url"
  ],
  "blob": [
    "type"
  ],
  "blob URL": [
    "resolve"
  ],
  "blob URL entry": [
    "environment",
    "object"
  ],
  "blob url": [
    "lifetime",
    "lifetime stipulation"
  ],
  "blob url store": [
    "add an entry",
    "add an entry to the blob url store",
    "add the entry",
    "add the entry to the blob url store",
    "adding an entry to the blob url store",
    "remove an entry",
    "remove an entry from the blob url store",
    "remove the entry",
    "remove the entry from the blob url store"
  ],
  "block-ellipsis": [
    "<string>",
    "auto",
    "none"
  ],
  "block-size": [
    "contain",
    "fit-content",
    "stretch"
  ],
  "block-step-align": [
    "auto",
    "center",
    "down",
    "end",
    "nearest",
    "start",
    "up"
  ],
  "block-step-insert": [
    "margin",
    "padding"
  ],
  "blockquote": [
    "cite"
  ],
  "body": [
    "alink",
    "bgcolor",
    "bottommargin",
    "clone",
    "fully read",
    "incrementally read",
    "leftmargin",
    "length",
    "link",
    "marginheight",
    "marginwidth",
    "rightmargin",
    "source",
    "stream",
    "text",
    "topmargin",
    "vlink"
  ],
  "body with type": [
    "body",
    "type"
  ],
  "bookmark-label": [
    "<content-list>"
  ],
  "bookmark-level": [
    "<integer [1,âˆž]>",
    "<integer>",
    "none"
  ],
  "bookmark-state": [
    "closed",
    "open"
  ],
  "border": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "medium",
    "none",
    "outset",
    "ridge",
    "solid",
    "thick",
    "thin"
  ],
  "border-bottom-color": [
    "<color>",
    "transparent"
  ],
  "border-bottom-right": [
    "<length>",
    "medium",
    "thick",
    "thin"
  ],
  "border-bottom-style": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "border-bottom-width": [
    "medium",
    "thick",
    "thin"
  ],
  "border-collapse": [
    "collapse",
    "separate"
  ],
  "border-color": [
    "<color>",
    "logical",
    "transparent"
  ],
  "border-image-repeat": [
    "repeat",
    "round",
    "space",
    "stretch"
  ],
  "border-image-slice": [
    "<number [0,âˆž]>",
    "<percentage [0,âˆž]>",
    "fill"
  ],
  "border-image-width": [
    "<length-percentage [0,âˆž]>",
    "<number [0,âˆž]>",
    "auto"
  ],
  "border-left-color": [
    "<color>",
    "transparent"
  ],
  "border-left-style": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "border-left-width": [
    "<length>",
    "medium",
    "thick",
    "thin"
  ],
  "border-limit": [
    "bottom",
    "corners",
    "left",
    "right",
    "sides",
    "top"
  ],
  "border-right-color": [
    "<color>",
    "transparent"
  ],
  "border-right-style": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "border-right-width": [
    "<length>",
    "medium",
    "thick",
    "thin"
  ],
  "border-style": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "logical",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "border-top-color": [
    "<color>",
    "transparent"
  ],
  "border-top-style": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "border-top-width": [
    "<length>",
    "medium",
    "thick",
    "thin"
  ],
  "border-width": [
    "<length>",
    "logical",
    "medium",
    "thick",
    "thin"
  ],
  "bottom": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "boundary point": [
    "after",
    "before",
    "equal",
    "node",
    "offset",
    "position"
  ],
  "box": [
    "[[layoutChildMap]]",
    "box edge",
    "edge"
  ],
  "box-decoration-break": [
    "clone",
    "slice"
  ],
  "box-shadow": [
    "<color>",
    "inset",
    "none"
  ],
  "box-sizing": [
    "border-box",
    "content-box"
  ],
  "box-snap": [
    "baseline",
    "block-end",
    "block-start",
    "center",
    "first-baseline",
    "last-baseline",
    "none"
  ],
  "br": [
    "clear"
  ],
  "break-after": [
    "all",
    "always",
    "auto",
    "avoid",
    "avoid-column",
    "avoid-page",
    "avoid-region",
    "column",
    "left",
    "page",
    "recto",
    "region",
    "right",
    "verso"
  ],
  "break-before": [
    "all",
    "always",
    "auto",
    "avoid",
    "avoid-column",
    "avoid-page",
    "avoid-region",
    "column",
    "left",
    "page",
    "recto",
    "region",
    "right",
    "verso"
  ],
  "break-inside": [
    "auto",
    "avoid",
    "avoid-column",
    "avoid-page",
    "avoid-region"
  ],
  "browsing context": [
    "active window",
    "container document"
  ],
  "browsing session": [
    "storage shed"
  ],
  "bubblesArg": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "button": [
    "action",
    "autocomplete",
    "dirname",
    "disabled",
    "enctype",
    "form",
    "formaction",
    "formenctype",
    "formmethod",
    "formnovalidate",
    "formtarget",
    "method",
    "name",
    "novalidate",
    "target",
    "type",
    "value"
  ],
  "button/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "button/enctype": [
    "application/x-www-form-urlencoded",
    "multipart/form-data",
    "text/plain"
  ],
  "button/method": [
    "dialog",
    "get",
    "post"
  ],
  "button/type": [
    "button",
    "reset",
    "submit"
  ],
  "byte": [
    "percent-encode",
    "value"
  ],
  "byte sequence": [
    "length",
    "percent-decode",
    "prefix",
    "start with",
    "starts with"
  ],
  "cache batch operation": [
    "options",
    "request",
    "response",
    "type"
  ],
  "cache entry": [
    "byte-serialized origin",
    "credentials",
    "header name",
    "key",
    "max-age",
    "method",
    "url"
  ],
  "calc()": [
    "-infinity",
    "calculation",
    "e",
    "infinity",
    "nan",
    "pi"
  ],
  "calculation tree": [
    "calc-operator nodes",
    "operator nodes"
  ],
  "cancelableArg": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "canvas": [
    "height",
    "width"
  ],
  "caption": [
    "align"
  ],
  "caption-side": [
    "bottom",
    "top"
  ],
  "caret-color": [
    "auto"
  ],
  "caret-shape": [
    "auto",
    "bar",
    "block",
    "underscore"
  ],
  "circle": [
    "cx",
    "cy",
    "r"
  ],
  "clear": [
    "all",
    "block-end",
    "block-start",
    "both",
    "both-block",
    "both-inline",
    "bottom",
    "inline-end",
    "inline-start",
    "left",
    "none",
    "right",
    "top"
  ],
  "clientXAr": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "clip": [
    "<bottom>",
    "<left>",
    "<right>",
    "<top>",
    "auto",
    "rect()"
  ],
  "clip-path": [
    "fill-box",
    "stroke-box",
    "view-box"
  ],
  "clip-rule": [
    "evenodd",
    "nonzero"
  ],
  "clipPath": [
    "clippathunits",
    "height",
    "maskcontentunits",
    "maskunits",
    "width",
    "x",
    "y"
  ],
  "clipPathUnits": [
    "objectboundingbox",
    "userspaceonuse"
  ],
  "code point": [
    "utf-8 percent-encode",
    "value"
  ],
  "col": [
    "align",
    "char",
    "charoff",
    "span",
    "valign",
    "width"
  ],
  "colgroup": [
    "span"
  ],
  "collection": [
    "live collection",
    "represented by the collection",
    "static collection"
  ],
  "color()": [
    "a98-rgb",
    "b",
    "display-p3",
    "g",
    "prophoto-rgb",
    "r",
    "rec2020",
    "srgb",
    "srgb-linear",
    "x",
    "xyz",
    "xyz-d50",
    "xyz-d65",
    "y",
    "z"
  ],
  "color-interpolation-filters": [
    "auto",
    "linearrgb",
    "srgb"
  ],
  "color-profile": [
    "local",
    "name",
    "rendering-intent",
    "xlink:href"
  ],
  "color-scheme": [
    "<custom-ident>",
    "dark",
    "light",
    "normal",
    "only"
  ],
  "column-count": [
    "<integer [1,âˆž]>",
    "auto"
  ],
  "column-fill": [
    "auto",
    "balance",
    "balance-all"
  ],
  "column-gap": [
    "normal"
  ],
  "column-rule-color": [
    "<color>"
  ],
  "column-span": [
    "<integer [1,âˆž]>",
    "all",
    "auto",
    "none"
  ],
  "column-width": [
    "<length [0,âˆž]>",
    "auto",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content"
  ],
  "conic-gradient()": [
    "<angle>",
    "<position>",
    "gradient center"
  ],
  "connection": [
    "close pending flag",
    "closed",
    "credentials",
    "key",
    "object store set",
    "origin",
    "timing info",
    "version"
  ],
  "connection timing info": [
    "alpn negotiated protocol",
    "connection end time",
    "connection start time",
    "domain lookup end time",
    "domain lookup start time",
    "secure connection start time"
  ],
  "console": [
    "assert()",
    "assert(condition)",
    "assert(condition, ...data)",
    "clear()",
    "count()",
    "count(label)",
    "countReset()",
    "countReset(label)",
    "debug()",
    "debug(...data)",
    "dir()",
    "dir(item)",
    "dir(item, options)",
    "dirxml()",
    "dirxml(...data)",
    "error()",
    "error(...data)",
    "group()",
    "group(...data)",
    "groupCollapsed()",
    "groupCollapsed(...data)",
    "groupEnd()",
    "info()",
    "info(...data)",
    "log()",
    "log(...data)",
    "table()",
    "table(tabularData)",
    "table(tabularData, properties)",
    "time()",
    "time(label)",
    "timeEnd()",
    "timeEnd(label)",
    "timeLog()",
    "timeLog(label)",
    "timeLog(label, ...data)",
    "trace()",
    "trace(...data)",
    "warn()",
    "warn(...data)"
  ],
  "console/assert()": [
    "condition",
    "data"
  ],
  "console/assert(condition)": [
    "condition",
    "data"
  ],
  "console/assert(condition, ...data)": [
    "condition",
    "data"
  ],
  "console/count()": [
    "label"
  ],
  "console/count(label)": [
    "label"
  ],
  "console/countReset()": [
    "label"
  ],
  "console/countReset(label)": [
    "label"
  ],
  "console/debug()": [
    "data"
  ],
  "console/debug(...data)": [
    "data"
  ],
  "console/dir()": [
    "item",
    "options"
  ],
  "console/dir(item)": [
    "item",
    "options"
  ],
  "console/dir(item, options)": [
    "item",
    "options"
  ],
  "console/dirxml()": [
    "data"
  ],
  "console/dirxml(...data)": [
    "data"
  ],
  "console/error()": [
    "data"
  ],
  "console/error(...data)": [
    "data"
  ],
  "console/group()": [
    "data"
  ],
  "console/group(...data)": [
    "data"
  ],
  "console/groupCollapsed()": [
    "data"
  ],
  "console/groupCollapsed(...data)": [
    "data"
  ],
  "console/info()": [
    "data"
  ],
  "console/info(...data)": [
    "data"
  ],
  "console/log()": [
    "data"
  ],
  "console/log(...data)": [
    "data"
  ],
  "console/table()": [
    "properties",
    "tabularData"
  ],
  "console/table(tabularData)": [
    "properties",
    "tabularData"
  ],
  "console/table(tabularData, properties)": [
    "properties",
    "tabularData"
  ],
  "console/time()": [
    "label"
  ],
  "console/time(label)": [
    "label"
  ],
  "console/timeEnd()": [
    "label"
  ],
  "console/timeEnd(label)": [
    "label"
  ],
  "console/timeLog()": [
    "data",
    "label"
  ],
  "console/timeLog(label)": [
    "data",
    "label"
  ],
  "console/timeLog(label, ...data)": [
    "data",
    "label"
  ],
  "console/trace()": [
    "data"
  ],
  "console/trace(...data)": [
    "data"
  ],
  "console/warn()": [
    "data"
  ],
  "console/warn(...data)": [
    "data"
  ],
  "constrainable object": [
    "[[Capabilities]]",
    "[[Constraints]]",
    "[[Settings]]"
  ],
  "contain": [
    "content",
    "inline-size",
    "layout",
    "none",
    "paint",
    "size",
    "strict",
    "style"
  ],
  "contain-intrinsic-block-size": [
    "<length>",
    "auto && <length>",
    "auto <length>",
    "none"
  ],
  "contain-intrinsic-height": [
    "<length>",
    "auto && <length>",
    "auto <length>",
    "none"
  ],
  "contain-intrinsic-inline-size": [
    "<length>",
    "auto && <length>",
    "auto <length>",
    "none"
  ],
  "contain-intrinsic-size": [
    "<length>",
    "auto && <length>",
    "auto <length>",
    "none"
  ],
  "contain-intrinsic-width": [
    "<length>",
    "auto && <length>",
    "auto <length>",
    "none"
  ],
  "container-name": [
    "<custom-ident>",
    "none"
  ],
  "container-type": [
    "inline-size",
    "none",
    "size",
    "style"
  ],
  "content": [
    "/ [ <string> | <counter> ]+",
    "<content-list>",
    "<content-replacement>",
    "<counter>",
    "<string>",
    "<uri>",
    "attr(x)",
    "close-quote",
    "contents",
    "leader()",
    "no-close-quote",
    "no-open-quote",
    "none",
    "normal",
    "open-quote"
  ],
  "content()": [
    "after",
    "before",
    "first-letter",
    "marker",
    "text"
  ],
  "content-visibility": [
    "auto",
    "hidden",
    "visible"
  ],
  "continue": [
    "-webkit-discard",
    "auto",
    "discard",
    "fragments",
    "overflow",
    "paginate"
  ],
  "contrast ratio": [
    "high contrast ratio"
  ],
  "core-attributes": [
    "autofocus",
    "class",
    "id",
    "lang",
    "style",
    "tabindex",
    "xml:space"
  ],
  "corner-shape": [
    "angle",
    "round"
  ],
  "counter()": [
    "list-item"
  ],
  "counter-increment": [
    "<counter-name> <integer>?",
    "list-item",
    "none"
  ],
  "counter-reset": [
    "<counter-name> <integer>?",
    "<reversed-counter-name> <integer>?",
    "list-item",
    "none"
  ],
  "counter-set": [
    "<counter-name> <integer>?",
    "list-item",
    "none"
  ],
  "counter-set counter-increment": [
    "<counter-name> <integer>?",
    "none"
  ],
  "counters()": [
    "list-item"
  ],
  "create": [
    "candidate authenticator",
    "selected authenticator"
  ],
  "credential": [
    "credential type",
    "effective"
  ],
  "credential id": [
    "looking up"
  ],
  "credential store": [
    "Modify a credential",
    "Retrieve a list of credentials",
    "Store a credential"
  ],
  "credential type registry": [
    "appropriate interface object",
    "credential type",
    "options member identifier"
  ],
  "credentialCreationData": [
    "attestationconveyancepreferenceoption",
    "attestationobjectresult",
    "clientdatajsonresult",
    "clientextensionresults"
  ],
  "css": [
    "ignored",
    "invalid"
  ],
  "cssstyledeclaration": [
    "cssText"
  ],
  "cubic-bezier-easing-function": [
    "cubic-bezier()",
    "ease",
    "ease-in",
    "ease-in-out",
    "ease-out"
  ],
  "cue-after": [
    "<uri>"
  ],
  "cue-before": [
    "<uri>"
  ],
  "cursor": [
    "<url-set>",
    "alias",
    "all-scroll",
    "auto",
    "cell",
    "col-resize",
    "context-menu",
    "copy",
    "crosshair",
    "default",
    "direction",
    "e-resize",
    "effective key",
    "effective object store",
    "ew-resize",
    "got value flag",
    "grab",
    "grabbing",
    "help",
    "key",
    "key only flag",
    "move",
    "n-resize",
    "ne-resize",
    "nesw-resize",
    "no-drop",
    "none",
    "not-allowed",
    "ns-resize",
    "nw-resize",
    "nwse-resize",
    "object store position",
    "pointer",
    "position",
    "progress",
    "range",
    "request",
    "row-resize",
    "s-resize",
    "se-resize",
    "source",
    "sw-resize",
    "text",
    "transaction",
    "value",
    "vertical-text",
    "w-resize",
    "wait",
    "x",
    "xlink:href",
    "y",
    "zoom-in",
    "zoom-out"
  ],
  "custom element definition": [
    "constructor",
    "disable shadow",
    "local name",
    "name"
  ],
  "data": [
    "value"
  ],
  "data: URL struct": [
    "body",
    "mime type"
  ],
  "database": [
    "name",
    "upgrade transaction",
    "version"
  ],
  "datatransfer-dropeffect": [
    "copy",
    "link",
    "move",
    "none"
  ],
  "datatransfer-effectallowed": [
    "all",
    "copy",
    "copyLink",
    "copyMove",
    "link",
    "linkMove",
    "move",
    "none",
    "uninitialized"
  ],
  "default asynchronous iterator object": [
    "is finished",
    "kind",
    "ongoing promise",
    "target"
  ],
  "default iterator object": [
    "index",
    "kind",
    "target"
  ],
  "del": [
    "cite",
    "datetime"
  ],
  "descent-override!!descriptor": [
    "<percentage>",
    "normal"
  ],
  "destination": [
    "translate"
  ],
  "detailArg": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "details": [
    "open"
  ],
  "dfn": [
    "title"
  ],
  "dialog": [
    "open"
  ],
  "dictionary": [
    "inherit"
  ],
  "dictionary member": [
    "default value",
    "optional",
    "required"
  ],
  "direction": [
    "ltr",
    "rtl"
  ],
  "directive": [
    "initialization",
    "inline check",
    "name",
    "navigation response check",
    "post-request check",
    "pre-navigation check",
    "pre-request check",
    "value",
    "webrtc pre-connect check"
  ],
  "directory entry": [
    "children"
  ],
  "discard": [
    "onbegin",
    "onend",
    "onrepeat"
  ],
  "display": [
    "block",
    "contents",
    "flex",
    "flow",
    "flow-root",
    "grid",
    "inline",
    "inline-block",
    "inline-flex",
    "inline-grid",
    "inline-table",
    "layout()",
    "list-item",
    "none",
    "ruby",
    "ruby-base",
    "ruby-base-container",
    "ruby-text",
    "ruby-text-container",
    "run-in",
    "table",
    "table-caption",
    "table-cell",
    "table-column",
    "table-column-group",
    "table-footer-group",
    "table-header-group",
    "table-row",
    "table-row-group"
  ],
  "display mode": [
    "browser",
    "fullscreen",
    "minimal-ui",
    "standalone"
  ],
  "div": [
    "align"
  ],
  "dl": [
    "compact"
  ],
  "document": [
    "doctype"
  ],
  "document animator definition": [
    "stateful flag"
  ],
  "document layout definition": [
    "child input properties",
    "input properties",
    "layout options"
  ],
  "document load timing info": [
    "DOM complete time",
    "DOM content loaded event end time",
    "DOM content loaded event start time",
    "DOM interactive time",
    "load event end time",
    "load event start time",
    "navigation start time"
  ],
  "document paint definition": [
    "input argument syntaxes",
    "input properties",
    "paintrenderingcontext2dsettings object"
  ],
  "document unload timing info": [
    "unload event end time",
    "unload event start time"
  ],
  "dominant-baseline": [
    "alphabetic",
    "auto",
    "central",
    "hanging",
    "ideographic",
    "mathematical",
    "middle",
    "text-bottom",
    "text-top"
  ],
  "domtokenlist": [
    "supports",
    "value"
  ],
  "easing-function": [
    "linear"
  ],
  "edgeMode": [
    "duplicate",
    "wrap"
  ],
  "effective overload set tuple": [
    "callable"
  ],
  "element": [
    "forwarded part name list",
    "id",
    "part name list",
    "part name map"
  ],
  "ellipse": [
    "cx",
    "cy",
    "rx",
    "ry"
  ],
  "embed": [
    "align",
    "height",
    "hspace",
    "name",
    "src",
    "type",
    "vspace",
    "width"
  ],
  "embedder policy": [
    "report only reporting endpoint",
    "report only value",
    "reporting endpoint",
    "value"
  ],
  "embedder policy value": [
    "credentialless",
    "require-corp",
    "unsafe-none"
  ],
  "empty-cells": [
    "hide",
    "show"
  ],
  "encoding": [
    "label",
    "name"
  ],
  "endpoint": [
    "failures",
    "name",
    "url"
  ],
  "endpointNumber": [
    "endpointNumber(alternate, endpointNumber, direction)"
  ],
  "entry": [
    "name",
    "parent",
    "query access",
    "request access",
    "resolve",
    "the same as"
  ],
  "entry list": [
    "create an entry",
    "entry"
  ],
  "entry list/entry": [
    "name",
    "value"
  ],
  "env()": [
    "safe-area-inset-bottom",
    "safe-area-inset-left",
    "safe-area-inset-right",
    "safe-area-inset-top",
    "viewport-segment-bottom",
    "viewport-segment-height",
    "viewport-segment-left",
    "viewport-segment-right",
    "viewport-segment-top",
    "viewport-segment-width"
  ],
  "environment": [
    "active service worker",
    "creation url",
    "execution ready flag",
    "id",
    "target browsing context",
    "top-level creation url",
    "top-level origin"
  ],
  "environment settings object": [
    "api base url",
    "api url character encoding",
    "browsing session",
    "cross-origin isolated capability",
    "global object",
    "module map",
    "origin",
    "policy container",
    "realm",
    "realm execution context",
    "responsible event loop",
    "service worker object map",
    "service worker registration object map",
    "time origin"
  ],
  "event": [
    "bubbles",
    "cancelable",
    "composed",
    "currentTarget",
    "isTrusted",
    "type"
  ],
  "event listener": [
    "callback",
    "capture",
    "once",
    "passive",
    "removed",
    "signal",
    "type"
  ],
  "exception": [
    "created",
    "error name",
    "message",
    "throw"
  ],
  "extended attribute": [
    "takes a named argument list",
    "takes a wildcard",
    "takes an argument list",
    "takes an identifier",
    "takes an identifier list",
    "takes no arguments"
  ],
  "extended attributes": [
    "applicable to types"
  ],
  "external application resource": [
    "fingerprints",
    "id",
    "min_version",
    "platform",
    "url"
  ],
  "feBlend": [
    "in2",
    "mode",
    "no-composite"
  ],
  "feColorMatrix": [
    "type",
    "values"
  ],
  "feComponentTransfer": [
    "amplitude",
    "exponent",
    "intercept",
    "offset",
    "slope",
    "tablevalues",
    "type"
  ],
  "feComposite": [
    "in2",
    "k1",
    "k2",
    "k3",
    "k4",
    "operator"
  ],
  "feComposite/operator": [
    "arithmetic",
    "atop",
    "in",
    "lighter",
    "out",
    "over",
    "xor"
  ],
  "feConvolveMatrix": [
    "bias",
    "divisor",
    "edgemode",
    "kernelmatrix",
    "kernelunitlength",
    "order",
    "preservealpha",
    "targetx",
    "targety"
  ],
  "feDiffuseLighting": [
    "diffuseconstant",
    "kernelunitlength",
    "surfacescale"
  ],
  "feDisplacementMap": [
    "in2",
    "scale",
    "xchannelselector",
    "ychannelselector"
  ],
  "feDistantLight": [
    "azimuth",
    "elevation"
  ],
  "feDropShadow": [
    "dx",
    "dy",
    "stddeviation"
  ],
  "feGaussianBlur": [
    "edgemode",
    "stddeviation"
  ],
  "feGaussianBlur/edgeMode": [
    "duplicate",
    "wrap"
  ],
  "feImage": [
    "crossorigin",
    "href",
    "preserveaspectratio",
    "xlink:href"
  ],
  "feMorphology": [
    "operator",
    "radius"
  ],
  "feOffset": [
    "dx",
    "dy"
  ],
  "fePointLight": [
    "x",
    "y",
    "z"
  ],
  "feSpecularLighting": [
    "kernelunitlength",
    "specularconstant",
    "specularexponent",
    "surfacescale"
  ],
  "feSpotLight": [
    "limitingconeangle",
    "pointsatx",
    "pointsaty",
    "pointsatz",
    "specularexponent",
    "x",
    "y",
    "z"
  ],
  "feTurbulence": [
    "basefrequency",
    "numoctaves",
    "seed",
    "stitchtiles",
    "type"
  ],
  "feature descriptor": [
    "depth-sorted-layers",
    "dom-overlay",
    "hand-tracking",
    "layers"
  ],
  "fetch": [
    "fetch group",
    "processearlyhintsresponse",
    "processrequestbodychunklength",
    "processrequestendofbody",
    "processresponse",
    "processresponseconsumebody",
    "processresponseendofbody",
    "resumed",
    "suspend",
    "useparallelqueue"
  ],
  "fetch controller": [
    "abort",
    "extract full timing info given a fetch controller controller:",
    "full timing info",
    "report timing",
    "report timing steps",
    "state",
    "terminate"
  ],
  "fetch group": [
    "fetch record",
    "terminated"
  ],
  "fetch params": [
    "aborted",
    "canceled",
    "controller",
    "cross-origin isolated capability",
    "preloaded response candidate",
    "process early hints response",
    "process request body chunk length",
    "process request end-of-body",
    "process response",
    "process response consume body",
    "process response end-of-body",
    "request",
    "task destination",
    "timing info"
  ],
  "fetch record": [
    "controller",
    "request"
  ],
  "fetch timing info": [
    "end time",
    "final connection timing info",
    "final network-request start time",
    "final network-response start time",
    "final service worker start time",
    "post-redirect start time",
    "redirect end time",
    "redirect start time",
    "server-timing headers",
    "start time"
  ],
  "fetching scripts": [
    "is top-level",
    "perform the fetch"
  ],
  "fieldset": [
    "autocomplete",
    "dirname",
    "disabled",
    "form",
    "name"
  ],
  "fieldset/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "file": [
    "lastModified",
    "name"
  ],
  "file entry": [
    "binary data",
    "modification timestamp"
  ],
  "fill-origin": [
    "border-box",
    "content-box",
    "fill-box",
    "match-parent",
    "padding-box",
    "stroke-box"
  ],
  "fill-rule": [
    "evenodd",
    "nonzero"
  ],
  "filter": [
    "<url>",
    "blur()",
    "brightness()",
    "contrast()",
    "drop-shadow()",
    "filterres",
    "filterunits",
    "grayscale()",
    "height",
    "hue-rotate()",
    "in",
    "invert()",
    "opacity()",
    "primitiveunits",
    "result",
    "saturate()",
    "sepia()",
    "width",
    "x",
    "xlink:href",
    "y"
  ],
  "filter-primitive": [
    "height",
    "in",
    "result",
    "width",
    "x",
    "y"
  ],
  "filterUnits": [
    "objectboundingbox",
    "userspaceonuse"
  ],
  "filtered response": [
    "internal response"
  ],
  "fingerprint": [
    "found definition for \"type\", but nothing links to it. this is usually a spec bug!",
    "found definition for \"value\", but nothing links to it. this is usually a spec bug!"
  ],
  "firefox": [
    "devicecompat"
  ],
  "flex": [
    "-webkit-box",
    "-webkit-flex",
    "-webkit-inline-box",
    "-webkit-inline-flex",
    "<'flex-basis'>",
    "<'flex-grow'>",
    "<'flex-shrink'>",
    "flex basis",
    "flex grow factor",
    "flex shrink factor",
    "none"
  ],
  "flex-basis": [
    "auto",
    "content"
  ],
  "flex-direction": [
    "column",
    "column-reverse",
    "row",
    "row-reverse"
  ],
  "flex-grow": [
    "<number>"
  ],
  "flex-shrink": [
    "<number>"
  ],
  "flex-wrap": [
    "nowrap",
    "wrap",
    "wrap-reverse"
  ],
  "float": [
    "block-end",
    "block-start",
    "bottom",
    "footnote",
    "inline-end",
    "inline-start",
    "left",
    "none",
    "right",
    "snap-block",
    "snap-block()",
    "snap-block(<length> [, start | end | near ]?)",
    "snap-inline",
    "snap-inline()",
    "snap-inline(<length> [, left | right | near ]?)",
    "top"
  ],
  "float-reference": [
    "column",
    "inline",
    "page",
    "region"
  ],
  "focusevent": [
    "relatedTarget"
  ],
  "font": [
    "caption",
    "horiz-adv-x",
    "horiz-origin-x",
    "horiz-origin-y",
    "icon",
    "menu",
    "message-box",
    "small-caption",
    "status-bar",
    "vert-adv-y",
    "vert-origin-x",
    "vert-origin-y"
  ],
  "font-face": [
    "accent-height",
    "alphabetic",
    "ascent",
    "bbox",
    "cap-height",
    "descent",
    "font-family",
    "font-size",
    "font-stretch",
    "font-style",
    "font-variant",
    "font-weight",
    "hanging",
    "ideographic",
    "mathematical",
    "overline-position",
    "overline-thickness",
    "panose-1",
    "slope",
    "stemh",
    "stemv",
    "strikethrough-position",
    "strikethrough-thickness",
    "underline-position",
    "underline-thickness",
    "unicode-range",
    "units-per-em",
    "v-alphabetic",
    "v-hanging",
    "v-ideographic",
    "v-mathematical",
    "widths",
    "x-height"
  ],
  "font-face-name": [
    "name"
  ],
  "font-face-uri": [
    "string",
    "xlink:href"
  ],
  "font-family": [
    "cursive",
    "emoji",
    "fangsong",
    "fantasy",
    "math",
    "monospace",
    "sans-serif",
    "serif",
    "system-ui",
    "ui-monospace",
    "ui-rounded",
    "ui-sans-serif",
    "ui-serif",
    "xxx"
  ],
  "font-feature-settings": [
    "<feature-tag-value>",
    "normal"
  ],
  "font-kerning": [
    "auto",
    "none",
    "normal"
  ],
  "font-language override": [
    "normal"
  ],
  "font-language-override": [
    "<string>"
  ],
  "font-optical-sizing": [
    "auto",
    "none"
  ],
  "font-palette": [
    "<palette-identifier>",
    "dark",
    "light",
    "normal"
  ],
  "font-size": [
    "<absolute-size>",
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "<relative-size>",
    "large",
    "math",
    "medium",
    "small",
    "x-large",
    "x-small",
    "xx-large",
    "xx-small"
  ],
  "font-size-adjust": [
    "<number [0,âˆž]>",
    "<number>",
    "aspect value",
    "cap-height",
    "ch-width",
    "ex-height",
    "ex-height | cap-height | ch-width | ic-width | ic-height",
    "from-font",
    "ic-height",
    "ic-width",
    "none"
  ],
  "font-stretch": [
    "<percentage [0,âˆž]>",
    "<percentage>",
    "condensed",
    "expanded",
    "extra-condensed",
    "extra-expanded",
    "normal",
    "semi-condensed",
    "semi-expanded",
    "ultra-condensed",
    "ultra-expanded"
  ],
  "font-style": [
    "italic",
    "normal",
    "oblique",
    "oblique <angle [âˆ’90deg,90deg]>?",
    "oblique <angle>?",
    "small-caps"
  ],
  "font-synthesis-small-caps": [
    "auto",
    "none"
  ],
  "font-synthesis-style": [
    "auto",
    "none"
  ],
  "font-synthesis-weight": [
    "auto",
    "none"
  ],
  "font-variant": [
    "none",
    "normal"
  ],
  "font-variant-alternates": [
    "annotation(<feature-value-name>)",
    "character-variant(<feature-value-name>#)",
    "historical-forms",
    "normal",
    "ornaments(<feature-value-name>)",
    "styleset(<feature-value-name>#)",
    "stylistic(<feature-value-name>)",
    "swash(<feature-value-name>)"
  ],
  "font-variant-caps": [
    "all-petite-caps",
    "all-small-caps",
    "normal",
    "petite-caps",
    "small-caps",
    "titling-caps",
    "unicase"
  ],
  "font-variant-east-asian": [
    "full-width",
    "jis04",
    "jis78",
    "jis83",
    "jis90",
    "normal",
    "proportional-width",
    "ruby",
    "simplified",
    "traditional"
  ],
  "font-variant-emoji": [
    "auto",
    "emoji",
    "text",
    "unicode"
  ],
  "font-variant-ligatures": [
    "common-ligatures",
    "contextual",
    "discretionary-ligatures",
    "historical-ligatures",
    "no-common-ligatures",
    "no-contextual",
    "no-discretionary-ligatures",
    "no-historical-ligatures",
    "none",
    "normal"
  ],
  "font-variant-numeric": [
    "diagonal-fractions",
    "lining-nums",
    "normal",
    "oldstyle-nums",
    "ordinal",
    "proportional-nums",
    "slashed-zero",
    "stacked-fractions",
    "tabular-nums"
  ],
  "font-variant-position": [
    "normal",
    "sub",
    "super"
  ],
  "font-weight": [
    "<number [1,1000]>",
    "bold",
    "bolder",
    "lighter",
    "normal"
  ],
  "footnote-display": [
    "block",
    "compact",
    "inline"
  ],
  "footnote-policy": [
    "auto",
    "block",
    "line"
  ],
  "forced-color-adjust": [
    "auto",
    "none",
    "preserve-parent-color"
  ],
  "foreignObject": [
    "height",
    "width",
    "x",
    "y"
  ],
  "form": [
    "accept",
    "accept-charset",
    "action",
    "autocomplete",
    "enctype",
    "formaction",
    "formenctype",
    "formmethod",
    "formnovalidate",
    "formtarget",
    "method",
    "name",
    "novalidate",
    "off",
    "on",
    "rel",
    "target"
  ],
  "form-associated custom elements": [
    "readonly"
  ],
  "form/enctype": [
    "application/x-www-form-urlencoded",
    "multipart/form-data",
    "text/plain"
  ],
  "form/method": [
    "dialog",
    "get",
    "post"
  ],
  "from I/O queue": [
    "convert"
  ],
  "gap": [
    "normal"
  ],
  "global": [
    "class",
    "id",
    "slot"
  ],
  "global object": [
    "csp list",
    "realm"
  ],
  "glyph": [
    "arabic-form",
    "d",
    "glyph-name",
    "horiz-adv-x",
    "lang",
    "orientation",
    "unicode",
    "vert-adv-y",
    "vert-origin-x",
    "vert-origin-y"
  ],
  "grid": [
    "<'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>?",
    "[ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>"
  ],
  "grid-auto-flow": [
    "column",
    "dense",
    "row"
  ],
  "grid-column-end": [
    "<grid-line>"
  ],
  "grid-column-start": [
    "<grid-line>"
  ],
  "grid-row-end": [
    "<grid-line>"
  ],
  "grid-row-start": [
    "<grid-line>"
  ],
  "grid-template": [
    "<'grid-template-rows'> / <'grid-template-columns'>",
    "[ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?",
    "none"
  ],
  "grid-template-areas": [
    "<string>+",
    "named cell token",
    "none",
    "null cell token",
    "trash token"
  ],
  "grid-template-columns": [
    "<flex>",
    "<length-percentage>",
    "<track-list> | <auto-track-list>",
    "auto",
    "fit-content()",
    "flex factor",
    "max-content",
    "min-content",
    "minmax()",
    "none",
    "sizing function",
    "subgrid",
    "subgrid <line-name-list>?",
    "track sizing function"
  ],
  "grid-template-rows": [
    "<flex>",
    "<length-percentage>",
    "<track-list> | <auto-track-list>",
    "auto",
    "fit-content()",
    "flex factor",
    "max-content",
    "min-content",
    "minmax()",
    "none",
    "sizing function",
    "subgrid",
    "subgrid <line-name-list>?",
    "track sizing function"
  ],
  "h1": [
    "align"
  ],
  "h2": [
    "align"
  ],
  "h3": [
    "align"
  ],
  "h4": [
    "align"
  ],
  "h5": [
    "align"
  ],
  "h6": [
    "align"
  ],
  "hanging-punctuation": [
    "allow-end",
    "first",
    "force-end",
    "last",
    "none"
  ],
  "head": [
    "profile"
  ],
  "header": [
    "name",
    "value"
  ],
  "header list": [
    "append",
    "combine",
    "contains",
    "delete",
    "does not contain",
    "extract a length",
    "extract a mime type",
    "extracting a length",
    "extracting a mime type",
    "get",
    "get a structured field value",
    "get, decode, and split",
    "getting, decoding, and splitting",
    "set",
    "set a structured field value",
    "sort and combine"
  ],
  "header value": [
    "normalize"
  ],
  "height": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "auto",
    "contain",
    "fit-content",
    "fit-content(<length-percentage [0,âˆž]>)",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content",
    "stretch"
  ],
  "hkern": [
    "g1",
    "g2",
    "k",
    "u1",
    "u2"
  ],
  "host": [
    "equal",
    "public suffix",
    "registrable domain"
  ],
  "hr": [
    "align",
    "color",
    "noshade",
    "size",
    "width"
  ],
  "hsl()": [
    "alpha",
    "h",
    "hsl",
    "l",
    "s"
  ],
  "html": [
    "manifest",
    "version"
  ],
  "html-global": [
    "autocapitalize",
    "autofocus",
    "contenteditable",
    "dir",
    "draggable",
    "enterkeyhint",
    "exportparts",
    "hidden",
    "inputmode",
    "is",
    "itemid",
    "itemref",
    "itemscope",
    "itemtype",
    "lang",
    "part",
    "spellcheck",
    "style",
    "title",
    "translate"
  ],
  "html-global/autocapitalize": [
    "characters",
    "none",
    "off",
    "on",
    "sentences",
    "words"
  ],
  "html-global/dir": [
    "auto",
    "ltr",
    "rtl"
  ],
  "html-global/enterkeyhint": [
    "done",
    "enter",
    "go",
    "next",
    "previous",
    "search",
    "send"
  ],
  "html-global/hidden": [
    "hidden",
    "until-found"
  ],
  "html-global/inputmode": [
    "decimal",
    "email",
    "none",
    "numeric",
    "search",
    "tel",
    "text",
    "url"
  ],
  "htmlcollection": [
    "length"
  ],
  "htmlsvg-global": [
    "nonce",
    "tabindex"
  ],
  "hwb()": [
    "alpha",
    "b",
    "h",
    "hwb",
    "w"
  ],
  "hyphenate-character": [
    "<string>",
    "auto"
  ],
  "hyphenate-limit-chars": [
    "auto"
  ],
  "hyphenate-limit-lines": [
    "always",
    "column",
    "none",
    "page",
    "spread"
  ],
  "hyphens": [
    "auto",
    "manual",
    "none"
  ],
  "icon purpose": [
    "any",
    "maskable",
    "monochrome"
  ],
  "iframe": [
    "align",
    "allow",
    "allowfullscreen",
    "allowtransparency",
    "frameborder",
    "framespacing",
    "height",
    "hspace",
    "loading",
    "longdesc",
    "marginheight",
    "marginwidth",
    "name",
    "policy object",
    "referrerpolicy",
    "sandbox",
    "scrolling",
    "src",
    "srcdoc",
    "vspace",
    "width"
  ],
  "iframe/loading": [
    "eager",
    "lazy"
  ],
  "iframe/sandbox": [
    "allow-downloads",
    "allow-forms",
    "allow-modals",
    "allow-orientation-lock",
    "allow-pointer-lock",
    "allow-popups",
    "allow-popups-to-escape-sandbox",
    "allow-presentation",
    "allow-same-origin",
    "allow-scripts",
    "allow-top-navigation",
    "allow-top-navigation-by-user-activation",
    "allow-top-navigation-to-custom-protocols"
  ],
  "image": [
    "crossorigin",
    "height",
    "href",
    "preserveaspectratio",
    "width",
    "x",
    "xlink:href",
    "xlink:title",
    "y"
  ],
  "image request": [
    "current url",
    "image data",
    "state"
  ],
  "image resource": [
    "label",
    "sizes",
    "src",
    "type"
  ],
  "image-orientation": [
    "",
    "<angle>",
    "flip",
    "from-image",
    "none"
  ],
  "image-rendering": [
    "auto",
    "crisp-edges",
    "high-quality",
    "pixelated",
    "smooth"
  ],
  "image-resolution": [
    "<resolution>",
    "from-image",
    "snap"
  ],
  "image-set()": [
    "type()"
  ],
  "img": [
    "align",
    "alt",
    "border",
    "crossorigin",
    "decoding",
    "height",
    "hspace",
    "ismap",
    "loading",
    "longdesc",
    "lowsrc",
    "name",
    "referrerpolicy",
    "sizes",
    "src",
    "srcset",
    "usemap",
    "vspace",
    "width"
  ],
  "img/crossorigin": [
    "anonymous",
    "use-credentials"
  ],
  "img/decoding": [
    "async",
    "auto",
    "sync"
  ],
  "img/loading": [
    "eager",
    "lazy"
  ],
  "in": [
    "backgroundalpha",
    "backgroundimage",
    "fillpaint",
    "sourcealpha",
    "sourcegraphic",
    "strokepaint"
  ],
  "index": [
    "key path",
    "keys",
    "list of records",
    "multientry flag",
    "name",
    "records",
    "referenced",
    "referenced value",
    "references",
    "unique flag",
    "values"
  ],
  "index-handle": [
    "index",
    "name",
    "object store handle",
    "transaction"
  ],
  "initial-letter": [
    "<integer [1,âˆž]>",
    "<integer>",
    "<number [1,âˆž]>",
    "<number>",
    "drop",
    "initial letter sink",
    "initial letter size",
    "normal",
    "raise"
  ],
  "initial-letter-align": [
    "alphabetic",
    "border-box",
    "hanging",
    "ideographic",
    "leading"
  ],
  "initial-letter-wrap": [
    "<length>",
    "<percentage>",
    "all",
    "first",
    "grid",
    "none"
  ],
  "inline-size": [
    "contain",
    "fit-content",
    "stretch"
  ],
  "inline-sizing": [
    "normal",
    "stretch"
  ],
  "input": [
    "accept",
    "align",
    "alt",
    "autocomplete",
    "border",
    "checked",
    "dirname",
    "disabled",
    "form",
    "hspace",
    "ismap",
    "list",
    "max",
    "maxlength",
    "min",
    "minlength",
    "multiple",
    "name",
    "number",
    "pattern",
    "placeholder",
    "readonly",
    "required",
    "size",
    "src",
    "step",
    "title",
    "type",
    "usemap",
    "value",
    "vspace"
  ],
  "input-security": [
    "auto",
    "none"
  ],
  "input-value": [
    "filename"
  ],
  "input/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "input/type": [
    "button",
    "checkbox",
    "color",
    "date",
    "datetime-local",
    "email",
    "file",
    "hidden",
    "image",
    "month",
    "number",
    "password",
    "radio",
    "range",
    "reset",
    "search",
    "submit",
    "tel",
    "text",
    "time",
    "url",
    "week"
  ],
  "ins": [
    "cite",
    "datetime"
  ],
  "insecure requests policy": [
    "do not upgrade",
    "upgrade"
  ],
  "inset": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset-block": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset-block-end": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset-block-start": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset-inline": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset-inline-end": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset-inline-end inset-block": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset-inline-start": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "interface": [
    "include",
    "inclusive inherited interfaces",
    "inherit"
  ],
  "intersectionobserver": [
    "observe",
    "unobserve"
  ],
  "intersectionobserverentry": [
    "isIntersecting",
    "target"
  ],
  "iteration": [
    "break",
    "continue",
    "while"
  ],
  "job": [
    "client",
    "containing job queue",
    "force bypass cache flag",
    "job promise",
    "job type",
    "list of equivalent jobs",
    "referrer",
    "scope url",
    "script url",
    "storage key",
    "update via cache mode",
    "worker type"
  ],
  "justify-content": [
    "center",
    "end",
    "flex-end",
    "flex-start",
    "left",
    "normal",
    "right",
    "space-around",
    "space-between",
    "space-evenly",
    "start",
    "stretch"
  ],
  "justify-items": [
    "baseline",
    "first",
    "first baseline",
    "last",
    "last baseline",
    "left",
    "legacy",
    "right"
  ],
  "justify-self": [
    "auto",
    "baseline",
    "center",
    "end",
    "first",
    "first baseline",
    "flex-end",
    "flex-start",
    "last",
    "last baseline",
    "left",
    "normal",
    "right",
    "self-end",
    "self-start",
    "start",
    "stretch"
  ],
  "kana": [
    "full-size",
    "full-size kana",
    "small",
    "small kana"
  ],
  "key": [
    "type",
    "value"
  ],
  "key generator": [
    "current number"
  ],
  "key range": [
    "lower bound",
    "lower open flag",
    "upper bound",
    "upper open flag"
  ],
  "lab()": [
    "a",
    "alpha",
    "b",
    "l",
    "lab"
  ],
  "label": [
    "for"
  ],
  "layers": [
    "initialize the render state",
    "update the pending layers state"
  ],
  "layout API context": [
    "mode",
    "unique id",
    "work queue"
  ],
  "layout api work task": [
    "child break token",
    "layout child",
    "layout constraints",
    "promise",
    "task type"
  ],
  "layout definition": [
    "child input properties",
    "class constructor",
    "constructor valid flag",
    "input properties",
    "intrinsic sizes function",
    "intrinsic sizes generator function",
    "layout function",
    "layout generator function",
    "layout options"
  ],
  "lch()": [
    "alpha",
    "c",
    "h",
    "l",
    "lch"
  ],
  "leader()": [
    "<string>",
    "dotted",
    "solid",
    "space"
  ],
  "leading-trim": [
    "both",
    "end",
    "normal",
    "start"
  ],
  "left": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "legacy platform object": [
    "getownproperty"
  ],
  "legend": [
    "align"
  ],
  "letter-spacing": [
    "<length>",
    "normal"
  ],
  "li": [
    "type",
    "value"
  ],
  "line": [
    "x1",
    "x2",
    "y1",
    "y2"
  ],
  "line-break": [
    "anywhere",
    "auto",
    "loose",
    "normal",
    "strict"
  ],
  "line-clamp": [
    "<integer>",
    "none"
  ],
  "line-gap-override!!descriptor": [
    "<percentage>",
    "normal"
  ],
  "line-grid": [
    "create",
    "match-parent"
  ],
  "line-height": [
    "<length>",
    "<number>",
    "<percentage>",
    "normal"
  ],
  "line-snap": [
    "baseline",
    "contain",
    "none"
  ],
  "linearGradient": [
    "xlink:href",
    "xlink:title"
  ],
  "link": [
    "as",
    "blocking",
    "charset",
    "color",
    "content language state",
    "content security policy state",
    "crossorigin",
    "default style state",
    "disabled",
    "encoding declaration state",
    "href",
    "hreflang",
    "imagesizes",
    "imagesrcset",
    "integrity",
    "media",
    "methods",
    "referrerpolicy",
    "refresh state",
    "rel",
    "rev",
    "set-cookie state",
    "sizes",
    "target",
    "title",
    "type",
    "urn",
    "x-ua-compatible state"
  ],
  "link/crossorigin": [
    "anonymous",
    "use-credentials"
  ],
  "list": [
    "append",
    "clone",
    "contain",
    "empty",
    "exist",
    "extend",
    "for each",
    "get the indices",
    "indices",
    "insert",
    "is empty",
    "is not empty",
    "item",
    "iterate",
    "prepend",
    "remove",
    "replace",
    "size",
    "sort",
    "sort in ascending order",
    "sort in descending order",
    "sorting",
    "sorting in ascending order",
    "sorting in descending order"
  ],
  "list-style-image": [
    "<image>",
    "none"
  ],
  "list-style-position": [
    "inside",
    "outside"
  ],
  "list-style-type": [
    "<counter-style>",
    "<string>",
    "armenian",
    "circle",
    "decimal",
    "decimal-leading-zero",
    "disc",
    "georgian",
    "lower-alpha",
    "lower-greek",
    "lower-latin",
    "lower-roman",
    "none",
    "square",
    "upper-alpha",
    "upper-latin",
    "upper-roman"
  ],
  "live range": [
    "clone the contents",
    "cloning the contents",
    "contained",
    "extract",
    "insert",
    "partially contained",
    "root"
  ],
  "local storage bucket": [
    "mode"
  ],
  "logical-page": [
    "recto",
    "verso"
  ],
  "logical-page-selector": [
    ":recto",
    ":verso"
  ],
  "manifest": [
    "background_color",
    "dir",
    "display",
    "icons",
    "id",
    "lang",
    "name",
    "navigation scope",
    "navigation scope of a manifest",
    "orientation",
    "prefer_related_applications",
    "related_applications",
    "scope",
    "short_name",
    "shortcuts",
    "start_url",
    "theme_color",
    "within scope"
  ],
  "manifest image resource": [
    "purpose"
  ],
  "map": [
    "clear",
    "clone",
    "contain",
    "entry",
    "exist",
    "for each",
    "get",
    "get the keys",
    "get the value",
    "get the values",
    "getting the keys",
    "getting the values",
    "is empty",
    "is not empty",
    "iterate",
    "key",
    "keys",
    "name",
    "remove",
    "set",
    "set the value",
    "size",
    "sort",
    "sort in ascending order",
    "sort in descending order",
    "sorting",
    "sorting in ascending order",
    "sorting in descending order",
    "value",
    "values"
  ],
  "margin": [
    "logical"
  ],
  "margin-break": [
    "auto",
    "discard",
    "keep"
  ],
  "margin-trim": [
    "all",
    "block",
    "block-end",
    "block-start",
    "in-flow",
    "inline",
    "inline-end",
    "inline-start",
    "none"
  ],
  "marker": [
    "markerheight",
    "markerunits",
    "markerwidth",
    "orient",
    "refx",
    "refy"
  ],
  "marker-side": [
    "match-parent",
    "match-self"
  ],
  "marquee": [
    "alternate",
    "behavior",
    "direction",
    "down",
    "left",
    "loop",
    "right",
    "scroll",
    "slide",
    "truespeed",
    "up"
  ],
  "mask": [
    "height",
    "maskcontentunits",
    "maskunits",
    "width",
    "x",
    "y"
  ],
  "mask-border-mode": [
    "alpha",
    "luminance"
  ],
  "mask-border-slice": [
    "fill"
  ],
  "mask-clip": [
    "border-box",
    "content-box",
    "fill-box",
    "no-clip",
    "padding-box",
    "stroke-box",
    "view-box"
  ],
  "mask-composite": [
    "add",
    "exclude",
    "intersect",
    "subtract"
  ],
  "mask-image": [
    "<url>"
  ],
  "mask-mode": [
    "alpha",
    "luminance",
    "match-source"
  ],
  "mask-origin": [
    "border-box",
    "content-box",
    "fill-box",
    "padding-box",
    "stroke-box",
    "view-box"
  ],
  "mask-type": [
    "alpha",
    "luminance"
  ],
  "maskContentUnits": [
    "objectboundingbox",
    "userspaceonuse"
  ],
  "maskUnits": [
    "objectboundingbox",
    "userspaceonuse"
  ],
  "matrix": [
    "is 2d",
    "m11 element",
    "m12 element",
    "m13 element",
    "m14 element",
    "m21 element",
    "m22 element",
    "m23 element",
    "m24 element",
    "m31 element",
    "m32 element",
    "m33 element",
    "m34 element",
    "m41 element",
    "m42 element",
    "m43 element",
    "m44 element",
    "validate and fixup",
    "validate and fixup (2d)"
  ],
  "max-block-size": [
    "contain",
    "fit-content",
    "stretch"
  ],
  "max-height": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "contain",
    "fit-content",
    "fit-content(<length-percentage [0,âˆž]>)",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content",
    "none",
    "stretch"
  ],
  "max-inline-size": [
    "contain",
    "fit-content",
    "stretch"
  ],
  "max-lines": [
    "<integer>",
    "none"
  ],
  "max-width": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "contain",
    "fit-content",
    "fit-content(<length-percentage [0,âˆž]>)",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content",
    "none",
    "stretch"
  ],
  "media": [
    "seek"
  ],
  "menu": [
    "compact",
    "label",
    "type"
  ],
  "meta": [
    "charset",
    "content",
    "http-equiv",
    "media",
    "name",
    "scheme"
  ],
  "meta/http-equiv": [
    "content-language",
    "content-security-policy",
    "content-type",
    "default-style",
    "refresh",
    "set-cookie",
    "x-ua-compatible"
  ],
  "meta/name": [
    "application-name",
    "author",
    "color-scheme",
    "description",
    "generator",
    "keywords",
    "referrer",
    "theme-color"
  ],
  "metadata": [
    "role"
  ],
  "meter": [
    "high",
    "low",
    "max",
    "min",
    "optimum",
    "value"
  ],
  "method": [
    "normalize"
  ],
  "min-block-size": [
    "contain",
    "fit-content",
    "stretch"
  ],
  "min-height": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "auto",
    "contain",
    "fit-content",
    "fit-content(<length-percentage [0,âˆž]>)",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content",
    "stretch"
  ],
  "min-inline-size": [
    "contain",
    "fit-content",
    "stretch"
  ],
  "min-intrinsic-size": [
    "legacy",
    "zero-if-extrinsic",
    "zero-if-scroll"
  ],
  "min-intrinsic-sizing": [
    "legacy",
    "zero-if-extrinsic",
    "zero-if-scroll"
  ],
  "min-width": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "auto",
    "contain",
    "fit-content",
    "fit-content(<length-percentage [0,âˆž]>)",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content",
    "stretch"
  ],
  "mix()": [
    "<end-value>",
    "<percentage>",
    "<start-value>"
  ],
  "mouseevent": [
    "relatedTarget"
  ],
  "navigationtimingtype": [
    "back_forward",
    "navigate",
    "reload"
  ],
  "no-composite": [
    "no-composite"
  ],
  "notification": [
    "action",
    "badge resource",
    "badge url",
    "body",
    "data",
    "direction",
    "icon resource",
    "icon url",
    "image resource",
    "image url",
    "language",
    "origin",
    "renotify preference",
    "require interaction preference",
    "service worker registration",
    "silent preference",
    "tag",
    "timestamp",
    "title",
    "vibration pattern"
  ],
  "nullable types": [
    "inner type"
  ],
  "object": [
    "align",
    "archive",
    "autocomplete",
    "border",
    "classid",
    "code",
    "codebase",
    "codetype",
    "data",
    "declare",
    "dirname",
    "disabled",
    "form",
    "height",
    "hspace",
    "name",
    "standby",
    "type",
    "typemustmatch",
    "usemap",
    "vspace",
    "width"
  ],
  "object-fit": [
    "contain",
    "cover",
    "fill",
    "none",
    "scale-down"
  ],
  "object-store": [
    "in-line keys",
    "key path",
    "list of records",
    "name",
    "out-of-line keys",
    "record"
  ],
  "object-store-handle": [
    "index set",
    "name",
    "object store",
    "transaction"
  ],
  "object-view-box": [
    "<basic-shape-rect>",
    "none"
  ],
  "object/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "observable array attribute": [
    "backing list",
    "delete an indexed value",
    "set an indexed value"
  ],
  "observable array exotic object": [
    "set the indexed value",
    "set the length",
    "setting the indexed value",
    "setting the length"
  ],
  "obtain a connection": [
    "http3only"
  ],
  "offset path": [
    "initial direction",
    "initial position"
  ],
  "offset-path": [
    "none",
    "ray()"
  ],
  "offset-rotate": [
    "auto",
    "reverse"
  ],
  "offsetpath": [
    "<size>",
    "contain",
    "initial direction",
    "initial position",
    "none",
    "path()",
    "ray()"
  ],
  "offsetpath-pathfunc": [
    "path()"
  ],
  "oklab()": [
    "a",
    "alpha",
    "b",
    "l",
    "oklab"
  ],
  "oklch()": [
    "alpha",
    "c",
    "h",
    "l",
    "oklch"
  ],
  "ol": [
    "compact",
    "reversed",
    "start",
    "type"
  ],
  "ol/type": [
    "1",
    "a",
    "i"
  ],
  "opaque framebuffer": [
    "session"
  ],
  "operator": [
    "arithmetic",
    "atop",
    "in",
    "lighter",
    "out",
    "over",
    "xor"
  ],
  "optgroup": [
    "disabled",
    "label"
  ],
  "option": [
    "disabled",
    "label",
    "name",
    "selected",
    "value"
  ],
  "optional argument": [
    "default value"
  ],
  "order": [
    "<integer>"
  ],
  "orientation": [
    "auto",
    "landscape",
    "portrait"
  ],
  "origin": [
    "domain",
    "host",
    "port",
    "prevent silent access flag",
    "requires user mediation",
    "scheme"
  ],
  "origin-bound one-time code message": [
    "code",
    "embedded host",
    "explanatory text",
    "top-level host"
  ],
  "outline-color": [
    "invert"
  ],
  "output": [
    "autocomplete",
    "dirname",
    "disabled",
    "for",
    "form",
    "name"
  ],
  "output/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "overflow": [
    "auto",
    "clip",
    "hidden",
    "scroll",
    "visible"
  ],
  "overflow-anchor": [
    "auto",
    "none"
  ],
  "overflow-clip-margin": [
    "<length [0,âˆž]>",
    "<visual-box>"
  ],
  "overflow-wrap": [
    "anywhere",
    "break-word",
    "normal"
  ],
  "overflow-x": [
    "auto",
    "clip",
    "hidden",
    "scroll",
    "visible"
  ],
  "overflow-y": [
    "auto",
    "clip",
    "hidden",
    "scroll",
    "visible"
  ],
  "overscroll-behavior": [
    "auto",
    "contain",
    "none"
  ],
  "overscroll-behavior-block": [
    "auto",
    "contain",
    "none"
  ],
  "overscroll-behavior-inline": [
    "auto",
    "contain",
    "none"
  ],
  "overscroll-behavior-x": [
    "auto",
    "contain",
    "none"
  ],
  "overscroll-behavior-y": [
    "auto",
    "contain",
    "none"
  ],
  "p": [
    "align"
  ],
  "padding": [
    "logical"
  ],
  "page-break-after": [
    "always",
    "auto",
    "avoid",
    "left",
    "right"
  ],
  "page-break-before": [
    "always",
    "auto",
    "avoid",
    "left",
    "right"
  ],
  "page-break-inside": [
    "always",
    "auto",
    "avoid",
    "avoid-column",
    "avoid-page",
    "avoid-region",
    "left",
    "right"
  ],
  "page-orientation": [
    "rotate-left",
    "rotate-right",
    "upright"
  ],
  "paint definition": [
    "class constructor",
    "constructor valid flag",
    "input properties",
    "paint function",
    "paintrenderingcontext2dsettings object"
  ],
  "parallel queue": [
    "enqueue steps",
    "enqueue the following steps"
  ],
  "path": [
    "d",
    "pathlength"
  ],
  "path()": [
    "<string>"
  ],
  "pattern": [
    "xlink:href",
    "xlink:title"
  ],
  "pause-after": [
    "<time>",
    "medium",
    "none",
    "strong",
    "weak",
    "x-strong",
    "x-weak"
  ],
  "pause-before": [
    "<time>",
    "medium",
    "none",
    "strong",
    "weak",
    "x-strong",
    "x-weak"
  ],
  "payment handler": [
    "payment method changed algorithm"
  ],
  "peak brightness": [
    "high peak brightness"
  ],
  "pending abort request": [
    "promise",
    "reason",
    "was already erroring"
  ],
  "pending processor construction data": [
    "node reference",
    "transferred port"
  ],
  "permission": [
    "denied",
    "grant",
    "granted",
    "lifetime",
    "prompt",
    "state",
    "states"
  ],
  "perspective": [
    "<length [0,âˆž]>",
    "none"
  ],
  "perspective()": [
    "none"
  ],
  "perspective-origin": [
    "<length>",
    "<percentage>",
    "bottom",
    "center",
    "left",
    "right",
    "top"
  ],
  "platform object": [
    "[[Detached]]"
  ],
  "point": [
    "w perspective",
    "x coordinate",
    "y coordinate",
    "z coordinate"
  ],
  "pointer-events": [
    "auto",
    "none"
  ],
  "policy": [
    "directive set",
    "disposition",
    "self-origin",
    "source"
  ],
  "policy container": [
    "csp list",
    "embedder policy",
    "referrer policy"
  ],
  "policy-controlled feature": [
    "bluetooth",
    "serial"
  ],
  "polygon": [
    "points"
  ],
  "polyline": [
    "points"
  ],
  "position": [
    "absolute",
    "fixed",
    "relative",
    "static",
    "sticky"
  ],
  "powerful feature": [
    "aspects",
    "default permission state",
    "extra permission data",
    "extra permission data constraints",
    "extra permission data type",
    "name",
    "permission descriptor type",
    "permission query algorithm",
    "permission result type",
    "permission revocation algorithm",
    "permission state constraints"
  ],
  "pre": [
    "width"
  ],
  "prescan a byte stream to determine its encoding": [
    "end condition"
  ],
  "primitiveUnits": [
    "objectboundingbox",
    "userspaceonuse"
  ],
  "print-color-adjust": [
    "economy",
    "exact"
  ],
  "processor construction data": [
    "name",
    "node",
    "options",
    "port"
  ],
  "progress": [
    "max",
    "value"
  ],
  "progressevent": [
    "lengthComputable",
    "loaded",
    "total"
  ],
  "promise": [
    "react",
    "reacting"
  ],
  "propdef-footnote-display": [
    "block",
    "compact",
    "inline"
  ],
  "property": [
    "scoped",
    "scoped properties",
    "scoped property",
    "scoped to a sub-tree",
    "scoped to an element",
    "scoped to an element's sub-tree",
    "scoped to the element",
    "scoped to the element's sub-tree",
    "scoped to the sub-tree"
  ],
  "public key credential source": [
    "id",
    "managing authenticator",
    "mutable item",
    "otherui",
    "privatekey",
    "rpid",
    "type",
    "userhandle"
  ],
  "pull-into descriptor": [
    "buffer",
    "buffer byte length",
    "byte length",
    "byte offset",
    "bytes filled",
    "element size",
    "reader type",
    "view constructor"
  ],
  "q": [
    "cite"
  ],
  "quadrilateral": [
    "point 1",
    "point 2",
    "point 3",
    "point 4"
  ],
  "queue": [
    "clone",
    "contain",
    "dequeue",
    "empty",
    "enqueue",
    "exist",
    "get the indices",
    "indices",
    "is empty",
    "is not empty",
    "item",
    "size",
    "sort",
    "sort in ascending order",
    "sort in descending order",
    "sorting",
    "sorting in ascending order",
    "sorting in descending order"
  ],
  "quotes": [
    "[<string> <string>]+",
    "auto",
    "none"
  ],
  "radial-gradient()": [
    "<ending-shape>",
    "<position>",
    "<size>",
    "gradient center"
  ],
  "radialGradient": [
    "xlink:href",
    "xlink:title"
  ],
  "range": [
    "collapsed",
    "end",
    "end node",
    "end offset",
    "select",
    "start",
    "start node",
    "start offset"
  ],
  "ray()": [
    "<angle>",
    "<size>",
    "contain"
  ],
  "read request": [
    "chunk steps",
    "close steps",
    "error steps"
  ],
  "read-into request": [
    "chunk steps",
    "close steps",
    "error steps"
  ],
  "readable byte stream queue entry": [
    "buffer",
    "byte length",
    "byte offset"
  ],
  "rect": [
    "height",
    "rx",
    "ry",
    "width",
    "x",
    "y"
  ],
  "rectangle": [
    "height dimension",
    "origin",
    "width dimension",
    "x coordinate",
    "y coordinate"
  ],
  "registered observer": [
    "observer",
    "options"
  ],
  "repeat()": [
    "auto-fill",
    "auto-fit"
  ],
  "repeating-conic-gradient()": [
    "<angle>",
    "<position>",
    "gradient center"
  ],
  "repeating-radial-gradient()": [
    "<ending-shape>",
    "<position>",
    "<size>",
    "gradient center"
  ],
  "report": [
    "attempts",
    "body",
    "destination",
    "timestamp",
    "type",
    "url",
    "user agent"
  ],
  "reporting": [
    "queue"
  ],
  "request": [
    "add a range header",
    "body",
    "cache mode",
    "client",
    "clone",
    "credentials mode",
    "cryptographic nonce metadata",
    "current url",
    "destination",
    "determine the network partition key",
    "determining the network partition key",
    "done flag",
    "effective directive",
    "error",
    "header list",
    "history-navigation flag",
    "initiator",
    "initiator type",
    "integrity metadata",
    "keepalive",
    "method",
    "mode",
    "open request",
    "origin",
    "parser metadata",
    "placed",
    "policy container",
    "prevent no-cache cache-control header modification flag",
    "priority",
    "processed",
    "processed flag",
    "redirect count",
    "redirect mode",
    "redirect-tainted origin",
    "referrer",
    "referrer policy",
    "reload-navigation flag",
    "render-blocking",
    "replaces client id",
    "reserved client",
    "response tainting",
    "result",
    "service-workers mode",
    "source",
    "timing allow failed flag",
    "transaction",
    "unsafe-request flag",
    "url",
    "url list",
    "use-cors-preflight flag",
    "use-url-credentials flag",
    "user-activation",
    "window"
  ],
  "request/destination": [
    "script-like"
  ],
  "response": [
    "aborted flag",
    "body",
    "body info",
    "cache state",
    "clone",
    "cors-exposed header-name list",
    "header list",
    "location url",
    "range-requested flag",
    "request-includes-credentials",
    "service worker timing info",
    "status",
    "status message",
    "timing allow passed flag",
    "type",
    "url",
    "url list"
  ],
  "response body info": [
    "decoded size",
    "encoded size"
  ],
  "rest-after": [
    "<time>",
    "medium",
    "none",
    "strong",
    "weak",
    "x-strong",
    "x-weak"
  ],
  "rest-before": [
    "<time>",
    "medium",
    "none",
    "strong",
    "weak",
    "x-strong",
    "x-weak"
  ],
  "result": [
    "<filter-primitive-reference>"
  ],
  "rgb()": [
    "alpha",
    "b",
    "g",
    "r"
  ],
  "right": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "rotate": [
    "none",
    "x",
    "y",
    "z"
  ],
  "row-gap": [
    "normal"
  ],
  "ruby-align": [
    "center",
    "space-around",
    "space-between",
    "start"
  ],
  "ruby-merge": [
    "auto",
    "merge",
    "separate"
  ],
  "ruby-overhang": [
    "auto",
    "none"
  ],
  "ruby-position": [
    "alternate",
    "inter-character",
    "inter-character annotation",
    "over",
    "under"
  ],
  "scalar value string": [
    "code point length",
    "length"
  ],
  "scale": [
    "none"
  ],
  "screenXArg": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "screenYArg": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "script": [
    "async",
    "base url",
    "blocking",
    "charset",
    "crossorigin",
    "defer",
    "error to rethrow",
    "event",
    "fetch options",
    "for",
    "href",
    "integrity",
    "language",
    "nomodule",
    "onabort",
    "onactivate",
    "onbegin",
    "onclick",
    "onend",
    "onerror",
    "onfocusin",
    "onfocusout",
    "onload",
    "onmousedown",
    "onmousemove",
    "onmouseout",
    "onmouseover",
    "onmouseup",
    "onrepeat",
    "onresize",
    "onscroll",
    "onunload",
    "onzoom",
    "parse error",
    "parser-inserted",
    "record",
    "referrerpolicy",
    "settings object",
    "src",
    "type",
    "xlink:href",
    "xlink:title"
  ],
  "script resource": [
    "has ever been evaluated flag",
    "https state",
    "policy container",
    "referrer policy"
  ],
  "script/crossorigin": [
    "anonymous",
    "use-credentials"
  ],
  "scroll timeline": [
    "calculate scroll timeline progress",
    "effective scroll offsets",
    "resolve scroll timeline offsets",
    "scroll timeline progress"
  ],
  "scroll-anchoring": [
    "anchor node"
  ],
  "scroll-behavior": [
    "auto",
    "smooth"
  ],
  "scroll-padding": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "auto"
  ],
  "scroll-padding-block": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "auto"
  ],
  "scroll-padding-block-end": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "auto"
  ],
  "scroll-padding-block-start": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "auto"
  ],
  "scroll-padding-inline": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "auto"
  ],
  "scroll-padding-inline-end": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "auto"
  ],
  "scroll-padding-inline-start": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "auto"
  ],
  "scroll-snap-align": [
    "center",
    "end",
    "none",
    "start"
  ],
  "scroll-snap-stop": [
    "always",
    "normal"
  ],
  "scroll-snap-type": [
    "block",
    "both",
    "inline",
    "mandatory",
    "none",
    "proximity",
    "x",
    "y"
  ],
  "scroll-start": [
    "<length-percentage [0,âˆž]>",
    "auto",
    "center",
    "end",
    "start"
  ],
  "scroll-start-block": [
    "<length-percentage [0,âˆž]>",
    "auto",
    "center",
    "end",
    "start"
  ],
  "scroll-start-inline": [
    "<length-percentage [0,âˆž]>",
    "auto",
    "center",
    "end",
    "start"
  ],
  "scroll-start-target": [
    "auto",
    "none"
  ],
  "scroll-start-target-block": [
    "auto",
    "none"
  ],
  "scroll-start-target-inline": [
    "auto",
    "none"
  ],
  "scroll-start-target-x": [
    "auto",
    "none"
  ],
  "scroll-start-target-y": [
    "auto",
    "none"
  ],
  "scroll-start-x": [
    "<length-percentage [0,âˆž]>",
    "auto",
    "center",
    "end",
    "start"
  ],
  "scroll-start-y": [
    "<length-percentage [0,âˆž]>",
    "auto",
    "center",
    "end",
    "start"
  ],
  "scrollbar-color": [
    "<color>",
    "auto"
  ],
  "scrollbar-gutter": [
    "always",
    "auto",
    "both",
    "both-edges",
    "force",
    "match-parent",
    "stable"
  ],
  "scrollbar-width": [
    "auto",
    "none",
    "thin"
  ],
  "secondary view": [
    "secondary-views"
  ],
  "select": [
    "autocomplete",
    "dirname",
    "disabled",
    "drop-down box",
    "form",
    "list box",
    "multiple",
    "name",
    "required",
    "size"
  ],
  "select/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "selector": [
    "combinator",
    "subject",
    "subject of a selector",
    "subject of the selector"
  ],
  "service worker": [
    "classic scripts imported flag",
    "containing service worker registration",
    "functional events",
    "global object",
    "lifecycle events",
    "registration",
    "running",
    "script resource",
    "script resource map",
    "script url",
    "service worker events",
    "set of event types to handle",
    "set of extended events",
    "set of used scripts",
    "skip waiting flag",
    "start status",
    "state",
    "type"
  ],
  "service worker client": [
    "dedicated worker client",
    "discarded flag",
    "origin",
    "shared worker client",
    "window client",
    "worker client"
  ],
  "service worker registration": [
    "active worker",
    "installing worker",
    "last update check time",
    "navigation preload enabled flag",
    "navigation preload header value",
    "navigationpreloadmanager",
    "scope url",
    "stale",
    "storage key",
    "task queues",
    "unregistered",
    "update via cache mode",
    "waiting worker"
  ],
  "service worker timing info": [
    "fetch event dispatch time",
    "start time"
  ],
  "set": [
    "append",
    "clone",
    "contain",
    "empty",
    "exist",
    "for each",
    "get the indices",
    "indices",
    "insert",
    "intersection",
    "is empty",
    "is not empty",
    "item",
    "iterate",
    "onbegin",
    "onend",
    "onrepeat",
    "prepend",
    "remove",
    "replace",
    "replacing",
    "size",
    "sort",
    "sort in ascending order",
    "sort in descending order",
    "sorting",
    "sorting in ascending order",
    "sorting in descending order",
    "subset",
    "superset",
    "to",
    "union"
  ],
  "shadow root": [
    "part element map"
  ],
  "shape()": [
    "<arc-command>",
    "<arc-size>",
    "<arc-sweep>",
    "<by-to>",
    "<coordinate-pair>",
    "<curve-command>",
    "<hv-line-command>",
    "<line-command>",
    "<move-command>",
    "<smooth-command>",
    "arc",
    "by",
    "ccw",
    "close",
    "curve",
    "cw",
    "hline",
    "large",
    "line",
    "move",
    "small",
    "smooth",
    "to",
    "vline"
  ],
  "shape-image-threshold": [
    "<number>"
  ],
  "shape-inside": [
    "<basic-shape>",
    "<url>",
    "auto",
    "display",
    "outside-shape"
  ],
  "shape-margin": [
    "<length-percentage>",
    "<length>",
    "<percentage>"
  ],
  "shape-outside": [
    "<basic-shape>",
    "<image>",
    "border-box",
    "content-box",
    "margin-box",
    "none",
    "padding-box"
  ],
  "shortcut item": [
    "description",
    "icons",
    "name",
    "short_name",
    "url"
  ],
  "single-animation-timeline": [
    "auto",
    "none"
  ],
  "site": [
    "same site"
  ],
  "skeleton joint": [
    "radius"
  ],
  "slot": [
    "assigned nodes",
    "name"
  ],
  "slottable": [
    "assigned",
    "assigned slot",
    "manual slot assignment",
    "name"
  ],
  "source": [
    "auto",
    "height",
    "media",
    "none",
    "selector()",
    "sizes",
    "src",
    "srcset",
    "type",
    "width"
  ],
  "source list": [
    "allows all inline behavior"
  ],
  "spatial-navigation-action": [
    "auto",
    "focus",
    "scroll"
  ],
  "spatial-navigation-contain": [
    "auto",
    "contain"
  ],
  "spatial-navigation-function": [
    "grid",
    "normal"
  ],
  "speak": [
    "always",
    "auto",
    "never"
  ],
  "speak-as": [
    "digits",
    "literal-punctuation",
    "no-punctuation",
    "normal",
    "spell-out"
  ],
  "stack": [
    "clone",
    "contain",
    "empty",
    "exist",
    "get the indices",
    "indices",
    "is empty",
    "is not empty",
    "item",
    "pop",
    "push",
    "size",
    "sort",
    "sort in ascending order",
    "sort in descending order",
    "sorting",
    "sorting in ascending order",
    "sorting in descending order"
  ],
  "step-easing-function": [
    "step-end",
    "step-start",
    "steps()"
  ],
  "steps()": [
    "end",
    "jump-both",
    "jump-end",
    "jump-none",
    "jump-start",
    "start"
  ],
  "storage bottle": [
    "map",
    "proxy map reference set",
    "quota"
  ],
  "storage endpoint": [
    "identifier",
    "quota",
    "types"
  ],
  "storage key": [
    "equal",
    "origin"
  ],
  "storage proxy map": [
    "backing map"
  ],
  "stream": [
    "active",
    "audible",
    "inactive",
    "inaudible"
  ],
  "string": [
    "code point length",
    "concatenate",
    "concatenation",
    "convert",
    "ends with",
    "identical to",
    "is",
    "length",
    "percent-decode",
    "percent-encode after encoding",
    "position variable",
    "starts with",
    "utf-8 percent-encode"
  ],
  "string()": [
    "first",
    "first-except",
    "last",
    "start"
  ],
  "string-set": [
    "none"
  ],
  "stroke-align": [
    "center",
    "inset",
    "outset"
  ],
  "stroke-dash-corner": [
    "none"
  ],
  "stroke-dash-justify": [
    "compress",
    "dashes",
    "gaps",
    "none",
    "stretch"
  ],
  "stroke-dasharray": [
    "<length-percentage>+#",
    "none"
  ],
  "stroke-linecap": [
    "butt",
    "round",
    "square"
  ],
  "stroke-linejoin": [
    "arcs",
    "bevel",
    "crop",
    "fallback",
    "miter",
    "round"
  ],
  "stroke-miterlimit": [
    "<number>"
  ],
  "stroke-origin": [
    "border-box",
    "content-box",
    "fill-box",
    "match-parent",
    "padding-box",
    "stroke-box"
  ],
  "struct": [
    "item",
    "name"
  ],
  "style": [
    "blocking",
    "contentstyletype",
    "media",
    "title",
    "type"
  ],
  "subscript-position-override!!descriptor": [
    "<percentage>",
    "from-font",
    "normal"
  ],
  "subscript-size-override!!descriptor": [
    "<percentage>",
    "from-font",
    "normal"
  ],
  "sum value": [
    "unit map",
    "value"
  ],
  "superscript-position-override!!descriptor": [
    "<percentage>",
    "from-font",
    "normal"
  ],
  "superscript-size-override!!descriptor": [
    "<percentage>",
    "from-font",
    "normal"
  ],
  "supported open() feature name": [
    "height",
    "left",
    "top",
    "width"
  ],
  "svg": [
    "baseprofile",
    "contentscripttype",
    "contentstyletype",
    "height",
    "preserveaspectratio",
    "version",
    "viewbox",
    "width",
    "x",
    "y",
    "zoomandpan"
  ],
  "switch": [
    "externalresourcesrequired",
    "id",
    "requiredextensions",
    "requiredfeatures",
    "xml:base",
    "xml:lang",
    "xml:space"
  ],
  "symbol": [
    "refx",
    "refy"
  ],
  "system": [
    "symbolic"
  ],
  "table": [
    "align",
    "bgcolor",
    "border",
    "bordercolor",
    "cellpadding",
    "cellspacing",
    "datapagesize",
    "frame",
    "height",
    "rules",
    "summary",
    "width"
  ],
  "table-layout": [
    "auto",
    "fixed"
  ],
  "tbody": [
    "align",
    "char",
    "charoff",
    "height",
    "valign"
  ],
  "td": [
    "abbr",
    "align",
    "axis",
    "bgcolor",
    "char",
    "charoff",
    "colspan",
    "headers",
    "height",
    "nowrap",
    "rowspan",
    "scope",
    "valign",
    "width"
  ],
  "text": [
    "dx",
    "dy",
    "lengthadjust",
    "rotate",
    "textlength",
    "x",
    "y"
  ],
  "text-align": [
    "<string>",
    "alignment character",
    "center",
    "end",
    "justify",
    "justify-all",
    "left",
    "match-parent",
    "right",
    "start"
  ],
  "text-align-last": [
    "auto"
  ],
  "text-combine-upright": [
    "all",
    "digits <integer [2,4]>?",
    "digits <integer>?",
    "none"
  ],
  "text-decoration": [
    "blink",
    "line-through",
    "none",
    "overline",
    "underline"
  ],
  "text-decoration-line": [
    "blink",
    "grammar-error",
    "line-through",
    "none",
    "overline",
    "spelling-error",
    "underline"
  ],
  "text-decoration-skip": [
    "auto",
    "none"
  ],
  "text-decoration-skip-box": [
    "all",
    "none"
  ],
  "text-decoration-skip-ink": [
    "all",
    "auto",
    "none"
  ],
  "text-decoration-skip-inset": [
    "auto",
    "none"
  ],
  "text-decoration-skip-self": [
    "none",
    "objects"
  ],
  "text-decoration-skip-spaces": [
    "all",
    "end",
    "none",
    "start"
  ],
  "text-decoration-style": [
    "wavy"
  ],
  "text-decoration-thickness": [
    "<length>",
    "<percentage>",
    "auto",
    "from-font"
  ],
  "text-direction": [
    "auto",
    "ltr",
    "rtl"
  ],
  "text-edge": [
    "alphabetic",
    "cap",
    "ex",
    "ideographic",
    "ideographic-ink",
    "leading",
    "text"
  ],
  "text-emphasis-position": [
    "left",
    "over",
    "right",
    "under"
  ],
  "text-emphasis-skip": [
    "narrow",
    "punctuation",
    "spaces",
    "symbols"
  ],
  "text-emphasis-style": [
    "<string>",
    "circle",
    "dot",
    "double-circle",
    "filled",
    "none",
    "sesame",
    "triangle"
  ],
  "text-group-align": [
    "center",
    "end",
    "left",
    "none",
    "right",
    "start"
  ],
  "text-indent": [
    "<length>",
    "<percentage>",
    "each-line",
    "hanging"
  ],
  "text-justify": [
    "auto",
    "distribute",
    "inter-character",
    "inter-word",
    "none"
  ],
  "text-orientation": [
    "mixed",
    "sideways",
    "sideways-right",
    "upright"
  ],
  "text-overflow": [
    "clip",
    "ellipsis",
    "fade",
    "fade()"
  ],
  "text-size-adjust": [
    "<percentage [0,âˆž]>",
    "auto",
    "none"
  ],
  "text-space-collapse": [
    "collapse",
    "discard",
    "preserve",
    "preserve-breaks",
    "preserve-spaces"
  ],
  "text-space-trim": [
    "discard-after",
    "discard-before",
    "trim-inner"
  ],
  "text-spacing": [
    "allow-end",
    "auto",
    "ideograph-alpha",
    "ideograph-numeric",
    "no-compress",
    "none",
    "normal",
    "punctuation",
    "space-adjacent",
    "space-end",
    "space-first",
    "space-start",
    "trim-adjacent",
    "trim-end",
    "trim-start"
  ],
  "text-text-emphasis": [
    "open"
  ],
  "text-transform": [
    "capitalize",
    "full-size-kana",
    "full-width",
    "lowercase",
    "none",
    "uppercase"
  ],
  "text-underline-offset": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "text-underline-position": [
    "auto",
    "from-font",
    "left",
    "right",
    "under"
  ],
  "text-wrap": [
    "balance",
    "nowrap",
    "pretty",
    "stable",
    "wrap"
  ],
  "textPath": [
    "href",
    "method",
    "path",
    "side",
    "spacing",
    "startoffset",
    "xlink:href",
    "xlink:title"
  ],
  "textarea": [
    "autocomplete",
    "character height",
    "character width",
    "cols",
    "dirname",
    "disabled",
    "form",
    "maxlength",
    "minlength",
    "name",
    "placeholder",
    "readonly",
    "required",
    "rows",
    "wrap"
  ],
  "textarea/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "textarea/wrap": [
    "hard",
    "soft"
  ],
  "texttrack": [
    "showing"
  ],
  "texttrack-kind": [
    "captions",
    "chapters",
    "descriptions",
    "metadata",
    "subtitles"
  ],
  "th": [
    "abbr",
    "align",
    "axis",
    "bgcolor",
    "char",
    "charoff",
    "colspan",
    "headers",
    "height",
    "nowrap",
    "rowspan",
    "scope",
    "valign",
    "width"
  ],
  "th/scope": [
    "auto",
    "col",
    "colgroup",
    "row",
    "rowgroup"
  ],
  "time": [
    "datetime"
  ],
  "timeline": [
    "active phase",
    "after phase",
    "before phase",
    "current time",
    "inactive phase",
    "phase",
    "timeline active phase",
    "timeline after phase",
    "timeline before phase",
    "timeline inactive phase",
    "timeline phase"
  ],
  "to I/O queue": [
    "convert"
  ],
  "top": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "top layer": [
    "add"
  ],
  "top-level browsing context": [
    "browsing session",
    "system focus"
  ],
  "tr": [
    "align",
    "bgcolor",
    "char",
    "charoff",
    "height",
    "valign"
  ],
  "track": [
    "captions",
    "chapters metadata",
    "default",
    "descriptions",
    "ended",
    "kind",
    "label",
    "metadata",
    "src",
    "srclang",
    "subtitles"
  ],
  "track/kind": [
    "captions",
    "chapters",
    "descriptions",
    "metadata",
    "subtitles"
  ],
  "transaction": [
    "abort",
    "aborted",
    "aborting",
    "active",
    "cleanup event loop",
    "cleanup indexed database transactions",
    "commit",
    "committed",
    "committing",
    "connection",
    "created",
    "durability hint",
    "error",
    "finished",
    "inactive",
    "lifetime",
    "mode",
    "overlap",
    "overlapping scope",
    "read-only transaction",
    "read/write transaction",
    "request list",
    "scope",
    "start",
    "started",
    "state"
  ],
  "transform": [
    "matrix()",
    "rotate()",
    "scale()",
    "scalex()",
    "scaley()",
    "skew()",
    "skewx()",
    "skewy()",
    "translate()",
    "translatex()",
    "translatey()"
  ],
  "transform-box": [
    "border-box",
    "content-box",
    "fill-box",
    "stroke-box",
    "view-box"
  ],
  "transform-origin": [
    "bottom",
    "center",
    "left",
    "right",
    "top"
  ],
  "transient registered observer": [
    "source"
  ],
  "transition": [
    "cancel",
    "combined duration",
    "complete",
    "end time",
    "end value",
    "reversing shortening factor",
    "reversing-adjusted start value",
    "start time",
    "start value"
  ],
  "transition-property": [
    "all",
    "none"
  ],
  "transitionevent": [
    "transitioncancel",
    "transitionend",
    "transitionrun",
    "transitionstart"
  ],
  "translate": [
    "none"
  ],
  "traversal": [
    "active flag",
    "filter",
    "root",
    "whattoshow"
  ],
  "tree": [
    "ancestor",
    "child",
    "children",
    "descendant",
    "first child",
    "following",
    "inclusive ancestor",
    "inclusive descendant",
    "inclusive sibling",
    "index",
    "last child",
    "next sibling",
    "parent",
    "participate",
    "participate in a tree",
    "participates in a tree",
    "preceding",
    "previous sibling",
    "root",
    "sibling"
  ],
  "tref": [
    "xlink:href"
  ],
  "tspan": [
    "dx",
    "dy",
    "rotate",
    "textlength",
    "x",
    "y"
  ],
  "tuple": [
    "item",
    "name"
  ],
  "type": [
    "discrete",
    "gamma",
    "huerotate",
    "identity",
    "linear",
    "luminancetoalpha",
    "matrix",
    "saturate",
    "table"
  ],
  "uievent": [
    "view"
  ],
  "ul": [
    "compact",
    "type"
  ],
  "unicode-bidi": [
    "bidi-override",
    "embed",
    "isolate",
    "isolate-override",
    "normal",
    "plaintext"
  ],
  "unicode-range": [
    "<urange>"
  ],
  "union": [
    "flattened member types",
    "member types"
  ],
  "url": [
    "blob url entry",
    "equal",
    "fragment",
    "host",
    "opaque path",
    "origin",
    "password",
    "path",
    "port",
    "query",
    "scheme",
    "set the password",
    "set the username",
    "username"
  ],
  "url()": [
    "local url flag"
  ],
  "url/equals": [
    "exclude fragments"
  ],
  "use": [
    "height",
    "width",
    "x",
    "xlink:href",
    "xlink:title",
    "y"
  ],
  "user agent": [
    "storage shed"
  ],
  "user-select": [
    "all",
    "auto",
    "contain",
    "none",
    "text"
  ],
  "user-zoom": [
    "fixed",
    "zoom"
  ],
  "value pair": [
    "key",
    "value"
  ],
  "value-with-size": [
    "size",
    "value"
  ],
  "vertical-align": [
    "<length>",
    "<percentage>",
    "alphabetic",
    "auto",
    "baseline",
    "bottom",
    "center",
    "central",
    "first",
    "ideographic",
    "last",
    "mathematical",
    "middle",
    "sub",
    "super",
    "text-bottom",
    "text-top",
    "top"
  ],
  "video": [
    "autoplay",
    "controls",
    "crossorigin",
    "height",
    "loop",
    "muted",
    "playsinline",
    "poster",
    "preload",
    "src",
    "width"
  ],
  "video/crossorigin": [
    "anonymous",
    "use-credentials"
  ],
  "video/preload": [
    "auto",
    "metadata",
    "none"
  ],
  "view": [
    "active",
    "current viewport scale",
    "eye",
    "projection matrix",
    "requested viewport scale",
    "viewport modifiable",
    "viewtarget"
  ],
  "viewArg": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "viewport-fit": [
    "auto",
    "contain",
    "cover"
  ],
  "viewport-length": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "violation": [
    "column number",
    "disposition",
    "effective directive",
    "element",
    "global object",
    "line number",
    "policy",
    "referrer",
    "resource",
    "sample",
    "source file",
    "status",
    "url"
  ],
  "visibility": [
    "collapse",
    "hidden",
    "visible"
  ],
  "voice-balance": [
    "<number>",
    "center",
    "left",
    "leftwards",
    "right",
    "rightwards"
  ],
  "voice-duration": [
    "<time>",
    "auto"
  ],
  "voice-family": [
    "<age>",
    "<family-name>",
    "<gender>",
    "<integer>",
    "child",
    "female",
    "male",
    "neutral",
    "old",
    "preserve",
    "young"
  ],
  "voice-pitch": [
    "<frequency>",
    "<percentage>",
    "<semitones>",
    "absolute",
    "high",
    "low",
    "medium",
    "semitone",
    "x-high",
    "x-low"
  ],
  "voice-range": [
    "<percentage>",
    "<semitones>",
    "absolute",
    "high",
    "low",
    "medium",
    "x-high",
    "x-low"
  ],
  "voice-rate": [
    "<percentage>",
    "fast",
    "medium",
    "normal",
    "slow",
    "x-fast",
    "x-slow"
  ],
  "voice-stress": [
    "moderate",
    "none",
    "normal",
    "reduced",
    "strong"
  ],
  "voice-volume": [
    "<decibel>",
    "loud",
    "medium",
    "silent",
    "soft",
    "x-loud",
    "x-soft"
  ],
  "white-space": [
    "break-spaces",
    "normal",
    "nowrap",
    "pre",
    "pre-line",
    "pre-wrap"
  ],
  "width": [
    "<length-percentage [0,âˆž]>",
    "<length-percentage>",
    "auto",
    "contain",
    "fit-content",
    "fit-content(<length-percentage [0,âˆž]>)",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content",
    "stretch"
  ],
  "will-change": [
    "<custom-ident>",
    "auto",
    "contents",
    "scroll-position"
  ],
  "word-boundary-detection": [
    "<lang>",
    "auto(<lang>)",
    "manual",
    "normal"
  ],
  "word-boundary-expansion": [
    "ideographic-space",
    "none",
    "space"
  ],
  "word-break": [
    "break-all",
    "break-word",
    "keep-all",
    "normal"
  ],
  "word-spacing": [
    "<length-percentages>",
    "<length>",
    "normal"
  ],
  "wrap-after": [
    "auto",
    "avoid",
    "avoid-flex",
    "avoid-line",
    "flex",
    "line"
  ],
  "wrap-before": [
    "auto",
    "avoid",
    "avoid-flex",
    "avoid-line",
    "flex",
    "line"
  ],
  "wrap-flow": [
    "'auto'",
    "'both'",
    "'clear'",
    "'end'",
    "'maximum'",
    "'minimum'",
    "'start'",
    "'wrap-flow'!!'auto'",
    "'wrap-flow'!!'both'",
    "'wrap-flow'!!'clear'",
    "'wrap-flow'!!'end'",
    "'wrap-flow'!!'maximum'",
    "'wrap-flow'!!'minimum'",
    "'wrap-flow'!!'start'",
    "auto",
    "both",
    "clear",
    "end",
    "maximum",
    "minimum",
    "start"
  ],
  "wrap-inside": [
    "auto",
    "avoid"
  ],
  "wrap-through": [
    "'none'",
    "'wrap'",
    "'wrap-through'!!'none'",
    "'wrap-through'!!'wrap'",
    "none",
    "wrap"
  ],
  "writing-mode": [
    "horizontal-tb",
    "sideways-lr",
    "sideways-rl",
    "vertical-lr",
    "vertical-rl"
  ],
  "writing-system": [
    "chinese",
    "japanese",
    "known",
    "korean",
    "unknown"
  ],
  "xmlhttprequest": [
    "responseXML"
  ],
  "z-index": [
    "auto"
  ],
  "zoom": [
    "auto"
  ]
}